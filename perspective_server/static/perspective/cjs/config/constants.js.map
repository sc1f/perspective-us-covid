{"version":3,"sources":["../../../src/js/config/constants.js"],"names":["CONFIG_ALIASES","row_pivot","col_pivot","col_pivots","column_pivot","filters","sorts","CONFIG_VALID_KEYS","NUMBER_AGGREGATES","STRING_AGGREGATES","BOOLEAN_AGGREGATES","SORT_ORDERS","SORT_ORDER_IDS","TYPE_AGGREGATES","string","float","integer","boolean","datetime","date","FILTER_OPERATORS","lessThan","greaterThan","equals","lessThanOrEquals","greaterThanOrEquals","doesNotEqual","isNull","isNotNull","isIn","isNotIn","contains","bitwiseAnd","bitwiseOr","and","or","beginsWith","endsWith","BOOLEAN_FILTERS","NUMBER_FILTERS","STRING_FILTERS","DATETIME_FILTERS","COLUMN_SEPARATOR_STRING","TYPE_FILTERS"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const CONFIG_ALIASES = {\n    row_pivot: \"row_pivots\",\n    \"row-pivot\": \"row_pivots\",\n    \"row-pivots\": \"row_pivots\",\n    col_pivot: \"column_pivots\",\n    col_pivots: \"column_pivots\",\n    column_pivot: \"column_pivots\",\n    \"column-pivot\": \"column_pivots\",\n    \"column-pivots\": \"column_pivots\",\n    filters: \"filter\",\n    sorts: \"sort\"\n};\n\nexport const CONFIG_VALID_KEYS = [\"viewport\", \"row_pivots\", \"column_pivots\", \"aggregates\", \"columns\", \"filter\", \"sort\", \"computed_columns\", \"row_pivot_depth\", \"filter_op\"];\n\nconst NUMBER_AGGREGATES = [\n    \"any\",\n    \"avg\",\n    \"count\",\n    \"distinct count\",\n    \"dominant\",\n    \"first by index\",\n    \"last by index\",\n    \"last\",\n    \"high\",\n    \"low\",\n    \"mean\",\n    \"median\",\n    \"pct sum parent\",\n    \"pct sum grand total\",\n    \"sum\",\n    \"sum abs\",\n    \"sum not null\",\n    \"unique\"\n];\n\nconst STRING_AGGREGATES = [\"any\", \"count\", \"distinct count\", \"distinct leaf\", \"dominant\", \"first by index\", \"last by index\", \"last\", \"unique\"];\n\nconst BOOLEAN_AGGREGATES = [\"any\", \"count\", \"distinct count\", \"distinct leaf\", \"dominant\", \"first by index\", \"last by index\", \"last\", \"unique\", \"and\", \"or\"];\n\nexport const SORT_ORDERS = [\"none\", \"asc\", \"desc\", \"col asc\", \"col desc\", \"asc abs\", \"desc abs\", \"col asc abs\", \"col desc abs\"];\n\nexport const SORT_ORDER_IDS = [2, 0, 1, 0, 1, 3, 4, 3, 4];\n\nexport const TYPE_AGGREGATES = {\n    string: STRING_AGGREGATES,\n    float: NUMBER_AGGREGATES,\n    integer: NUMBER_AGGREGATES,\n    boolean: BOOLEAN_AGGREGATES,\n    datetime: STRING_AGGREGATES,\n    date: STRING_AGGREGATES\n};\n\nexport const FILTER_OPERATORS = {\n    lessThan: \"<\",\n    greaterThan: \">\",\n    equals: \"==\",\n    lessThanOrEquals: \"<=\",\n    greaterThanOrEquals: \">=\",\n    doesNotEqual: \"!=\",\n    isNull: \"is null\",\n    isNotNull: \"is not null\",\n    isIn: \"in\",\n    isNotIn: \"not in\",\n    contains: \"contains\",\n    bitwiseAnd: \"&\",\n    bitwiseOr: \"|\",\n    and: \"and\",\n    or: \"or\",\n    beginsWith: \"begins with\",\n    endsWith: \"ends with\"\n};\n\nconst BOOLEAN_FILTERS = [\n    FILTER_OPERATORS.bitwiseAnd,\n    FILTER_OPERATORS.bitwiseOr,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.or,\n    FILTER_OPERATORS.and,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull\n];\n\nconst NUMBER_FILTERS = [\n    FILTER_OPERATORS.lessThan,\n    FILTER_OPERATORS.greaterThan,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.lessThanOrEquals,\n    FILTER_OPERATORS.greaterThanOrEquals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull\n];\n\nconst STRING_FILTERS = [\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.contains,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isIn,\n    FILTER_OPERATORS.isNotIn,\n    FILTER_OPERATORS.beginsWith,\n    FILTER_OPERATORS.endsWith,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull\n];\n\nconst DATETIME_FILTERS = [\n    FILTER_OPERATORS.lessThan,\n    FILTER_OPERATORS.greaterThan,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.lessThanOrEquals,\n    FILTER_OPERATORS.greaterThanOrEquals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull\n];\n\nexport const COLUMN_SEPARATOR_STRING = \"|\";\n\nexport const TYPE_FILTERS = {\n    string: STRING_FILTERS,\n    float: NUMBER_FILTERS,\n    integer: NUMBER_FILTERS,\n    boolean: BOOLEAN_FILTERS,\n    datetime: DATETIME_FILTERS,\n    date: DATETIME_FILTERS\n};\n"],"file":"constants.js"}