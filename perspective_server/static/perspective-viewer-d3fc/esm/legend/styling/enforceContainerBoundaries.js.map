{"version":3,"sources":["../../../../src/js/legend/styling/enforceContainerBoundaries.js"],"names":["d3","isElementOverflowing","getChartElement","margin","enforceContainerBoundaries","innerNode","offsetX","offsetY","chartNodeRect","select","getContainer","node","getBoundingClientRect","innerNodeRect","draggedInnerNodeRect","top","right","bottom","left","adjustedOffsets","x","y","boundaries","edge","dimension","forEach","bound","adjustment"],"mappings":"AAAA;;;;;;;;AASA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAAQC,oBAAR,QAAmC,mBAAnC;AACA,SAAQC,eAAR,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,MAAM,GAAG,EAAf;AAEP,OAAO,SAASC,0BAAT,CAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,OAAxD,EAAiE;AACpE,QAAMC,aAAa,GAAGR,EAAE,CACnBS,MADiB,CACVP,eAAe,CAACG,SAAD,CAAf,CAA2BK,YAA3B,EADU,EAEjBC,IAFiB,GAGjBC,qBAHiB,EAAtB;AAKA,QAAMC,aAAa,GAAGR,SAAS,CAACO,qBAAV,EAAtB;AAEA,QAAME,oBAAoB,GAAG;AACzBC,IAAAA,GAAG,EAAEF,aAAa,CAACE,GAAd,GAAoBR,OAApB,GAA8BJ,MADV;AAEzBa,IAAAA,KAAK,EAAEH,aAAa,CAACG,KAAd,GAAsBV,OAAtB,GAAgCH,MAFd;AAGzBc,IAAAA,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBV,OAAvB,GAAiCJ,MAHhB;AAIzBe,IAAAA,IAAI,EAAEL,aAAa,CAACK,IAAd,GAAqBZ,OAArB,GAA+BH;AAJZ,GAA7B;AAOA,QAAMgB,eAAe,GAAG;AAACC,IAAAA,CAAC,EAAEd,OAAJ;AAAae,IAAAA,CAAC,EAAEd;AAAhB,GAAxB;AACA,QAAMe,UAAU,GAAG,CACf;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GADe,EAEf;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAFe,EAGf;AAACD,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,SAAS,EAAE;AAAzB,GAHe,EAIf;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAJe,CAAnB;AAOAF,EAAAA,UAAU,CAACG,OAAX,CAAmBC,KAAK,IAAI;AACxB,QAAIzB,oBAAoB,CAACO,aAAD,EAAgBM,oBAAhB,EAAsCY,KAAK,CAACH,IAA5C,CAAxB,EAA2E;AACvE,YAAMI,UAAU,GAAGb,oBAAoB,CAACY,KAAK,CAACH,IAAP,CAApB,GAAmCf,aAAa,CAACkB,KAAK,CAACH,IAAP,CAAnE;AACAJ,MAAAA,eAAe,CAACO,KAAK,CAACF,SAAP,CAAf,GAAmCL,eAAe,CAACO,KAAK,CAACF,SAAP,CAAf,GAAmCG,UAAtE;AACH;AACJ,GALD;AAOA,SAAOR,eAAP;AACH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {isElementOverflowing} from \"../../utils/utils\";\nimport {getChartElement} from \"../../plugin/root\";\n\nexport const margin = 10;\n\nexport function enforceContainerBoundaries(innerNode, offsetX, offsetY) {\n    const chartNodeRect = d3\n        .select(getChartElement(innerNode).getContainer())\n        .node()\n        .getBoundingClientRect();\n\n    const innerNodeRect = innerNode.getBoundingClientRect();\n\n    const draggedInnerNodeRect = {\n        top: innerNodeRect.top + offsetY - margin,\n        right: innerNodeRect.right + offsetX + margin,\n        bottom: innerNodeRect.bottom + offsetY + margin,\n        left: innerNodeRect.left + offsetX - margin\n    };\n\n    const adjustedOffsets = {x: offsetX, y: offsetY};\n    const boundaries = [\n        {edge: \"right\", dimension: \"x\"},\n        {edge: \"left\", dimension: \"x\"},\n        {edge: \"top\", dimension: \"y\"},\n        {edge: \"bottom\", dimension: \"y\"}\n    ];\n\n    boundaries.forEach(bound => {\n        if (isElementOverflowing(chartNodeRect, draggedInnerNodeRect, bound.edge)) {\n            const adjustment = draggedInnerNodeRect[bound.edge] - chartNodeRect[bound.edge];\n            adjustedOffsets[bound.dimension] = adjustedOffsets[bound.dimension] - adjustment;\n        }\n    });\n\n    return adjustedOffsets;\n}\n"],"file":"enforceContainerBoundaries.js"}