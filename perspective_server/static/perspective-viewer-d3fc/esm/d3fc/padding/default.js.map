{"version":3,"sources":["../../../../src/js/d3fc/padding/default.js"],"names":["defaultPadding","pad","padUnit","padding","extent","delta","Error","arguments","length","undefined"],"mappings":"AAAA;;;;;;;;AASA,OAAO,MAAMA,cAAc,GAAG,MAAM;AAChC,MAAIC,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAV;AACA,MAAIC,OAAO,GAAG,SAAd;;AAEA,QAAMC,OAAO,GAAGC,MAAM,IAAI;AACtB,YAAQF,OAAR;AACI,WAAK,QAAL;AAAe;AACXE,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaH,GAAG,CAAC,CAAD,CAAhB;AACAG,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaH,GAAG,CAAC,CAAD,CAAhB;AACA;AACH;;AACD,WAAK,SAAL;AAAgB;AACZ,cAAII,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA9B;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaH,GAAG,CAAC,CAAD,CAAH,GAASI,KAAtB;AACAD,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaH,GAAG,CAAC,CAAD,CAAH,GAASI,KAAtB;AACA;AACH;;AACD;AACI,cAAM,IAAIC,KAAJ,CAAU,sBAAsBJ,OAAhC,CAAN;AAbR;;AAeA,WAAOE,MAAP;AACH,GAjBD;;AAmBAD,EAAAA,OAAO,CAACF,GAAR,GAAc,YAAW;AACrB,QAAI,CAACM,SAAS,CAACC,MAAf,EAAuB;AACnB,aAAOP,GAAP;AACH;;AACDA,IAAAA,GAAG,GAAGM,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBC,SAAxB,GAAoCF,SAAS,CAAC,CAAD,CAAnD;AACA,WAAOJ,OAAP;AACH,GAND;;AAQAA,EAAAA,OAAO,CAACD,OAAR,GAAkB,YAAW;AACzB,QAAI,CAACK,SAAS,CAACC,MAAf,EAAuB;AACnB,aAAON,OAAP;AACH;;AACDA,IAAAA,OAAO,GAAGK,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBC,SAAxB,GAAoCF,SAAS,CAAC,CAAD,CAAvD;AACA,WAAOJ,OAAP;AACH,GAND;;AAQA,SAAOA,OAAP;AACH,CAxCM","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const defaultPadding = () => {\n    let pad = [0, 0];\n    let padUnit = \"percent\";\n\n    const padding = extent => {\n        switch (padUnit) {\n            case \"domain\": {\n                extent[0] -= pad[0];\n                extent[1] += pad[1];\n                break;\n            }\n            case \"percent\": {\n                let delta = extent[1] - extent[0];\n                extent[0] -= pad[0] * delta;\n                extent[1] += pad[1] * delta;\n                break;\n            }\n            default:\n                throw new Error(\"Unknown padUnit: \" + padUnit);\n        }\n        return extent;\n    };\n\n    padding.pad = function() {\n        if (!arguments.length) {\n            return pad;\n        }\n        pad = arguments.length <= 0 ? undefined : arguments[0];\n        return padding;\n    };\n\n    padding.padUnit = function() {\n        if (!arguments.length) {\n            return padUnit;\n        }\n        padUnit = arguments.length <= 0 ? undefined : arguments[0];\n        return padding;\n    };\n\n    return padding;\n};\n"],"file":"default.js"}