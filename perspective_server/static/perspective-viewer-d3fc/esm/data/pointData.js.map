{"version":3,"sources":["../../../src/js/data/pointData.js"],"names":["labelFunction","splitIntoMultiSeries","pointData","settings","data","excludeEmpty","map","seriesToPoints","labelfn","mappedSeries","col","i","crossValue","mainValues","v","name","x","y","colorValue","realValues","undefined","size","key","row"],"mappings":"AAAA;;;;;;;;AAQA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAAQC,oBAAR,QAAmC,wBAAnC;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACtC,SAAOH,oBAAoB,CAACE,QAAD,EAAWC,IAAX,EAAiB;AAACC,IAAAA,YAAY,EAAE;AAAf,GAAjB,CAApB,CAA2DC,GAA3D,CAA+DF,IAAI,IAAIG,cAAc,CAACJ,QAAD,EAAWC,IAAX,CAArF,CAAP;AACH;;AAED,SAASG,cAAT,CAAwBJ,QAAxB,EAAkCC,IAAlC,EAAwC;AACpC,QAAMI,OAAO,GAAGR,aAAa,CAACG,QAAD,CAA7B;AAEA,QAAMM,YAAY,GAAGL,IAAI,CAACE,GAAL,CAAS,CAACI,GAAD,EAAMC,CAAN,MAAa;AACvCC,IAAAA,UAAU,EAAEJ,OAAO,CAACE,GAAD,EAAMC,CAAN,CADoB;AAEvCE,IAAAA,UAAU,EAAEV,QAAQ,CAACU,UAAT,CAAoBP,GAApB,CAAwBQ,CAAC,IAAIJ,GAAG,CAACI,CAAC,CAACC,IAAH,CAAhC,CAF2B;AAGvCC,IAAAA,CAAC,EAAEN,GAAG,CAACP,QAAQ,CAACU,UAAT,CAAoB,CAApB,EAAuBE,IAAxB,CAHiC;AAIvCE,IAAAA,CAAC,EAAEP,GAAG,CAACP,QAAQ,CAACU,UAAT,CAAoB,CAApB,EAAuBE,IAAxB,CAJiC;AAKvCG,IAAAA,UAAU,EAAEf,QAAQ,CAACgB,UAAT,CAAoB,CAApB,IAAyBT,GAAG,CAACP,QAAQ,CAACgB,UAAT,CAAoB,CAApB,CAAD,CAA5B,GAAuDC,SAL5B;AAMvCC,IAAAA,IAAI,EAAElB,QAAQ,CAACgB,UAAT,CAAoB,CAApB,IAAyBT,GAAG,CAACP,QAAQ,CAACgB,UAAT,CAAoB,CAApB,CAAD,CAA5B,GAAuDC,SANtB;AAOvCE,IAAAA,GAAG,EAAElB,IAAI,CAACkB,GAP6B;AAQvCC,IAAAA,GAAG,EAAEb;AARkC,GAAb,CAAT,CAArB;AAWAD,EAAAA,YAAY,CAACa,GAAb,GAAmBlB,IAAI,CAACkB,GAAxB;AACA,SAAOb,YAAP;AACH","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\nimport {labelFunction} from \"../axis/axisLabel\";\r\nimport {splitIntoMultiSeries} from \"./splitIntoMultiSeries\";\r\n\r\nexport function pointData(settings, data) {\r\n    return splitIntoMultiSeries(settings, data, {excludeEmpty: true}).map(data => seriesToPoints(settings, data));\r\n}\r\n\r\nfunction seriesToPoints(settings, data) {\r\n    const labelfn = labelFunction(settings);\r\n\r\n    const mappedSeries = data.map((col, i) => ({\r\n        crossValue: labelfn(col, i),\r\n        mainValues: settings.mainValues.map(v => col[v.name]),\r\n        x: col[settings.mainValues[0].name],\r\n        y: col[settings.mainValues[1].name],\r\n        colorValue: settings.realValues[2] ? col[settings.realValues[2]] : undefined,\r\n        size: settings.realValues[3] ? col[settings.realValues[3]] : undefined,\r\n        key: data.key,\r\n        row: col\r\n    }));\r\n\r\n    mappedSeries.key = data.key;\r\n    return mappedSeries;\r\n}\r\n"],"file":"pointData.js"}