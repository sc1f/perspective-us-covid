{"version":3,"sources":["../../src/js/view_model.js"],"names":["get_type_config","METADATA_MAP","memoize","tree_header","ViewModel","constructor","column_sizes","container","table","_column_sizes","_container","cells","rows","num_rows","length","_set_metadata","td","metadata","set","_get_or_create_metadata","has","get","_format_text","type","config","real_type","format_function","float","Intl","NumberFormat","integer","datetime","DateTimeFormat","date","func","format","path","_format_class","_format","Array","isArray","bind","fmt","cls","textContent","c","classList","add","_get_cell","tag","row_container","cidx","tr","document","createElement","appendChild","_get_row","ridx","_clean_columns","i","idx","children","removeChild","slice","_clean_rows"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\nimport {METADATA_MAP} from \"./constants\";\nimport {memoize} from \"./utils\";\nimport {tree_header} from \"./tree_row_header\";\n\n/******************************************************************************\n *\n * View Model\n *\n */\n\nexport class ViewModel {\n    constructor(column_sizes, container, table) {\n        this._column_sizes = column_sizes;\n        this._container = container;\n        this.table = table;\n        this.cells = [];\n        this.rows = [];\n    }\n\n    num_rows() {\n        return this.cells.length;\n    }\n\n    _set_metadata(td, metadata) {\n        METADATA_MAP.set(td, metadata);\n    }\n\n    _get_or_create_metadata(td) {\n        if (METADATA_MAP.has(td)) {\n            return METADATA_MAP.get(td);\n        } else {\n            const metadata = {};\n            METADATA_MAP.set(td, metadata);\n            return metadata;\n        }\n    }\n\n    @memoize\n    _format_text(type) {\n        const config = get_type_config(type);\n        const real_type = config.type || type;\n        const format_function = {\n            float: Intl.NumberFormat,\n            integer: Intl.NumberFormat,\n            datetime: Intl.DateTimeFormat,\n            date: Intl.DateTimeFormat\n        }[real_type];\n        if (format_function) {\n            const func = new format_function(\"en-us\", config.format);\n            return path => func.format(path);\n        } else {\n            return path => path;\n        }\n    }\n\n    @memoize\n    _format_class(type) {\n        const config = get_type_config(type);\n        const real_type = config.type || type;\n        if (real_type === \"integer\" || real_type === \"float\") {\n            return path => {\n                if (path > 0) {\n                    return \"pd-positive\";\n                } else if (path < 0) {\n                    return \"pd-negative\";\n                }\n            };\n        } else {\n            return () => \"\";\n        }\n    }\n\n    @memoize\n    _format(type) {\n        if (Array.isArray(type)) {\n            return {format: tree_header.bind(this)};\n        }\n        const fmt = this._format_text(type);\n        const cls = this._format_class(type);\n        return {\n            format(td, path) {\n                td.textContent = fmt(path);\n                const c = cls(path);\n                if (c) {\n                    td.classList.add(c);\n                }\n            }\n        };\n    }\n\n    _get_cell(tag = \"td\", row_container, cidx, tr) {\n        let td = row_container[cidx];\n        if (!td) {\n            td = row_container[cidx] = document.createElement(tag);\n            tr.appendChild(td);\n        }\n        return td;\n    }\n\n    _get_row(ridx) {\n        let tr = this.rows[ridx];\n        if (!tr) {\n            tr = this.rows[ridx] = document.createElement(\"tr\");\n            this.table.appendChild(tr);\n        }\n\n        let row_container = this.cells[ridx];\n        if (!row_container) {\n            row_container = this.cells[ridx] = [];\n        }\n\n        return {tr, row_container};\n    }\n\n    _clean_columns(cidx) {\n        for (let i = 0; i < this.rows.length; i++) {\n            const tr = this.rows[i];\n            const row_container = this.cells[i];\n            let idx = cidx[i] || cidx;\n            while (tr.children[idx]) {\n                tr.removeChild(tr.children[idx]);\n            }\n            this.cells[i] = row_container.slice(0, idx);\n        }\n    }\n\n    _clean_rows(ridx) {\n        while (this.table.children[ridx]) {\n            this.table.removeChild(this.table.children[ridx]);\n        }\n        this.rows = this.rows.slice(0, ridx);\n        this.cells = this.cells.slice(0, ridx);\n    }\n}\n"],"file":"view_model.js"}