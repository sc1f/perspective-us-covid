{"version":3,"sources":["../../src/js/tbody.js"],"names":["isEqual","ViewModel","DatagridBodyViewModel","_draw_td","ridx","val","id","is_open","cidx","column_name","type","selected_id","depth","ridx_offset","cidx_offset","tr","row_container","_get_row","is_selected","is_sub_selected","slice","length","classList","toggle","td","_get_cell","metadata","_get_or_create_metadata","column","size_key","className","override_width","_column_sizes","override","auto_width","auto","style","minWidth","maxWidth","remove","formatter","_format","undefined","textContent","value","row_path","format","Array","isArray","draw","container_height","column_state","view_state","column_data","id_column","row_height","next","obj","offsetHeight","_clean_rows","clean","_clean_columns"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport isEqual from \"lodash/isEqual\";\r\nimport {ViewModel} from \"./view_model\";\r\n\r\n/**\r\n * <tbody> view model.\r\n *\r\n * @class DatagridBodyViewModel\r\n */\r\nexport class DatagridBodyViewModel extends ViewModel {\r\n    _draw_td(ridx, val, id, is_open, {cidx, column_name, type}, {selected_id, depth, ridx_offset, cidx_offset}) {\r\n        const {tr, row_container} = this._get_row(ridx);\r\n        if (selected_id !== false) {\r\n            const is_selected = isEqual(id, selected_id);\r\n            const is_sub_selected = !is_selected && isEqual(id?.slice(0, selected_id?.length), selected_id);\r\n            tr.classList.toggle(\"pd-selected\", !!id && is_selected);\r\n            tr.classList.toggle(\"pd-sub-selected\", !!id && is_sub_selected);\r\n        }\r\n        const td = this._get_cell(\"td\", row_container, cidx, tr);\r\n        const metadata = this._get_or_create_metadata(td);\r\n        metadata.id = id;\r\n        metadata.cidx = cidx + cidx_offset;\r\n        metadata.type = type;\r\n        metadata.column = column_name;\r\n        metadata.size_key = `${column_name}|${type}`;\r\n        metadata.ridx = ridx + ridx_offset;\r\n        td.className = `pd-${type}`;\r\n        const override_width = this._column_sizes.override[metadata.size_key];\r\n        if (override_width) {\r\n            const auto_width = this._column_sizes.auto[metadata.size_key];\r\n            td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n            td.style.minWidth = override_width + \"px\";\r\n            td.style.maxWidth = override_width + \"px\";\r\n        } else {\r\n            td.classList.remove(\"pd-cell-clip\");\r\n            td.style.minWidth = \"\";\r\n            td.style.maxWidth = \"\";\r\n        }\r\n        const formatter = this._format(type);\r\n        if (val === undefined || val === null) {\r\n            td.textContent = \"-\";\r\n            metadata.value = null;\r\n            metadata.row_path = null;\r\n        } else if (formatter) {\r\n            formatter.format(td, val, type, val.length === depth, is_open);\r\n            metadata.value = Array.isArray(val) ? val[val.length - 1] : val;\r\n            metadata.row_path = val;\r\n            metadata.is_open = is_open;\r\n        } else {\r\n            td.textContent = val;\r\n            metadata.value = val;\r\n        }\r\n\r\n        return {td, metadata};\r\n    }\r\n\r\n    draw(container_height, column_state, view_state) {\r\n        const {cidx, column_data, id_column} = column_state;\r\n        let {row_height} = view_state;\r\n        let ridx = 0;\r\n        let td, metadata;\r\n        for (const val of column_data) {\r\n            const next = column_data[ridx + 1];\r\n            const id = id_column?.[ridx];\r\n            const obj = this._draw_td(ridx++, val, id, next?.length > val?.length, column_state, view_state);\r\n            td = obj.td;\r\n            metadata = obj.metadata;\r\n            row_height = row_height || td.offsetHeight;\r\n            if (ridx * row_height > container_height) {\r\n                break;\r\n            }\r\n        }\r\n        this._clean_rows(ridx);\r\n        return {td, cidx, ridx, metadata, row_height};\r\n    }\r\n\r\n    clean({ridx, cidx}) {\r\n        this._clean_rows(ridx);\r\n        this._clean_columns(cidx);\r\n    }\r\n}\r\n"],"file":"tbody.js"}