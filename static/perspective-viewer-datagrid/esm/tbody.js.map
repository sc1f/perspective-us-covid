{"version":3,"sources":["../../src/js/tbody.js"],"names":["isEqual","ViewModel","DatagridBodyViewModel","_draw_td","ridx","cidx","column","val","id","selected_id","type","depth","is_open","ridx_offset","cidx_offset","tr","row_container","_get_row","is_selected","is_sub_selected","slice","length","classList","toggle","td","_get_cell","metadata","_get_or_create_metadata","size_key","className","override_width","_column_sizes","override","auto_width","auto","style","minWidth","maxWidth","remove","formatter","_format","undefined","textContent","value","row_path","format","Array","isArray","draw","container_height","column_name","column_data","id_column","row_height","next","obj","offsetHeight","_clean_rows","clean","_clean_columns"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport isEqual from \"lodash/isEqual\";\r\nimport {ViewModel} from \"./view_model\";\r\n\r\n/**\r\n * <tbody> view model.\r\n *\r\n * @class DatagridBodyViewModel\r\n */\r\nexport class DatagridBodyViewModel extends ViewModel {\r\n    _draw_td(ridx, cidx, column, val, id, selected_id, type, depth, is_open, ridx_offset, cidx_offset) {\r\n        const {tr, row_container} = this._get_row(ridx);\r\n        if (selected_id !== false) {\r\n            const is_selected = isEqual(id, selected_id);\r\n            const is_sub_selected = !is_selected && isEqual(id?.slice(0, selected_id?.length), selected_id);\r\n            tr.classList.toggle(\"pd-selected\", !!id && is_selected);\r\n            tr.classList.toggle(\"pd-sub-selected\", !!id && is_sub_selected);\r\n        }\r\n        const td = this._get_cell(\"td\", row_container, cidx, tr);\r\n        const metadata = this._get_or_create_metadata(td);\r\n        metadata.id = id;\r\n        metadata.cidx = cidx + cidx_offset;\r\n        metadata.type = type;\r\n        metadata.column = column;\r\n        metadata.size_key = `${column}|${type}`;\r\n        metadata.ridx = ridx + ridx_offset;\r\n        td.className = `pd-${type}`;\r\n        const override_width = this._column_sizes.override[metadata.size_key];\r\n        if (override_width) {\r\n            const auto_width = this._column_sizes.auto[metadata.size_key];\r\n            td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n            td.style.minWidth = override_width + \"px\";\r\n            td.style.maxWidth = override_width + \"px\";\r\n        } else {\r\n            td.classList.remove(\"pd-cell-clip\");\r\n            td.style.minWidth = \"0\";\r\n            td.style.maxWidth = \"none\";\r\n        }\r\n        const formatter = this._format(type);\r\n        if (val === undefined || val === null) {\r\n            td.textContent = \"-\";\r\n            metadata.value = null;\r\n            metadata.row_path = null;\r\n        } else if (formatter) {\r\n            formatter.format(td, val, type, val.length === depth, is_open);\r\n            metadata.value = Array.isArray(val) ? val[val.length - 1] : val;\r\n            metadata.row_path = val;\r\n            metadata.is_open = is_open;\r\n        } else {\r\n            td.textContent = val;\r\n            metadata.value = val;\r\n        }\r\n\r\n        return {td, metadata};\r\n    }\r\n\r\n    draw(container_height, column_name, cidx, column_data, id_column, selected_id, type, depth, ridx_offset, cidx_offset, row_height) {\r\n        let ridx = 0;\r\n        let td, metadata;\r\n        for (const val of column_data) {\r\n            const next = column_data[ridx + 1];\r\n            const id = id_column?.[ridx];\r\n            const obj = this._draw_td(ridx++, cidx, column_name, val, id, selected_id, type, depth, next?.length > val?.length, ridx_offset, cidx_offset);\r\n            td = obj.td;\r\n            metadata = obj.metadata;\r\n            row_height = row_height || td.offsetHeight;\r\n            if (ridx * row_height > container_height) {\r\n                break;\r\n            }\r\n        }\r\n        this._clean_rows(ridx);\r\n        return {td, cidx, ridx, metadata, row_height};\r\n    }\r\n\r\n    clean({ridx, cidx}) {\r\n        this._clean_rows(ridx);\r\n        this._clean_columns(cidx);\r\n    }\r\n}\r\n"],"file":"tbody.js"}