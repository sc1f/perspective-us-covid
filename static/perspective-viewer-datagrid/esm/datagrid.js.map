{"version":3,"sources":["../../src/js/datagrid.js"],"names":["throttlePromise","registerPlugin","get_type_config","CONTAINER_STYLE","MATERIAL_STYLE","DEBUG","ROW_HEIGHT","DOUBLE_BUFFER_COLUMN","DOUBLE_BUFFER_ROW","DOUBLE_BUFFER_RECREATE","BROWSER_MAX_HEIGHT","ICON_MAP","asc","desc","PRIVATE","Symbol","METADATA_MAP","WeakMap","memoize","_target","_property","descriptor","cache","Map","func","value","new_func","arg","has","get","res","call","set","LOG","_log_fps","avg","reduce","x","y","length","rfps","vfps","nframes","console","log","toFixed","_start_profiling_loop","setInterval","bind","_tree_header","td","path","is_leaf","is_open","name","html","i","innerHTML","icon","classList","add","getCellConfig","view","config","row_idx","col_idx","row_pivots","column_pivots","start_row","end_row","r","to_json","row_paths","map","__ROW_PATH__","row_pivots_values","row_filters","pivot","index","pivot_value","undefined","filter","column_index","column_paths","Object","keys","result","row","column_filters","column_pivot_values","split","column_names","filters","concat","ViewModel","constructor","column_sizes","container","table","_column_sizes","_container","cells","rows","num_rows","_get_or_create_metadata","metadata","_format","type","real_type","format_function","float","Intl","NumberFormat","integer","datetime","DateTimeFormat","date","format","textContent","_get_cell","tag","row_container","cidx","tr","document","createElement","appendChild","_get_row","ridx","_clean_columns","idx","children","removeChild","slice","_clean_rows","DatagridHeaderViewModel","_draw_group_th","offset_cache","d","column","sort_dir","th","className","removeAttribute","style","minWidth","sort_txt","_redraw_previous","_draw_group","column_name","column_path","column_type","is_column_header","size_key","_draw_th","auto_width","auto","override_width","override","toggle","maxWidth","remove","draw","header_levels","alias","sort","group_header_cache","parts","is_new_group","setAttribute","parseInt","getAttribute","clean","column_path_2_type","schema","_is_equals_id","id","selected_id","Array","isArray","DatagridBodyViewModel","_draw_td","val","depth","ridx_offset","cidx_offset","is_selected","formatter","row_path","container_height","column_data","id_column","next","obj","offsetWidth","DatagridTableViewModel","table_clip","thead","tbody","header","body","fragment","createDocumentFragment","num_columns","Math","max","container_width","row_levels","is_resize","viewport","visible_columns","start_col","columns_data","to_columns","sidx","cont_body","cont_head","width","join","indices","missing_cidx","end_col","new_col","DatagridVirtualTableViewModel","_create_shadow_dom","set_element","elem","get_meta","get_tds","table_model","flat","get_ths","clear","_sticky_container","attachShadow","mode","shadowRoot","virtual_panel","scroll_container","addEventListener","_on_scroll","passive","_on_mousewheel","slot","table_staging","position","visibility","sticky_container","_on_click","_on_dblclick","_table_clip","_table_staging","_scroll_container","_virtual_panel","_calculate_row_range","nrows","preserve_scroll_position","total_scroll_height","offsetHeight","percent_scroll","scrollTop","virtual_panel_row_height","floor","relative_nrows","_nrows","offset","_calculate_column_range","total_scroll_width","percent_left","scrollLeft","max_scroll_column","_max_scroll_column","_validate_viewport","invalid_column","_start_col","invalid_row","_start_row","_end_row","_end_col","_needs_swap","force_redraw","_swap_in","args","parentElement","replaceChild","cloneNode","dispatchEvent","CustomEvent","detail","_swap_out","min","_update_virtual_panel_width","virtual_width","panel_width","_update_virtual_panel_height","virtual_panel_px_size","height","event","preventDefault","stopPropagation","returnValue","deltaY","deltaX","_reset_viewport","resize","_container_width","_container_height","reset_scroll","preserve_width","start","performance","now","get_config","nrowsp","catch","column_pathsp","schemap","_selected_id","push","attach","render_element","element","target","tagName","contains","Promise","setTimeout","is_button","_on_toggle","_on_resize_column","_on_sort","_on_select","pageX","scroll_left","move","_on_resize_column_move","up","removeEventListener","diff","hasAttribute","cell_config","bubbles","composed","selected","shiftKey","set_depth","collapse","expand","current_idx","findIndex","direction","new_sort","_increment_sort","altKey","JSON","stringify","window","customElements","define","DatagridPlugin","selectMode","deselectMode","update","div","e","create","hasOwnProperty","head","force","isConnected","_datavis"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AASA,SAAQA,eAAR,EAAyBC,cAAzB,QAA8C,6CAA9C;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,KAAd;AAEA,MAAMC,UAAU,GAAG,EAAnB,C,CAEA;AACA;AACA;;AACA,MAAMC,oBAAoB,GAAG,KAA7B;AACA,MAAMC,iBAAiB,GAAG,KAA1B;AACA,MAAMC,sBAAsB,GAAG,IAA/B,C,CAEA;AACA;;AACA,MAAMC,kBAAkB,GAAG,QAA3B;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,GAAG,EAAE,cADQ;AAEbC,EAAAA,IAAI,EAAE,gBAFO;AAGb,aAAW,QAHE;AAIb,cAAY,QAJC;AAKb,aAAW,YALE;AAMb,cAAY,eANC;AAOb,iBAAe,QAPF;AAQb,kBAAgB;AARH,CAAjB;AAWA;;;;;;AAMA,MAAMC,OAAO,GAAGC,MAAM,CAAC,kBAAD,CAAtB;AAEA,MAAMC,YAAY,GAAG,IAAIC,OAAJ,EAArB;AAEA;;;;;AAIA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiD;AAC7C,QAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AACA,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAxB;AACAJ,EAAAA,UAAU,CAACI,KAAX,GAAmBC,QAAnB;AACA,SAAOL,UAAP;;AACA,WAASK,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,QAAIL,KAAK,CAACM,GAAN,CAAUD,GAAV,CAAJ,EAAoB;AAChB,aAAOL,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAP;AACH,KAFD,MAEO;AACH,YAAMG,GAAG,GAAGN,IAAI,CAACO,IAAL,CAAU,IAAV,EAAgBJ,GAAhB,CAAZ;AACAL,MAAAA,KAAK,CAACU,GAAN,CAAUL,GAAV,EAAeG,GAAf;AACA,aAAOA,GAAP;AACH;AACJ;AACJ,C,CAED;;;AAEA,IAAIG,GAAG,GAAG,EAAV;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAMC,GAAG,GAAGF,GAAG,CAACG,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB,EAA4B,CAA5B,IAAiCL,GAAG,CAACM,MAAjD;AACA,QAAMC,IAAI,GAAGP,GAAG,CAACM,MAAJ,GAAa,CAA1B;AACA,QAAME,IAAI,GAAG,OAAON,GAApB;AACA,QAAMO,OAAO,GAAGT,GAAG,CAACM,MAApB;AACAI,EAAAA,OAAO,CAACC,GAAR,WAAeT,GAAG,CAACU,OAAJ,CAAY,CAAZ,CAAf,yBAA4CL,IAA5C,qBAA2DC,IAAI,CAACI,OAAL,CAAa,CAAb,CAA3D,sBAAsFH,OAAtF;AACAT,EAAAA,GAAG,GAAG,EAAN;AACH;;AAED,SAASa,qBAAT,GAAiC;AAC7B,MAAIzC,KAAJ,EAAW;AACP0C,IAAAA,WAAW,CAACb,QAAQ,CAACc,IAAT,CAAc,IAAd,CAAD,EAAsB,IAAtB,CAAX;AACH;AACJ,C,CAED;AACA;;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkD;AAC9C,MAAIC,IAAJ;;AACA,MAAIH,IAAI,CAACZ,MAAL,GAAc,CAAlB,EAAqB;AACjBe,IAAAA,IAAI,GAAGH,IAAI,CAACA,IAAI,CAACZ,MAAL,GAAc,CAAf,CAAX;AACH,GAFD,MAEO;AACHe,IAAAA,IAAI,GAAG,OAAP;AACH;;AACD,MAAIF,OAAJ,EAAa;AACT,QAAIG,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACZ,MAAzB,EAAiCiB,CAAC,EAAlC,EAAsC;AAClCD,MAAAA,IAAI,2CAAJ;AACH;;AACDL,IAAAA,EAAE,CAACO,SAAH,6DAAgEF,IAAhE,yDAAiHD,IAAjH;AACH,GAND,MAMO;AACH,UAAMI,IAAI,GAAGL,OAAO,GAAG,QAAH,GAAc,KAAlC;AACA,QAAIE,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACZ,MAAzB,EAAiCiB,CAAC,EAAlC,EAAsC;AAClCD,MAAAA,IAAI,2CAAJ;AACH;;AACDL,IAAAA,EAAE,CAACO,SAAH,6DAAgEF,IAAhE,gDAAwGG,IAAxG,kDAAkJJ,IAAlJ;AACH;;AACDJ,EAAAA,EAAE,CAACS,SAAH,CAAaC,GAAb,CAAiB,iBAAjB;AACH;;AAED,eAAeC,aAAf,CAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6D;AACzD,QAAMC,UAAU,GAAGH,MAAM,CAACG,UAA1B;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACI,aAA7B;AACA,QAAMC,SAAS,GAAGJ,OAAO,IAAI,CAAX,GAAeA,OAAf,GAAyB,CAA3C;AACA,QAAMK,OAAO,GAAGD,SAAS,GAAG,CAA5B;AACA,QAAME,CAAC,GAAG,MAAMR,IAAI,CAACS,OAAL,CAAa;AAACH,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAb,CAAhB;AACA,QAAMG,SAAS,GAAGF,CAAC,CAACG,GAAF,CAAMpC,CAAC,IAAIA,CAAC,CAACqC,YAAb,CAAlB;AACA,QAAMC,iBAAiB,GAAGH,SAAS,CAAC,CAAD,CAAT,IAAgB,EAA1C;AACA,QAAMI,WAAW,GAAGV,UAAU,CACzBO,GADe,CACX,CAACI,KAAD,EAAQC,KAAR,KAAkB;AACnB,UAAMC,WAAW,GAAGJ,iBAAiB,CAACG,KAAD,CAArC;AACA,WAAOC,WAAW,GAAG,CAACF,KAAD,EAAQ,IAAR,EAAcE,WAAd,CAAH,GAAgCC,SAAlD;AACH,GAJe,EAKfC,MALe,CAKR5C,CAAC,IAAIA,CALG,CAApB;AAMA,QAAM6C,YAAY,GAAGhB,UAAU,CAAC3B,MAAX,GAAoB,CAApB,GAAwB0B,OAAO,GAAG,CAAlC,GAAsCA,OAA3D;AACA,QAAMkB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYf,CAAC,CAAC,CAAD,CAAb,EAAkBY,YAAlB,CAArB;AACA,QAAMI,MAAM,GAAG;AAACC,IAAAA,GAAG,EAAEjB,CAAC,CAAC,CAAD;AAAP,GAAf;AACA,MAAIkB,cAAc,GAAG,EAArB;;AACA,MAAIL,YAAJ,EAAkB;AACd,UAAMM,mBAAmB,GAAGN,YAAY,CAACO,KAAb,CAAmB,GAAnB,CAA5B;AACAJ,IAAAA,MAAM,CAACK,YAAP,GAAsB,CAACF,mBAAmB,CAACA,mBAAmB,CAAClD,MAApB,GAA6B,CAA9B,CAApB,CAAtB;AACAiD,IAAAA,cAAc,GAAGrB,aAAa,CACzBM,GADY,CACR,CAACI,KAAD,EAAQC,KAAR,KAAkB;AACnB,YAAMC,WAAW,GAAGU,mBAAmB,CAACX,KAAD,CAAvC;AACA,aAAOC,WAAW,GAAG,CAACF,KAAD,EAAQ,IAAR,EAAcE,WAAd,CAAH,GAAgCC,SAAlD;AACH,KAJY,EAKZC,MALY,CAKL5C,CAAC,IAAIA,CALA,EAMZ4C,MANY,CAML,CAAC,IAAKxD,KAAL,CAAD,KAAiBA,KAAK,KAAK,cANtB,CAAjB;AAOH;;AAED,QAAMmE,OAAO,GAAG7B,MAAM,CAACkB,MAAP,CAAcY,MAAd,CAAqBjB,WAArB,EAAkCiB,MAAlC,CAAyCL,cAAzC,CAAhB;AACAF,EAAAA,MAAM,CAACvB,MAAP,GAAgB;AAAC6B,IAAAA;AAAD,GAAhB;AACA,SAAON,MAAP;AACH;AAED;;;;;;;IAMMQ,S,aAAN,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,YAAD,EAAeC,SAAf,EAA0BC,KAA1B,EAAiC;AACxC,SAAKC,aAAL,GAAqBH,YAArB;AACA,SAAKI,UAAL,GAAkBH,SAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKF,KAAL,CAAW9D,MAAlB;AACH;;AAEDiE,EAAAA,uBAAuB,CAACtD,EAAD,EAAK;AACxB,QAAIlC,YAAY,CAACY,GAAb,CAAiBsB,EAAjB,CAAJ,EAA0B;AACtB,aAAOlC,YAAY,CAACa,GAAb,CAAiBqB,EAAjB,CAAP;AACH,KAFD,MAEO;AACH,YAAMuD,QAAQ,GAAG,EAAjB;AACAzF,MAAAA,YAAY,CAACgB,GAAb,CAAiBkB,EAAjB,EAAqBuD,QAArB;AACA,aAAOA,QAAP;AACH;AACJ;;AAGDC,EAAAA,OADA,CACQC,IADR,EACc;AACV,UAAM5C,MAAM,GAAG7D,eAAe,CAACyG,IAAD,CAA9B;AACA,UAAMC,SAAS,GAAG7C,MAAM,CAAC4C,IAAP,IAAeA,IAAjC;AACA,UAAME,eAAe,GAAG;AACpBC,MAAAA,KAAK,EAAEC,IAAI,CAACC,YADQ;AAEpBC,MAAAA,OAAO,EAAEF,IAAI,CAACC,YAFM;AAGpBE,MAAAA,QAAQ,EAAEH,IAAI,CAACI,cAHK;AAIpBC,MAAAA,IAAI,EAAEL,IAAI,CAACI;AAJS,MAKtBP,SALsB,CAAxB;;AAMA,QAAIC,eAAJ,EAAqB;AACjB,YAAMrF,IAAI,GAAG,IAAIqF,eAAJ,CAAoB,OAApB,EAA6B9C,MAAM,CAACsD,MAApC,CAAb;AACA,aAAO;AACHA,QAAAA,MAAM,CAACnE,EAAD,EAAKC,IAAL,EAAW;AACbD,UAAAA,EAAE,CAACoE,WAAH,GAAiB9F,IAAI,CAAC6F,MAAL,CAAYlE,IAAZ,CAAjB;;AACA,cAAIyD,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,OAA7C,EAAsD;AAClD,gBAAIzD,IAAI,GAAG,CAAX,EAAc;AACVD,cAAAA,EAAE,CAACS,SAAH,CAAaC,GAAb,CAAiB,aAAjB;AACH,aAFD,MAEO,IAAIT,IAAI,GAAG,CAAX,EAAc;AACjBD,cAAAA,EAAE,CAACS,SAAH,CAAaC,GAAb,CAAiB,aAAjB;AACH;AACJ;AACJ;;AAVE,OAAP;AAYH,KAdD,MAcO,IAAI+C,IAAI,KAAK3B,SAAb,EAAwB;AAC3B,aAAO;AAACqC,QAAAA,MAAM,EAAEpE;AAAT,OAAP;AACH;AACJ;;AAEDsE,EAAAA,SAAS,CAACC,GAAG,GAAG,IAAP,EAAaC,aAAb,EAA4BC,IAA5B,EAAkCC,EAAlC,EAAsC;AAC3C,QAAIzE,EAAE,GAAGuE,aAAa,CAACC,IAAD,CAAtB;;AACA,QAAI,CAACxE,EAAL,EAAS;AACLA,MAAAA,EAAE,GAAGuE,aAAa,CAACC,IAAD,CAAb,GAAsBE,QAAQ,CAACC,aAAT,CAAuBL,GAAvB,CAA3B;AACAG,MAAAA,EAAE,CAACG,WAAH,CAAe5E,EAAf;AACH;;AACD,WAAOA,EAAP;AACH;;AAED6E,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,QAAIL,EAAE,GAAG,KAAKrB,IAAL,CAAU0B,IAAV,CAAT;;AACA,QAAI,CAACL,EAAL,EAAS;AACLA,MAAAA,EAAE,GAAG,KAAKrB,IAAL,CAAU0B,IAAV,IAAkBJ,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAvB;AACA,WAAK3B,KAAL,CAAW4B,WAAX,CAAuBH,EAAvB;AACH;;AAED,QAAIF,aAAa,GAAG,KAAKpB,KAAL,CAAW2B,IAAX,CAApB;;AACA,QAAI,CAACP,aAAL,EAAoB;AAChBA,MAAAA,aAAa,GAAG,KAAKpB,KAAL,CAAW2B,IAAX,IAAmB,EAAnC;AACH;;AAED,WAAO;AAACL,MAAAA,EAAD;AAAKF,MAAAA;AAAL,KAAP;AACH;;AAEDQ,EAAAA,cAAc,CAACP,IAAD,EAAO;AACjB,SAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8C,IAAL,CAAU/D,MAA9B,EAAsCiB,CAAC,EAAvC,EAA2C;AACvC,YAAMmE,EAAE,GAAG,KAAKrB,IAAL,CAAU9C,CAAV,CAAX;AACA,YAAMiE,aAAa,GAAG,KAAKpB,KAAL,CAAW7C,CAAX,CAAtB;AACA,UAAI0E,GAAG,GAAGR,IAAI,CAAClE,CAAD,CAAJ,IAAWkE,IAArB;;AACA,aAAOC,EAAE,CAACQ,QAAH,CAAYD,GAAZ,CAAP,EAAyB;AACrBP,QAAAA,EAAE,CAACS,WAAH,CAAeT,EAAE,CAACQ,QAAH,CAAYD,GAAZ,CAAf;AACH;;AACD,WAAK7B,KAAL,CAAW7C,CAAX,IAAgBiE,aAAa,CAACY,KAAd,CAAoB,CAApB,EAAuBH,GAAvB,CAAhB;AACH;AACJ;;AAEDI,EAAAA,WAAW,CAACN,IAAD,EAAO;AACd,WAAO,KAAK9B,KAAL,CAAWiC,QAAX,CAAoBH,IAApB,CAAP,EAAkC;AAC9B,WAAK9B,KAAL,CAAWkC,WAAX,CAAuB,KAAKlC,KAAL,CAAWiC,QAAX,CAAoBH,IAApB,CAAvB;AACH;;AACD,SAAK1B,IAAL,GAAY,KAAKA,IAAL,CAAU+B,KAAV,CAAgB,CAAhB,EAAmBL,IAAnB,CAAZ;AACA,SAAK3B,KAAL,GAAa,KAAKA,KAAL,CAAWgC,KAAX,CAAiB,CAAjB,EAAoBL,IAApB,CAAb;AACH;;AA9FW,C,2DAuBX9G,O;AA0EL;;;;;;;;AAOA,MAAMqH,uBAAN,SAAsCzC,SAAtC,CAAgD;AAC5C0C,EAAAA,cAAc,CAACC,YAAD,EAAeC,CAAf,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AAC9C,UAAM;AAACjB,MAAAA,EAAD;AAAKF,MAAAA;AAAL,QAAsB,KAAKM,QAAL,CAAcW,CAAd,CAA5B;;AACA,UAAMG,EAAE,GAAG,KAAKtB,SAAL,CAAe,IAAf,EAAqBE,aAArB,EAAoCgB,YAAY,CAACC,CAAD,CAAhD,EAAqDf,EAArD,CAAX;;AACA,UAAMD,IAAI,GAAGe,YAAY,CAACC,CAAD,CAAzB;AACAD,IAAAA,YAAY,CAACC,CAAD,CAAZ,IAAmB,CAAnB;AACAG,IAAAA,EAAE,CAACC,SAAH,GAAe,EAAf;AACAD,IAAAA,EAAE,CAACE,eAAH,CAAmB,SAAnB;AACAF,IAAAA,EAAE,CAACG,KAAH,CAASC,QAAT,GAAoB,GAApB;;AACA,UAAMxC,QAAQ,GAAG,KAAKD,uBAAL,CAA6BqC,EAA7B,CAAjB;;AACApC,IAAAA,QAAQ,CAACiB,IAAT,GAAgBA,IAAhB;;AAEA,QAAI,CAAAkB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAErG,MAAV,MAAqB,CAAzB,EAA4B;AACxBsG,MAAAA,EAAE,CAACpF,SAAH,GAAe,WAAWkF,MAAX,oDAAf;AACH,KAFD,MAEO;AACH,YAAMO,QAAQ,GAAGN,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEnE,GAAV,CAAcpC,CAAC,IAAI1B,QAAQ,CAAC0B,CAAD,CAA3B,CAAjB;AACAwG,MAAAA,EAAE,CAACpF,SAAH,GAAe,WAAWkF,MAAX,0DAAkEO,QAAlE,oDAAf;AACH;;AACD,WAAOL,EAAP;AACH;;AAEDM,EAAAA,gBAAgB,CAACV,YAAD,EAAeC,CAAf,EAAkB;AAC9B,UAAM;AAACf,MAAAA,EAAD;AAAKF,MAAAA;AAAL,QAAsB,KAAKM,QAAL,CAAcW,CAAd,CAA5B;;AACA,UAAMhB,IAAI,GAAGe,YAAY,CAACC,CAAD,CAAZ,GAAkB,CAA/B;;AACA,QAAIhB,IAAI,GAAG,CAAX,EAAc;AACV;AACH;;AACD,UAAMmB,EAAE,GAAG,KAAKtB,SAAL,CAAe,IAAf,EAAqBE,aAArB,EAAoCC,IAApC,EAA0CC,EAA1C,CAAX;;AACA,QAAI,CAACkB,EAAL,EAAS;AACTA,IAAAA,EAAE,CAAClF,SAAH,CAAaC,GAAb,CAAiB,iBAAjB;AACA,WAAOiF,EAAP;AACH;;AAEDO,EAAAA,WAAW,CAACT,MAAD,EAASU,WAAT,EAAsB1C,IAAtB,EAA4BkC,EAA5B,EAAgC;AACvC,UAAMpC,QAAQ,GAAG,KAAKD,uBAAL,CAA6BqC,EAA7B,CAAjB;;AACApC,IAAAA,QAAQ,CAAC6C,WAAT,GAAuBX,MAAvB;AACAlC,IAAAA,QAAQ,CAAC4C,WAAT,GAAuBA,WAAvB;AACA5C,IAAAA,QAAQ,CAAC8C,WAAT,GAAuB5C,IAAvB;AACAF,IAAAA,QAAQ,CAAC+C,gBAAT,GAA4B,KAA5B;AACA/C,IAAAA,QAAQ,CAACgD,QAAT,aAAuBd,MAAvB,cAAiChC,IAAjC;AACAkC,IAAAA,EAAE,CAACC,SAAH,GAAe,EAAf;AACH;;AAEDY,EAAAA,QAAQ,CAACf,MAAD,EAASU,WAAT,EAAsB1C,IAAtB,EAA4BkC,EAA5B,EAAgC;AACpC,UAAMpC,QAAQ,GAAG,KAAKD,uBAAL,CAA6BqC,EAA7B,CAAjB;;AACApC,IAAAA,QAAQ,CAAC6C,WAAT,GAAuBX,MAAvB;AACAlC,IAAAA,QAAQ,CAAC4C,WAAT,GAAuBA,WAAvB;AACA5C,IAAAA,QAAQ,CAAC8C,WAAT,GAAuB5C,IAAvB;AACAF,IAAAA,QAAQ,CAAC+C,gBAAT,GAA4B,IAA5B;AACA/C,IAAAA,QAAQ,CAACgD,QAAT,aAAuBd,MAAvB,cAAiChC,IAAjC;AACA,UAAMgD,UAAU,GAAG,KAAKxD,aAAL,CAAmByD,IAAnB,CAAwBnD,QAAQ,CAACgD,QAAjC,CAAnB;AACA,UAAMI,cAAc,GAAG,KAAK1D,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,CAAvB;AACAZ,IAAAA,EAAE,CAAClF,SAAH,CAAaC,GAAb,CAAiB+C,IAAjB;;AACA,QAAIkD,cAAJ,EAAoB;AAChBhB,MAAAA,EAAE,CAAClF,SAAH,CAAaoG,MAAb,CAAoB,cAApB,EAAoCJ,UAAU,GAAGE,cAAjD;AACAhB,MAAAA,EAAE,CAACG,KAAH,CAASC,QAAT,GAAoBY,cAAc,GAAG,IAArC;AACAhB,MAAAA,EAAE,CAACG,KAAH,CAASgB,QAAT,GAAoBH,cAAc,GAAG,IAArC;AACH,KAJD,MAIO,IAAIF,UAAJ,EAAgB;AACnBd,MAAAA,EAAE,CAAClF,SAAH,CAAasG,MAAb,CAAoB,cAApB;AACApB,MAAAA,EAAE,CAACG,KAAH,CAASgB,QAAT,GAAoB,MAApB;AACAnB,MAAAA,EAAE,CAACG,KAAH,CAASC,QAAT,GAAoBU,UAAU,GAAG,IAAjC;AACH;AACJ;;AAEDO,EAAAA,IAAI,CAACC,aAAD,EAAgBC,KAAhB,EAAuBzB,MAAvB,EAA+BhC,IAA/B,EAAqC0D,IAArC,EAA2C;AAACC,IAAAA,kBAAkB,GAAG,EAAtB;AAA0B7B,IAAAA,YAAY,GAAG;AAAzC,MAA+C,EAA1F,EAA8F;AAAA;;AAC9F,QAAI8B,KAAK,oBAAG5B,MAAM,CAACjD,KAAV,kDAAG,mBAAAiD,MAAM,EAAS,GAAT,CAAlB;AACA,QAAIE,EAAJ;AAAA,QACIQ,WADJ;AAAA,QAEImB,YAAY,GAAG,KAFnB;;AAGA,SAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,aAApB,EAAmCzB,CAAC,EAApC,EAAwC;AACpCW,MAAAA,WAAW,GAAGkB,KAAK,CAAC7B,CAAD,CAAL,GAAW6B,KAAK,CAAC7B,CAAD,CAAhB,GAAsB,EAApC;AACA4B,MAAAA,kBAAkB,CAAC5B,CAAD,CAAlB,GAAwB4B,kBAAkB,CAAC5B,CAAD,CAAlB,IAAyB,EAAjD;AACAD,MAAAA,YAAY,CAACC,CAAD,CAAZ,GAAkBD,YAAY,CAACC,CAAD,CAAZ,IAAmB,CAArC;;AACA,UAAIA,CAAC,GAAGyB,aAAa,GAAG,CAAxB,EAA2B;AACvB,YAAIG,kBAAkB,CAAC5B,CAAD,CAAlB,CAAsB,CAAtB,MAA6BW,WAAjC,EAA8C;AAC1CR,UAAAA,EAAE,GAAGyB,kBAAkB,CAAC5B,CAAD,CAAlB,CAAsB,CAAtB,CAAL;AACAG,UAAAA,EAAE,CAAC4B,YAAH,CAAgB,SAAhB,EAA2B,CAACC,QAAQ,CAAC7B,EAAE,CAAC8B,YAAH,CAAgB,SAAhB,CAAD,CAAR,IAAwC,CAAzC,IAA8C,CAAzE;AACH,SAHD,MAGO;AACH9B,UAAAA,EAAE,GAAG,KAAKL,cAAL,CAAoBC,YAApB,EAAkCC,CAAlC,EAAqCW,WAArC,EAAkD,EAAlD,CAAL;;AACA,eAAKD,WAAL,CAAiBT,MAAjB,EAAyBU,WAAzB,EAAsC1C,IAAtC,EAA4CkC,EAA5C;;AACAyB,UAAAA,kBAAkB,CAAC5B,CAAD,CAAlB,GAAwB,CAACW,WAAD,EAAcR,EAAd,CAAxB;AACA2B,UAAAA,YAAY,GAAG,IAAf;AACH;AACJ,OAVD,MAUO;AACH,YAAIA,YAAJ,EAAkB;AACd,eAAKrB,gBAAL,CAAsBV,YAAtB,EAAoCC,CAApC;AACH;;AACD,cAAME,QAAQ,GAAGyB,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEpF,MAAN,CAAa5C,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASgH,WAA3B,EAAwC5E,GAAxC,CAA4CpC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAlD,CAAjB;AACAwG,QAAAA,EAAE,GAAG,KAAKL,cAAL,CAAoBC,YAApB,EAAkCC,CAAlC,EAAqCW,WAArC,EAAkDT,QAAlD,CAAL;;AACA,aAAKc,QAAL,CAAcU,KAAK,IAAIzB,MAAvB,EAA+BU,WAA/B,EAA4C1C,IAA5C,EAAkDkC,EAAlD;AACH;AACJ;;AAED,QAAIsB,aAAa,KAAK,CAAlB,IAAuBxD,IAAI,KAAK3B,SAApC,EAA+C;AAC3C6D,MAAAA,EAAE,CAAClF,SAAH,CAAaC,GAAb,CAAiB,iBAAjB;AACH;;AACD,SAAK0E,WAAL,CAAiBG,YAAY,CAAClG,MAA9B;;AACA,WAAO;AAAC+H,MAAAA,kBAAD;AAAqB7B,MAAAA,YAArB;AAAmCI,MAAAA;AAAnC,KAAP;AACH;;AAED+B,EAAAA,KAAK,CAAC;AAACnC,IAAAA;AAAD,GAAD,EAAiB;AAClB,SAAKR,cAAL,CAAoBQ,YAApB;AACH;;AAtG2C;;AAyGhD,SAASoC,kBAAT,CAA4BC,MAA5B,EAAoCnC,MAApC,EAA4C;AACxC,MAAI4B,KAAK,GAAG5B,MAAM,CAACjD,KAAP,CAAa,GAAb,CAAZ;AACA,SAAOoF,MAAM,CAACP,KAAK,CAACA,KAAK,CAAChI,MAAN,GAAe,CAAhB,CAAN,CAAb;AACH;;AAED,SAASwI,aAAT,CAAuBC,EAAvB,EAA2BC,WAA3B,EAAwC;AACpC,MAAIC,KAAK,CAACC,OAAN,CAAcH,EAAd,KAAqBE,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAzB,EAAqD;AACjD,QAAIzH,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyH,WAAW,CAAC1I,MAA5B,EAAoCiB,CAAC,EAArC,EAAyC;AACrC,UAAIwH,EAAE,CAACxH,CAAD,CAAF,KAAUyH,WAAW,CAACzH,CAAD,CAAzB,EAA8B;AAC1B,eAAO,CAAP;AACH;AACJ;;AACD,WAAOwH,EAAE,CAACzI,MAAH,KAAc0I,WAAW,CAAC1I,MAA1B,GAAmC,CAAnC,GAAuC,CAA9C;AACH,GARD,MAQO;AACH,WAAOyI,EAAE,KAAKC,WAAP,IAAsBD,EAAE,KAAKhG,SAA7B,GAAyC,CAAzC,GAA6C,CAApD;AACH;AACJ;AAED;;;;;;;AAKA,MAAMoG,qBAAN,SAAoCtF,SAApC,CAA8C;AAC1CuF,EAAAA,QAAQ,CAACrD,IAAD,EAAON,IAAP,EAAaiB,MAAb,EAAqB2C,GAArB,EAA0BN,EAA1B,EAA8BC,WAA9B,EAA2CtE,IAA3C,EAAiD4E,KAAjD,EAAwDlI,OAAxD,EAAiEmI,WAAjE,EAA8EC,WAA9E,EAA2F;AAC/F,UAAM;AAAC9D,MAAAA,EAAD;AAAKF,MAAAA;AAAL,QAAsB,KAAKM,QAAL,CAAcC,IAAd,CAA5B;;AACA,QAAIiD,WAAW,KAAK,KAApB,EAA2B;AACvB,YAAMS,WAAW,GAAGX,aAAa,CAACC,EAAD,EAAKC,WAAL,CAAjC;;AACAtD,MAAAA,EAAE,CAAChE,SAAH,CAAaoG,MAAb,CAAoB,aAApB,EAAmC2B,WAAW,KAAK,CAAnD;AACA/D,MAAAA,EAAE,CAAChE,SAAH,CAAaoG,MAAb,CAAoB,iBAApB,EAAuC2B,WAAW,KAAK,CAAvD;AACH;;AACD,UAAMxI,EAAE,GAAG,KAAKqE,SAAL,CAAe,IAAf,EAAqBE,aAArB,EAAoCC,IAApC,EAA0CC,EAA1C,CAAX;;AACA,UAAMlB,QAAQ,GAAG,KAAKD,uBAAL,CAA6BtD,EAA7B,CAAjB;;AACAuD,IAAAA,QAAQ,CAACuE,EAAT,GAAcA,EAAd;AACAvE,IAAAA,QAAQ,CAACiB,IAAT,GAAgBA,IAAI,GAAG+D,WAAvB;;AACA,QAAIhF,QAAQ,CAAChF,KAAT,KAAmB6J,GAAnB,IAA0B7E,QAAQ,CAACE,IAAT,KAAkBA,IAAhD,EAAsD;AAClDzD,MAAAA,EAAE,CAAC4F,SAAH,GAAenC,IAAf;AACAF,MAAAA,QAAQ,CAACkC,MAAT,GAAkBA,MAAlB;AACAlC,MAAAA,QAAQ,CAACgD,QAAT,aAAuBd,MAAvB,cAAiChC,IAAjC;AACA,YAAMkD,cAAc,GAAG,KAAK1D,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,CAAvB;;AACA,UAAII,cAAJ,EAAoB;AAChB,cAAMF,UAAU,GAAG,KAAKxD,aAAL,CAAmByD,IAAnB,CAAwBnD,QAAQ,CAACgD,QAAjC,CAAnB;AACAvG,QAAAA,EAAE,CAACS,SAAH,CAAaoG,MAAb,CAAoB,cAApB,EAAoCJ,UAAU,GAAGE,cAAjD,EAFgB,CAGhB;;AACA3G,QAAAA,EAAE,CAAC8F,KAAH,CAASC,QAAT,GAAoBY,cAAc,GAAG,IAArC;AACA3G,QAAAA,EAAE,CAAC8F,KAAH,CAASgB,QAAT,GAAoBH,cAAc,GAAG,IAArC;AACH,OAND,MAMO;AACH3G,QAAAA,EAAE,CAACS,SAAH,CAAasG,MAAb,CAAoB,cAApB;AACA/G,QAAAA,EAAE,CAAC8F,KAAH,CAASC,QAAT,GAAoB,GAApB;AACA/F,QAAAA,EAAE,CAAC8F,KAAH,CAASgB,QAAT,GAAoB,MAApB;AACH;;AACD,YAAM2B,SAAS,GAAG,KAAKjF,OAAL,CAAaC,IAAb,CAAlB;;AACA,UAAI2E,GAAG,KAAKtG,SAAR,IAAqBsG,GAAG,KAAK,IAAjC,EAAuC;AACnCpI,QAAAA,EAAE,CAACoE,WAAH,GAAiB,GAAjB;AACAb,QAAAA,QAAQ,CAAChF,KAAT,GAAiB,IAAjB;AACAgF,QAAAA,QAAQ,CAACmF,QAAT,GAAoB,IAApB;AACAnF,QAAAA,QAAQ,CAACuB,IAAT,GAAgBA,IAAI,GAAGwD,WAAvB;AACH,OALD,MAKO,IAAIG,SAAJ,EAAe;AAClBA,QAAAA,SAAS,CAACtE,MAAV,CAAiBnE,EAAjB,EAAqBoI,GAArB,EAA0BA,GAAG,CAAC/I,MAAJ,KAAegJ,KAAzC,EAAgDlI,OAAhD;AACAoD,QAAAA,QAAQ,CAAChF,KAAT,GAAiByJ,KAAK,CAACC,OAAN,CAAcG,GAAd,IAAqBA,GAAG,CAACA,GAAG,CAAC/I,MAAJ,GAAa,CAAd,CAAxB,GAA2C+I,GAA5D;AACA7E,QAAAA,QAAQ,CAACmF,QAAT,GAAoBN,GAApB;AACA7E,QAAAA,QAAQ,CAACuB,IAAT,GAAgBA,IAAI,GAAGwD,WAAvB;AACA/E,QAAAA,QAAQ,CAACpD,OAAT,GAAmBA,OAAnB;AACH,OANM,MAMA;AACHH,QAAAA,EAAE,CAACoE,WAAH,GAAiBgE,GAAjB;AACA7E,QAAAA,QAAQ,CAAChF,KAAT,GAAiB6J,GAAjB;AACA7E,QAAAA,QAAQ,CAACuB,IAAT,GAAgBA,IAAI,GAAGwD,WAAvB;AACH;AACJ;;AAED,WAAO;AAACtI,MAAAA,EAAD;AAAKuD,MAAAA;AAAL,KAAP;AACH;;AAEDyD,EAAAA,IAAI,CAAC2B,gBAAD,EAAmBxC,WAAnB,EAAgC3B,IAAhC,EAAsCoE,WAAtC,EAAmDC,SAAnD,EAA8Dd,WAA9D,EAA2EtE,IAA3E,EAAiF4E,KAAjF,EAAwFC,WAAxF,EAAqGC,WAArG,EAAkH;AAAA;;AAClH,QAAIzD,IAAI,GAAG,CAAX;AACA,QAAI9E,EAAJ,EAAQuD,QAAR;;AACA,SAAK,MAAM6E,GAAX,IAAkBQ,WAAlB,EAA+B;AAC3B,YAAME,IAAI,GAAGF,WAAW,CAAC9D,IAAI,GAAG,CAAR,CAAxB;AACA,YAAMgD,EAAE,GAAGe,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAG/D,IAAH,CAApB;;AACA,YAAMiE,GAAG,GAAG,KAAKZ,QAAL,CAAcrD,IAAI,EAAlB,EAAsBN,IAAtB,EAA4B2B,WAA5B,EAAyCiC,GAAzC,EAA8CN,EAA9C,EAAkDC,WAAlD,EAA+DtE,IAA/D,EAAqE4E,KAArE,EAA4E,CAAAS,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEzJ,MAAN,KAAe+I,GAAf,aAAeA,GAAf,uBAAeA,GAAG,CAAE/I,MAApB,CAA5E,EAAwGiJ,WAAxG,EAAqHC,WAArH,CAAZ;;AACAvI,MAAAA,EAAE,GAAG+I,GAAG,CAAC/I,EAAT;AACAuD,MAAAA,QAAQ,GAAGwF,GAAG,CAACxF,QAAf;;AAEA,UAAIuB,IAAI,GAAG1H,UAAP,GAAoBuL,gBAAxB,EAA0C;AACtC;AACH;AACJ;;AACD,SAAKvD,WAAL,CAAiBN,IAAjB;;AACA,UAAMkE,WAAW,UAAGhJ,EAAH,wCAAG,IAAIgJ,WAAxB;;AACA,QAAIA,WAAW,IAAI,CAAC,KAAK/F,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,CAApB,EAAoE;AAChE,WAAKtD,aAAL,CAAmByD,IAAnB,CAAwBnD,QAAQ,CAACgD,QAAjC,IAA6CyC,WAA7C;AACH;;AACD,WAAO;AAACA,MAAAA,WAAW,EAAEA,WAAd;AAA2BxE,MAAAA,IAA3B;AAAiCM,MAAAA;AAAjC,KAAP;AACH;;AAED4C,EAAAA,KAAK,CAAC;AAAC5C,IAAAA,IAAD;AAAON,IAAAA;AAAP,GAAD,EAAe;AAChB,SAAKY,WAAL,CAAiBN,IAAjB;;AACA,SAAKC,cAAL,CAAoBP,IAApB;AACH;;AA3EyC;AA8E9C;;;;;;;;;;AAQA,MAAMyE,sBAAN,CAA6B;AACzBpG,EAAAA,WAAW,CAACqG,UAAD,EAAapG,YAAb,EAA2B;AAClC,UAAME,KAAK,GAAG0B,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA3B,IAAAA,KAAK,CAACuE,YAAN,CAAmB,aAAnB,EAAkC,CAAlC;AAEA,UAAM4B,KAAK,GAAGzE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA3B,IAAAA,KAAK,CAAC4B,WAAN,CAAkBuE,KAAlB;AAEA,UAAMC,KAAK,GAAG1E,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA3B,IAAAA,KAAK,CAAC4B,WAAN,CAAkBwE,KAAlB;AAEA,SAAKpG,KAAL,GAAaA,KAAb;AACA,SAAKC,aAAL,GAAqBH,YAArB;AACA,SAAKuG,MAAL,GAAc,IAAIhE,uBAAJ,CAA4BvC,YAA5B,EAA0CoG,UAA1C,EAAsDC,KAAtD,CAAd;AACA,SAAKG,IAAL,GAAY,IAAIpB,qBAAJ,CAA0BpF,YAA1B,EAAwCoG,UAAxC,EAAoDE,KAApD,CAAZ;AACA,SAAKG,QAAL,GAAgB7E,QAAQ,CAAC8E,sBAAT,EAAhB;AACH;;AAEDC,EAAAA,WAAW,GAAG;AAAA;;AACV,WAAO,KAAKJ,MAAL,CAAYxE,QAAZ,CAAqB6E,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,2BAAKN,MAAL,CAAYjG,IAAZ,wEAAkB/D,MAAlB,IAA2B,CAA3B,IAAgC,CAA5C,CAArB,EAAqEkF,aAArE,CAAmFlF,MAA1F;AACH;;AAED,QAAM2H,IAAN,CAAWpG,IAAX,EAAiBgJ,eAAjB,EAAkCjB,gBAAlC,EAAoD1B,aAApD,EAAmE4C,UAAnE,EAA+E5H,YAA/E,EAA6FX,SAA7F,EAAwG6F,IAAxG,EAA8GS,MAA9G,EAAsHG,WAAtH,EAAmI+B,SAAnI,EAA8IC,QAA9I,EAAwJ;AACpJ,UAAMC,eAAe,GAAG/H,YAAY,CAACkD,KAAb,CAAmB4E,QAAQ,CAACE,SAA5B,CAAxB;AAEA,UAAMC,YAAY,GAAG,MAAMtJ,IAAI,CAACuJ,UAAL,CAAgBJ,QAAhB,CAA3B;AACA,UAAM;AAACE,MAAAA,SAAS,EAAEG;AAAZ,QAAoBL,QAA1B;AACA,QAAIM,SAAJ;AAAA,QACIC,SADJ;AAAA,QAEI9F,IAAI,GAAG,CAFX;AAAA,QAGI+F,KAAK,GAAG,CAHZ;AAIA,UAAM1B,SAAS,GAAGqB,YAAY,CAAC,QAAD,CAA9B;;AAEA,QAAIjI,YAAY,CAAC,CAAD,CAAZ,KAAoB,cAAxB,EAAwC;AACpCqI,MAAAA,SAAS,GAAG,KAAKjB,MAAL,CAAYrC,IAAZ,CAAiBC,aAAjB,EAAgC3F,SAAS,CAACkJ,IAAV,CAAe,GAAf,CAAhC,EAAqD,EAArD,CAAZ;AACAH,MAAAA,SAAS,GAAG,KAAKf,IAAL,CAAUtC,IAAV,CAAe2B,gBAAf,EAAiCrH,SAAS,CAACkJ,IAAV,CAAe,GAAf,CAAjC,EAAsD,CAAtD,EAAyDN,YAAY,CAAC,cAAD,CAArE,EAAuFrB,SAAvF,EAAkGd,WAAlG,EAA+GjG,SAA/G,EAA0H+H,UAA1H,EAAsIE,QAAQ,CAAC7I,SAA/I,EAA0J,CAA1J,CAAZ;AACA6G,MAAAA,WAAW,GAAG,KAAd;;AACA,UAAI,CAAC+B,SAAL,EAAgB;AACZ,aAAK7G,aAAL,CAAmBwH,OAAnB,CAA2B,CAA3B,IAAgCJ,SAAS,CAACrB,WAA1C;AACH;;AACDuB,MAAAA,KAAK,IAAIF,SAAS,CAACrB,WAAnB;AACAxE,MAAAA,IAAI;AACP;;AAED,QAAI;AACA,aAAOA,IAAI,GAAGwF,eAAe,CAAC3K,MAA9B,EAAsC;AAClC,cAAM8G,WAAW,GAAG6D,eAAe,CAACxF,IAAD,CAAnC;;AACA,YAAI,CAAC0F,YAAY,CAAC/D,WAAD,CAAjB,EAAgC;AAC5B,cAAIuE,YAAY,GAAGhB,IAAI,CAACC,GAAL,CAASI,QAAQ,CAACY,OAAlB,EAA2B,CAA3B,CAAnB;AACAZ,UAAAA,QAAQ,CAACE,SAAT,GAAqBS,YAArB;AACAX,UAAAA,QAAQ,CAACY,OAAT,GAAmBD,YAAY,GAAG,CAAlC;AACA,gBAAME,OAAO,GAAG,MAAMhK,IAAI,CAACuJ,UAAL,CAAgBJ,QAAhB,CAAtB;;AACA,cAAI,EAAE5D,WAAW,IAAIyE,OAAjB,CAAJ,EAA+B;AAC3BA,YAAAA,OAAO,CAACzE,WAAD,CAAP,GAAuB,EAAvB;AACH;;AACD+D,UAAAA,YAAY,CAAC/D,WAAD,CAAZ,GAA4ByE,OAAO,CAACzE,WAAD,CAAnC;AACH;;AACD,cAAMyC,WAAW,GAAGsB,YAAY,CAAC/D,WAAD,CAAhC;AACA,cAAM1C,IAAI,GAAGkE,kBAAkB,CAACC,MAAD,EAASzB,WAAT,CAA/B;AAEAmE,QAAAA,SAAS,GAAG,KAAKjB,MAAL,CAAYrC,IAAZ,CAAiBC,aAAjB,EAAgCnF,SAAhC,EAA2CqE,WAA3C,EAAwD1C,IAAxD,EAA8D0D,IAA9D,EAAoEmD,SAApE,CAAZ;AACAD,QAAAA,SAAS,GAAG,KAAKf,IAAL,CAAUtC,IAAV,CAAe2B,gBAAf,EAAiCxC,WAAjC,EAA8C3B,IAA9C,EAAoDoE,WAApD,EAAiEC,SAAjE,EAA4Ed,WAA5E,EAAyFtE,IAAzF,EAA+F3B,SAA/F,EAA0GiI,QAAQ,CAAC7I,SAAnH,EAA8HkJ,IAA9H,CAAZ;AACArC,QAAAA,WAAW,GAAG,KAAd;AACAwC,QAAAA,KAAK,IAAIF,SAAS,CAACrB,WAAV,IAAyBsB,SAAS,CAAC3E,EAAV,CAAaqD,WAA/C;;AACA,YAAI,CAACc,SAAL,EAAgB;AACZ,eAAK7G,aAAL,CAAmBwH,OAAnB,CAA2BjG,IAAI,GAAG4F,IAAlC,IAA0CC,SAAS,CAACrB,WAAV,IAAyBsB,SAAS,CAAC3E,EAAV,CAAaqD,WAAhF;AACH;;AACDxE,QAAAA,IAAI;;AAEJ,YAAI+F,KAAK,GAAGX,eAAZ,EAA6B;AACzB;AACH;AACJ;AACJ,KA7BD,SA6BU;AAAA;;AACN,WAAKN,IAAL,CAAU5B,KAAV,CAAgB;AAAC5C,QAAAA,IAAI,EAAE,eAAAuF,SAAS,UAAT,gDAAWvF,IAAX,KAAmB,CAA1B;AAA6BN,QAAAA;AAA7B,OAAhB;;AACA,UAAI8F,SAAJ,EAAe;AACX,aAAKjB,MAAL,CAAY3B,KAAZ,CAAkB4C,SAAlB;AACH;AACJ;AACJ;;AA/EwB;AAkF7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCMO,6B,cAAN,MAAMA,6BAAN,wBAAwD;AACpDhI,EAAAA,WAAW,GAAG;AACV;;AACA,SAAKiI,kBAAL;AACH;;AAEDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEDC,EAAAA,QAAQ,CAACjL,EAAD,EAAK;AACT,WAAOlC,YAAY,CAACa,GAAb,CAAiBqB,EAAjB,CAAP;AACH;;AAEDkL,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKC,WAAL,CAAiB7B,IAAjB,CAAsBnG,KAAtB,CAA4BiI,IAA5B,CAAiC,CAAjC,CAAP;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,WAAL,CAAiB7B,IAAjB,CAAsBnG,KAAtB,CAA4BiI,IAA5B,CAAiC,CAAjC,CAAP;AACH;;AAEDE,EAAAA,KAAK,GAAG;AACJ,SAAKC,iBAAL,CAAuBhL,SAAvB,GAAmC,iBAAnC;AACH;;AAEDuK,EAAAA,kBAAkB,GAAG;AACjB,SAAKU,YAAL,CAAkB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAlB;AACA,UAAM3F,KAAK,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAmB,IAAAA,KAAK,CAAC1B,WAAN,GAAoBnH,eAAe,GAAGC,cAAtC;AACA,SAAKwO,UAAL,CAAgB9G,WAAhB,CAA4BkB,KAA5B;AAEA,UAAM6F,aAAa,GAAGjH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAgH,IAAAA,aAAa,CAAClL,SAAd,CAAwBC,GAAxB,CAA4B,kBAA5B;AAEA,UAAMwI,UAAU,GAAGxE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAuE,IAAAA,UAAU,CAACzI,SAAX,CAAqBC,GAArB,CAAyB,sBAAzB;AAEA,UAAMkL,gBAAgB,GAAGlH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAzB;AACAiH,IAAAA,gBAAgB,CAACnL,SAAjB,CAA2BC,GAA3B,CAA+B,qBAA/B;AACAkL,IAAAA,gBAAgB,CAAChH,WAAjB,CAA6B+G,aAA7B;AACAC,IAAAA,gBAAgB,CAAChH,WAAjB,CAA6BsE,UAA7B;AACA0C,IAAAA,gBAAgB,CAACC,gBAAjB,CAAkC,QAAlC,EAA4C,KAAKC,UAAL,CAAgBhM,IAAhB,CAAqB,IAArB,CAA5C,EAAwE;AAACiM,MAAAA,OAAO,EAAE;AAAV,KAAxE;AACAH,IAAAA,gBAAgB,CAACC,gBAAjB,CAAkC,YAAlC,EAAgD,KAAKG,cAAL,CAAoBlM,IAApB,CAAyB,IAAzB,CAAhD,EAAgF;AAACiM,MAAAA,OAAO,EAAE;AAAV,KAAhF;AAEA,UAAME,IAAI,GAAGvH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAuE,IAAAA,UAAU,CAACtE,WAAX,CAAuBqH,IAAvB;AAEA,SAAKP,UAAL,CAAgB9G,WAAhB,CAA4BgH,gBAA5B;AAEA,UAAMM,aAAa,GAAGxH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAuH,IAAAA,aAAa,CAACpG,KAAd,CAAoBqG,QAApB,GAA+B,UAA/B;AACAD,IAAAA,aAAa,CAACpG,KAAd,CAAoBsG,UAApB,GAAiC,QAAjC;AACAR,IAAAA,gBAAgB,CAAChH,WAAjB,CAA6BsH,aAA7B;AAEA,UAAMG,gBAAgB,GAAG3H,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAzB;AACA0H,IAAAA,gBAAgB,CAACR,gBAAjB,CAAkC,WAAlC,EAA+C,KAAKS,SAAL,CAAexM,IAAf,CAAoB,IAApB,CAA/C;AACAuM,IAAAA,gBAAgB,CAACR,gBAAjB,CAAkC,UAAlC,EAA8C,KAAKU,YAAL,CAAkBzM,IAAlB,CAAuB,IAAvB,CAA9C;AAEA,SAAKyL,iBAAL,GAAyBc,gBAAzB;AACA,SAAKG,WAAL,GAAmBtD,UAAnB;AACA,SAAKuD,cAAL,GAAsBP,aAAtB;AACA,SAAKQ,iBAAL,GAAyBd,gBAAzB;AACA,SAAKe,cAAL,GAAsBhB,aAAtB;AACH;;AAEDiB,EAAAA,oBAAoB,CAACjE,gBAAD,EAAmBkE,KAAnB,EAA0BC,wBAA1B,EAAoD;AACpE,UAAMC,mBAAmB,GAAGrD,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKgD,cAAL,CAAoBK,YAApB,GAAmCrE,gBAA/C,CAA5B;AACA,UAAMsE,cAAc,GAAG,KAAKP,iBAAL,CAAuBQ,SAAvB,GAAmCH,mBAA1D;AACA,UAAMI,wBAAwB,GAAGzD,IAAI,CAAC0D,KAAL,CAAWzE,gBAAgB,GAAGvL,UAA9B,CAAjC;AACA,UAAMiQ,cAAc,GAAGP,wBAAwB,GAAG,KAAKQ,MAAL,IAAe,CAAlB,GAAsBT,KAArE;AACA,QAAI3L,SAAS,GAAGwI,IAAI,CAAC0D,KAAL,CAAW1D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY0D,cAAc,GAAG,KAAKlC,WAAL,CAAiB9B,MAAjB,CAAwBlG,KAAxB,CAA8B9D,MAA/C,GAAwD8N,wBAApE,IAAgGF,cAA3G,CAAhB;AACA,QAAI9L,OAAO,GAAGD,SAAS,GAAGiM,wBAA1B;;AACA,QAAIhM,OAAO,GAAG,CAAV,GAAc0L,KAAlB,EAAyB;AACrB,YAAMU,MAAM,GAAGpM,OAAO,GAAG,CAAV,GAAc0L,KAA7B;;AACA,UAAI3L,SAAS,GAAGqM,MAAZ,GAAqB,CAAzB,EAA4B;AACxBpM,QAAAA,OAAO,GAAG0L,KAAV;AACA3L,QAAAA,SAAS,GAAG,CAAZ;AACH,OAHD,MAGO;AACHA,QAAAA,SAAS,IAAIqM,MAAb;AACApM,QAAAA,OAAO,IAAIoM,MAAX;AACH;AACJ;;AACD,WAAO;AAACrM,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAP;AACH;;AAEDqM,EAAAA,uBAAuB,CAAC5D,eAAD,EAAkBtI,SAAlB,EAA6BW,YAA7B,EAA2C;AAC9D,UAAMwL,kBAAkB,GAAG/D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKgD,cAAL,CAAoB3D,WAApB,GAAkCY,eAA9C,CAA3B;AACA,UAAM8D,YAAY,GAAG,KAAKhB,iBAAL,CAAuBiB,UAAvB,GAAoCF,kBAAzD;AAEA,UAAMG,iBAAiB,GAAG,KAAKC,kBAAL,CAAwBjE,eAAxB,EAAyCtI,SAAzC,EAAoDW,YAApD,IAAoE,GAA9F;AAEA,QAAIgI,SAAS,GAAGP,IAAI,CAAC0D,KAAL,CAAWQ,iBAAiB,GAAGF,YAA/B,CAAhB;AACA,QAAI/C,OAAO,GAAGV,SAAS,IAAI,KAAKkB,WAAL,CAAiB1B,WAAjB,MAAkC,CAAtC,CAAT,GAAoD,CAAlE;AAEA,WAAO;AAACQ,MAAAA,SAAD;AAAYU,MAAAA;AAAZ,KAAP;AACH;;AAEDmD,EAAAA,kBAAkB,CAAC;AAAC7D,IAAAA,SAAD;AAAYU,IAAAA,OAAZ;AAAqBzJ,IAAAA,SAArB;AAAgCC,IAAAA;AAAhC,GAAD,EAA2C;AACzD,UAAM4M,cAAc,GAAG,KAAKC,UAAL,KAAoB/D,SAA3C;AACA,UAAMgE,WAAW,GAAG,KAAKC,UAAL,KAAoBhN,SAApB,IAAiC,KAAKiN,QAAL,KAAkBhN,OAAnD,IAA8D,KAAKiN,QAAL,KAAkBzD,OAApG;AACA,SAAKqD,UAAL,GAAkB/D,SAAlB;AACA,SAAKmE,QAAL,GAAgBzD,OAAhB;AACA,SAAKuD,UAAL,GAAkBhN,SAAlB;AACA,SAAKiN,QAAL,GAAgBhN,OAAhB;AACA,WAAO;AAAC4M,MAAAA,cAAD;AAAiBE,MAAAA;AAAjB,KAAP;AACH;;AAEDI,EAAAA,WAAW,CAACC,YAAD,EAAeL,WAAf,EAA4BF,cAA5B,EAA4C;AACnD,WAAQxQ,sBAAsB,IAAI+Q,YAA3B,IAA6CjR,oBAAoB,KAAK0Q,cAAc,IAAIO,YAAvB,CAAjE,IAA2GhR,iBAAiB,KAAK2Q,WAAW,IAAIK,YAApB,CAAnI;AACH;;AAEDC,EAAAA,QAAQ,CAAC,GAAGC,IAAJ,EAAU;AACd,QAAI,KAAKH,WAAL,CAAiB,GAAGG,IAApB,CAAJ,EAA+B;AAC3B,UAAI,KAAK/B,cAAL,KAAwB,KAAKtB,WAAL,CAAiBnI,KAAjB,CAAuByL,aAAnD,EAAkE;AAC9D,aAAKlD,iBAAL,CAAuBmD,YAAvB,CAAoC,KAAKvD,WAAL,CAAiBnI,KAAjB,CAAuB2L,SAAvB,CAAiC,IAAjC,CAApC,EAA4E,KAAKxD,WAAL,CAAiBnI,KAA7F;;AACA,aAAKyJ,cAAL,CAAoB7H,WAApB,CAAgC,KAAKuG,WAAL,CAAiBnI,KAAjD;AACH;AACJ,KALD,MAKO;AACH,UAAI,KAAKuI,iBAAL,KAA2B,KAAKJ,WAAL,CAAiBnI,KAAjB,CAAuByL,aAAtD,EAAqE;AACjE,aAAKlD,iBAAL,CAAuBmD,YAAvB,CAAoC,KAAKvD,WAAL,CAAiBnI,KAArD,EAA4D,KAAKuI,iBAAL,CAAuBtG,QAAvB,CAAgC,CAAhC,CAA5D;AACH;AACJ;;AACD,SAAK+F,IAAL,CAAU4D,aAAV,CAAwB,IAAIC,WAAJ,CAAgB,oCAAhB,EAAsD;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAtD,CAAxB;AACH;;AAEDC,EAAAA,SAAS,CAAC,GAAGP,IAAJ,EAAU;AACf,QAAI,KAAKH,WAAL,CAAiB,GAAGG,IAApB,CAAJ,EAA+B;AAC3B,WAAKjD,iBAAL,CAAuBmD,YAAvB,CAAoC,KAAKvD,WAAL,CAAiBnI,KAArD,EAA4D,KAAKuI,iBAAL,CAAuBtG,QAAvB,CAAgC,CAAhC,CAA5D;AACH;;AACD,SAAK+F,IAAL,CAAU4D,aAAV,CAAwB,IAAIC,WAAJ,CAAgB,mCAAhB,EAAqD;AAACC,MAAAA,MAAM,EAAE;AAAT,KAArD,CAAxB;AACH;;AAEDjB,EAAAA,kBAAkB,CAACjE,eAAD,EAAkB5I,UAAlB,EAA8BiB,YAA9B,EAA4C;AAC1D,QAAIsI,KAAK,GAAG,CAAZ;;AACA,QAAIvJ,UAAU,CAAC3B,MAAX,GAAoB,CAAxB,EAA2B;AACvBkL,MAAAA,KAAK,GAAG,KAAKtH,aAAL,CAAmBwH,OAAnB,CAA2B,CAA3B,CAAR;AACH;;AACD,QAAImD,iBAAiB,GAAG3L,YAAY,CAAC5C,MAArC;;AACA,WAAOkL,KAAK,GAAGX,eAAf,EAAgC;AAC5BgE,MAAAA,iBAAiB;AACjBrD,MAAAA,KAAK,IAAI,KAAKtH,aAAL,CAAmBwH,OAAnB,CAA2BmD,iBAA3B,KAAiD,GAA1D;AACH;;AACD,WAAOlE,IAAI,CAACsF,GAAL,CAAS/M,YAAY,CAAC5C,MAAb,IAAuB2B,UAAU,CAAC3B,MAAX,GAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAAnD,CAAT,EAAgEuO,iBAAiB,IAAI5M,UAAU,CAAC3B,MAAX,GAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAAhC,CAAjF,CAAP;AACH;;AAED4P,EAAAA,2BAA2B,CAACX,YAAD,EAAe1E,eAAf,EAAgC5I,UAAhC,EAA4CiB,YAA5C,EAA0D;AACjF,QAAIqM,YAAJ,EAAkB;AACd,YAAMb,kBAAkB,GAAG/D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKgD,cAAL,CAAoB3D,WAApB,GAAkCY,eAA9C,CAA3B;AACA,YAAM8D,YAAY,GAAG,KAAKhB,iBAAL,CAAuBiB,UAAvB,GAAoCF,kBAAzD;;AACA,YAAMG,iBAAiB,GAAG,KAAKC,kBAAL,CAAwBjE,eAAxB,EAAyC5I,UAAzC,EAAqDiB,YAArD,CAA1B;;AACA,UAAIuC,IAAI,GAAG,CAAX;AAAA,UACI0K,aAAa,GAAG,CADpB;;AAEA,aAAO1K,IAAI,GAAGoJ,iBAAd,EAAiC;AAC7BsB,QAAAA,aAAa,IAAI,KAAKjM,aAAL,CAAmBwH,OAAnB,CAA2BjG,IAA3B,KAAoC,GAArD;AACAA,QAAAA,IAAI;AACP;;AACD,YAAM2K,WAAW,GAAGvF,eAAe,GAAGsF,aAAtC;AACA,WAAKvC,cAAL,CAAoB7G,KAApB,CAA0ByE,KAA1B,GAAkC4E,WAAW,GAAG,IAAhD;AACA,WAAKzC,iBAAL,CAAuBiB,UAAvB,GAAoCD,YAAY,GAAGwB,aAAnD;AACH;AACJ;;AAEDE,EAAAA,4BAA4B,CAACvC,KAAD,EAAQ;AAChC,UAAMwC,qBAAqB,GAAG3F,IAAI,CAACsF,GAAL,CAASxR,kBAAT,EAA6B,CAACqP,KAAK,GAAG,KAAK1B,WAAL,CAAiB9B,MAAjB,CAAwBlG,KAAxB,CAA8B9D,MAAvC,IAAiDjC,UAA9E,CAA9B;AACA,SAAKuP,cAAL,CAAoB7G,KAApB,CAA0BwJ,MAA1B,aAAsCD,qBAAtC;AACH;AAED;;;;;;AAIA,QAAMvD,UAAN,CAAiByD,KAAjB,EAAwB;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,KAApB;AACA,UAAM,KAAK1I,IAAL,CAAU,KAAKpG,IAAf,CAAN;AACA,SAAKoK,IAAL,CAAU4D,aAAV,CAAwB,IAAIC,WAAJ,CAAgB,6BAAhB,CAAxB;AACH;AAED;;;;;;;;;AAOA7C,EAAAA,cAAc,CAACuD,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACG,WAAN,GAAoB,KAApB;AACA,UAAM3C,mBAAmB,GAAGrD,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKgD,cAAL,CAAoBK,YAApB,GAAmC,KAAKN,iBAAL,CAAuBM,YAAtE,CAA5B;AACA,UAAMS,kBAAkB,GAAG/D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKgD,cAAL,CAAoB3D,WAApB,GAAkC,KAAK0D,iBAAL,CAAuB1D,WAArE,CAA3B;AACA,SAAK0D,iBAAL,CAAuBQ,SAAvB,GAAmCxD,IAAI,CAACsF,GAAL,CAASjC,mBAAT,EAA8B,KAAKL,iBAAL,CAAuBQ,SAAvB,GAAmCqC,KAAK,CAACI,MAAvE,CAAnC;AACA,SAAKjD,iBAAL,CAAuBiB,UAAvB,GAAoCjE,IAAI,CAACsF,GAAL,CAASvB,kBAAT,EAA6B,KAAKf,iBAAL,CAAuBiB,UAAvB,GAAoC4B,KAAK,CAACK,MAAvE,CAApC;;AACA,SAAK9D,UAAL,CAAgByD,KAAhB;AACH;;AAEDM,EAAAA,eAAe,GAAG;AACd,SAAK3B,UAAL,GAAkBpM,SAAlB;AACA,SAAKqM,QAAL,GAAgBrM,SAAhB;AACA,SAAKkM,UAAL,GAAkBlM,SAAlB;AACA,SAAKsM,QAAL,GAAgBtM,SAAhB;AACH;;AAEDgO,EAAAA,MAAM,GAAG;AACL,SAAKC,gBAAL,GAAwBjO,SAAxB;AACA,SAAKkO,iBAAL,GAAyBlO,SAAzB;AACA,SAAKwL,MAAL,GAAcxL,SAAd;;AACA,SAAK+N,eAAL;AACH;;AAEDI,EAAAA,YAAY,GAAG;AACX,SAAKhN,aAAL,CAAmBwH,OAAnB,GAA6B,EAA7B;AACA,SAAKiC,iBAAL,CAAuBQ,SAAvB,GAAmC,CAAnC;AACA,SAAKR,iBAAL,CAAuBiB,UAAvB,GAAoC,CAApC;;AACA,SAAKkC,eAAL;AACH;;AAED,QACM7I,IADN,CACWpG,IADX,EACiB0N,YAAY,GAAG,KADhC,EACuCxB,wBAAwB,GAAG,KADlE,EACyEoD,cAAc,GAAG,KAD1F,EACiG;AAC7F,QAAIC,KAAJ;;AACA,QAAIhT,KAAJ,EAAW;AACPgT,MAAAA,KAAK,GAAGC,WAAW,CAACC,GAAZ,EAAR;AACH;;AAED,SAAKxP,MAAL,GAAc,MAAMD,IAAI,CAAC0P,UAAL,EAApB;AAEA,UAAM1G,eAAe,GAAI,KAAKmG,gBAAL,GAAwB,KAAKA,gBAAL,IAAyB,KAAKrD,iBAAL,CAAuB1D,WAAjG;AACA,UAAML,gBAAgB,GAAI,KAAKqH,iBAAL,GAAyB,KAAKA,iBAAL,IAA0B,KAAKtD,iBAAL,CAAuBM,YAApG;AAEA,UAAMuD,MAAM,GAAG3P,IAAI,CAACyC,QAAL,GAAgBmN,KAAhB,CAAsB,MAAM,CAAE,CAA9B,CAAf;AACA,UAAMC,aAAa,GAAG7P,IAAI,CAACqB,YAAL,GAAoBuO,KAApB,CAA0B,MAAM,CAAE,CAAlC,CAAtB;AACA,UAAME,OAAO,GAAG9P,IAAI,CAACgH,MAAL,GAAc4I,KAAd,CAAoB,MAAM,CAAE,CAA5B,CAAhB;AACA,UAAM3D,KAAK,GAAG,MAAM0D,MAApB;;AACA,UAAM;AAACrP,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAuB,KAAKyL,oBAAL,CAA0BjE,gBAA1B,EAA4CkE,KAA5C,EAAmDC,wBAAnD,CAA7B;;AACA,SAAKQ,MAAL,GAAcT,KAAd;;AAEA,SAAKuC,4BAAL,CAAkCvC,KAAlC;;AAEA,UAAM5K,YAAY,GAAG,MAAMwO,aAA3B;;AACA,QAAIxO,YAAY,KAAKH,SAArB,EAAgC;AAC5B;AACH;;AACD,QAAI;AAACmI,MAAAA,SAAD;AAAYU,MAAAA;AAAZ,QAAuB,KAAK6C,uBAAL,CAA6B5D,eAA7B,EAA8C,KAAK/I,MAAL,CAAYG,UAA1D,EAAsEiB,YAAtE,CAA3B;;AACA,UAAM6F,EAAE,GAAG,KAAKjH,MAAL,CAAYG,UAAZ,CAAuB3B,MAAvB,GAAgC,CAA3C;AACA,UAAM0K,QAAQ,GAAG;AAACE,MAAAA,SAAD;AAAYU,MAAAA,OAAZ;AAAqBzJ,MAAAA,SAArB;AAAgCC,MAAAA,OAAhC;AAAyC2G,MAAAA;AAAzC,KAAjB;;AACA,QAAI;AAACmG,MAAAA,WAAD;AAAcF,MAAAA;AAAd,QAAgC,KAAKD,kBAAL,CAAwB/D,QAAxB,CAApC;;AACA,QAAIuE,YAAY,IAAIL,WAAhB,IAA+BF,cAAnC,EAAmD;AAC/C,WAAKQ,QAAL,CAAcD,YAAd,EAA4BL,WAA5B,EAAyCF,cAAzC;;AACA,YAAM9G,aAAa,GAAG,KAAKpG,MAAL,CAAYI,aAAZ,CAA0B5B,MAA1B,GAAmC,CAAzD;AACA,YAAMwK,UAAU,GAAG,KAAKhJ,MAAL,CAAYG,UAAZ,CAAuB3B,MAA1C;AACA,YAAMuI,MAAM,GAAG,MAAM8I,OAArB;AACA,YAAM,KAAKvF,WAAL,CAAiBnE,IAAjB,CACFpG,IADE,EAEFgJ,eAFE,EAGFjB,gBAHE,EAIF1B,aAJE,EAKF4C,UALE,EAMF5H,YANE,EAOF,KAAKpB,MAAL,CAAYG,UAPV,EAQF,KAAKH,MAAL,CAAYsG,IARV,EASFS,MATE,EAUF,KAAK+I,YAVH,EAWFT,cAXE,EAYFnG,QAZE,CAAN;;AAcA,WAAKgF,SAAL,CAAeT,YAAf,EAA6BL,WAA7B,EAA0CF,cAA1C;;AACA,UAAI,CAACmC,cAAL,EAAqB;AACjB,aAAKjB,2BAAL,CAAiCX,YAAY,IAAIP,cAAjD,EAAiEnE,eAAjE,EAAkF,KAAK/I,MAAL,CAAYG,UAA9F,EAA0GiB,YAA1G;AACH;AACJ;;AAED,QAAI9E,KAAJ,EAAW;AACP4B,MAAAA,GAAG,CAAC6R,IAAJ,CAASR,WAAW,CAACC,GAAZ,KAAoBF,KAA7B;AACH;AACJ;;AAEDU,EAAAA,MAAM,CAACC,cAAD,EAAiB;AACnB,SAAK7N,aAAL,GAAqB;AAACyD,MAAAA,IAAI,EAAE,EAAP;AAAWE,MAAAA,QAAQ,EAAE,EAArB;AAAyB6D,MAAAA,OAAO,EAAE;AAAlC,KAArB;AACA,SAAKU,WAAL,GAAmB,IAAIlC,sBAAJ,CAA2B,KAAKuD,WAAhC,EAA6C,KAAKvJ,aAAlD,CAAnB;;AACA,SAAKsI,iBAAL,CAAuB3G,WAAvB,CAAmC,KAAKuG,WAAL,CAAiBnI,KAApD;;AACA,QAAI8N,cAAJ,EAAoB;AAChB,WAAKA,cAAL,GAAsBA,cAAtB;AACH;;AACD,QAAI,CAAC,KAAK3F,WAAV,EAAuB;;AACvB,QAAI,KAAK2F,cAAT,EAAyB;AACrB,UAAI,KAAKA,cAAL,KAAwB,KAAK3F,WAAL,CAAiBnI,KAAjB,CAAuByL,aAAnD,EAAkE;AAC9D,aAAKqC,cAAL,CAAoBlM,WAApB,CAAgC,KAAK2G,iBAArC;AACH,OAFD,MAEO,CACN;AACJ,KALD,MAKO;AACH,WAAK3G,WAAL,CAAiB,KAAKuG,WAAL,CAAiBnI,KAAlC;AACH;AACJ;;AAED,QAAMuJ,YAAN,CAAmBgD,KAAnB,EAA0B;AACtB,QAAIwB,OAAO,GAAGxB,KAAK,CAACyB,MAApB;;AACA,WAAOD,OAAO,CAACE,OAAR,KAAoB,IAApB,IAA4BF,OAAO,CAACE,OAAR,KAAoB,IAAvD,EAA6D;AACzDF,MAAAA,OAAO,GAAGA,OAAO,CAACtC,aAAlB;;AACA,UAAI,CAAC,KAAKlD,iBAAL,CAAuB2F,QAAvB,CAAgCH,OAAhC,CAAL,EAA+C;AAC3C;AACH;AACJ;;AACD,UAAMjH,SAAS,GAAGyF,KAAK,CAACyB,MAAN,CAAavQ,SAAb,CAAuByQ,QAAvB,CAAgC,kBAAhC,CAAlB;AACA,UAAM3N,QAAQ,GAAGzF,YAAY,CAACa,GAAb,CAAiBoS,OAAjB,CAAjB;;AACA,QAAIjH,SAAJ,EAAe;AACX,YAAM,IAAIqH,OAAJ,CAAYC,UAAZ,CAAN;AACA,WAAKnO,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,IAAiDzE,SAAjD;AACA,WAAKmB,aAAL,CAAmByD,IAAnB,CAAwBnD,QAAQ,CAACgD,QAAjC,IAA6CzE,SAA7C;AACA,WAAKmB,aAAL,CAAmBwH,OAAnB,CAA2BlH,QAAQ,CAACiB,IAApC,IAA4C1C,SAA5C;AACAiP,MAAAA,OAAO,CAACjL,KAAR,CAAcC,QAAd,GAAyB,GAAzB;AACAgL,MAAAA,OAAO,CAACjL,KAAR,CAAcgB,QAAd,GAAyB,MAAzB;;AACA,WAAK,MAAMzE,GAAX,IAAkB,KAAK8I,WAAL,CAAiB7B,IAAjB,CAAsBnG,KAAxC,EAA+C;AAC3C,cAAMnD,EAAE,GAAGqC,GAAG,CAACkB,QAAQ,CAACiB,IAAV,CAAd;AACAxE,QAAAA,EAAE,CAAC8F,KAAH,CAASC,QAAT,GAAoB,GAApB;AACA/F,QAAAA,EAAE,CAAC8F,KAAH,CAASgB,QAAT,GAAoB,MAApB;AACA9G,QAAAA,EAAE,CAACS,SAAH,CAAasG,MAAb,CAAoB,cAApB;AACH;;AACD,YAAM,KAAKC,IAAL,CAAU,KAAKpG,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAN;AACH;AACJ;;AAED,QAAM0L,SAAN,CAAgBiD,KAAhB,EAAuB;AACnB,QAAIwB,OAAO,GAAGxB,KAAK,CAACyB,MAApB;;AACA,WAAOD,OAAO,CAACE,OAAR,KAAoB,IAApB,IAA4BF,OAAO,CAACE,OAAR,KAAoB,IAAvD,EAA6D;AACzDF,MAAAA,OAAO,GAAGA,OAAO,CAACtC,aAAlB;;AACA,UAAI,CAAC,KAAKlD,iBAAL,CAAuB2F,QAAvB,CAAgCH,OAAhC,CAAL,EAA+C;AAC3C;AACH;AACJ;;AACD,UAAMM,SAAS,GAAG9B,KAAK,CAACyB,MAAN,CAAavQ,SAAb,CAAuByQ,QAAvB,CAAgC,oBAAhC,CAAlB;AACA,UAAMpH,SAAS,GAAGyF,KAAK,CAACyB,MAAN,CAAavQ,SAAb,CAAuByQ,QAAvB,CAAgC,kBAAhC,CAAlB;AACA,UAAM3N,QAAQ,GAAGzF,YAAY,CAACa,GAAb,CAAiBoS,OAAjB,CAAjB;;AACA,QAAIM,SAAJ,EAAe;AACX,YAAM,KAAKC,UAAL,CAAgB/B,KAAhB,EAAuBhM,QAAvB,CAAN;AACH,KAFD,MAEO,IAAIuG,SAAJ,EAAe;AAClB,WAAKyH,iBAAL,CAAuBhC,KAAvB,EAA8BwB,OAA9B,EAAuCxN,QAAvC;AACH,KAFM,MAEA,IAAIA,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAE+C,gBAAd,EAAgC;AACnC,YAAM,KAAKkL,QAAL,CAAcjC,KAAd,EAAqBhM,QAArB,CAAN;AACH,KAFM,MAEA;AACH,YAAM,KAAKkO,UAAL,CAAgBlO,QAAhB,CAAN;AACH;AACJ;;AAEDgO,EAAAA,iBAAiB,CAAChC,KAAD,EAAQwB,OAAR,EAAiBxN,QAAjB,EAA2B;AACxC,UAAM4M,KAAK,GAAGZ,KAAK,CAACmC,KAApB;AACA,UAAMnH,KAAK,GAAGwG,OAAO,CAAC/H,WAAtB;AACA,UAAM2I,WAAW,GAAG,KAAKjF,iBAAL,CAAuBiB,UAA3C;;AACA,UAAMiE,IAAI,GAAGrC,KAAK,IAAI,KAAKsC,sBAAL,CAA4BtC,KAA5B,EAAmCwB,OAAnC,EAA4CZ,KAA5C,EAAmD5F,KAAnD,EAA0DoH,WAA1D,EAAuEpO,QAAvE,CAAtB;;AACA,UAAMuO,EAAE,GAAG,YAAY;AACnBpN,MAAAA,QAAQ,CAACqN,mBAAT,CAA6B,WAA7B,EAA0CH,IAA1C;AACAlN,MAAAA,QAAQ,CAACqN,mBAAT,CAA6B,SAA7B,EAAwCD,EAAxC;AACA,YAAMnL,cAAc,GAAG,KAAK1D,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,CAAvB;AACA,WAAKtD,aAAL,CAAmBwH,OAAnB,CAA2BlH,QAAQ,CAACiB,IAApC,IAA4CmC,cAA5C;AACA,YAAM,KAAKK,IAAL,CAAU,KAAKpG,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAN;AACH,KAND;;AAOA8D,IAAAA,QAAQ,CAACmH,gBAAT,CAA0B,WAA1B,EAAuC+F,IAAvC;AACAlN,IAAAA,QAAQ,CAACmH,gBAAT,CAA0B,SAA1B,EAAqCiG,EAArC;AACH;;AAED,QACMD,sBADN,CAC6BtC,KAD7B,EACoC5J,EADpC,EACwCwK,KADxC,EAC+C5F,KAD/C,EACsDoH,WADtD,EACmEpO,QADnE,EAC6E;AACzE,UAAM,IAAI4N,OAAJ,CAAYC,UAAZ,CAAN;AACA,UAAMY,IAAI,GAAGzC,KAAK,CAACmC,KAAN,GAAcvB,KAA3B;AACA,UAAMxJ,cAAc,GAAG4D,KAAK,GAAGyH,IAA/B;AACA,SAAK/O,aAAL,CAAmB2D,QAAnB,CAA4BrD,QAAQ,CAACgD,QAArC,IAAiDI,cAAjD;AACAhB,IAAAA,EAAE,CAACG,KAAH,CAASC,QAAT,GAAoBY,cAAc,GAAG,IAArC;AACAhB,IAAAA,EAAE,CAACG,KAAH,CAASgB,QAAT,GAAoBH,cAAc,GAAG,IAArC;AACA,UAAMF,UAAU,GAAG,KAAKxD,aAAL,CAAmByD,IAAnB,CAAwBnD,QAAQ,CAACgD,QAAjC,CAAnB;;AACA,SAAK,MAAMlE,GAAX,IAAkB,KAAK8I,WAAL,CAAiB7B,IAAjB,CAAsBnG,KAAxC,EAA+C;AAC3C,YAAMnD,EAAE,GAAGqC,GAAG,CAACkB,QAAQ,CAACiB,IAAV,CAAd;AACAxE,MAAAA,EAAE,CAAC8F,KAAH,CAASgB,QAAT,GAAoB9G,EAAE,CAAC8F,KAAH,CAASC,QAAT,GAAoBY,cAAc,GAAG,IAAzD;AACA3G,MAAAA,EAAE,CAACS,SAAH,CAAaoG,MAAb,CAAoB,cAApB,EAAoCJ,UAAU,GAAGE,cAAjD;AACH;;AACD,QAAIqL,IAAI,GAAG,CAAX,EAAc;AACV,YAAM,KAAKhL,IAAL,CAAU,KAAKpG,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,CAAN;AACH;AACJ;;AAED,QAAM6Q,UAAN,CAAiBlO,QAAjB,EAA2B;AACvB,QAAI,CAAC,KAAKyH,IAAL,CAAUiH,YAAV,CAAuB,YAAvB,CAAL,EAA2C;AACvC;AACH;;AACD,UAAMC,WAAW,GAAG,MAAMvR,aAAa,CAAC,KAAKC,IAAN,EAAY,KAAKC,MAAjB,EAAyB0C,QAAQ,CAACuB,IAAlC,EAAwCvB,QAAQ,CAACiB,IAAjD,CAAvC;;AACA,QAAIqD,aAAa,CAACtE,QAAQ,CAACuE,EAAV,EAAc,KAAK6I,YAAnB,CAAb,KAAkD,CAAtD,EAAyD;AACrD,WAAKA,YAAL,GAAoB7O,SAApB;AACA,WAAKkJ,IAAL,CAAU4D,aAAV,CACI,IAAIC,WAAJ,CAAgB,oBAAhB,EAAsC;AAClCsD,QAAAA,OAAO,EAAE,IADyB;AAElCC,QAAAA,QAAQ,EAAE,IAFwB;AAGlCtD,QAAAA,MAAM,EAAE;AAACuD,UAAAA,QAAQ,EAAE,KAAX;AAAkBxR,UAAAA,MAAM,EAAE;AAAC6B,YAAAA,OAAO,EAAE;AAAV;AAA1B;AAH0B,OAAtC,CADJ;AAOH,KATD,MASO;AACH,WAAKiO,YAAL,GAAoBpN,QAAQ,CAACuE,EAA7B;AACA,WAAKkD,IAAL,CAAU4D,aAAV,CACI,IAAIC,WAAJ,CAAgB,oBAAhB,EAAsC;AAClCsD,QAAAA,OAAO,EAAE,IADyB;AAElCC,QAAAA,QAAQ,EAAE,IAFwB;AAGlCtD,QAAAA,MAAM;AAAGuD,UAAAA,QAAQ,EAAE;AAAb,WAAsBH,WAAtB;AAH4B,OAAtC,CADJ;AAOH;;AACD,UAAM,KAAKlL,IAAL,CAAU,KAAKpG,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAN;AACH;;AAED,QAAM0Q,UAAN,CAAiB/B,KAAjB,EAAwBhM,QAAxB,EAAkC;AAC9B,QAAIA,QAAQ,CAACpD,OAAb,EAAsB;AAClB,UAAIoP,KAAK,CAAC+C,QAAV,EAAoB;AAChB,cAAM,KAAK1R,IAAL,CAAU2R,SAAV,CAAoBhP,QAAQ,CAACmF,QAAT,CAAkBrJ,MAAlB,GAA2B,CAA/C,CAAN;AACH,OAFD,MAEO;AACH,cAAM,KAAKuB,IAAL,CAAU4R,QAAV,CAAmBjP,QAAQ,CAACuB,IAA5B,CAAN;AACH;AACJ,KAND,MAMO,IAAIvB,QAAQ,CAACpD,OAAT,KAAqB,KAAzB,EAAgC;AACnC,UAAIoP,KAAK,CAAC+C,QAAV,EAAoB;AAChB,cAAM,KAAK1R,IAAL,CAAU2R,SAAV,CAAoBhP,QAAQ,CAACmF,QAAT,CAAkBrJ,MAAtC,CAAN;AACH,OAFD,MAEO;AACH,cAAM,KAAKuB,IAAL,CAAU6R,MAAV,CAAiBlP,QAAQ,CAACuB,IAA1B,CAAN;AACH;AACJ;;AACD,UAAM,KAAKkC,IAAL,CAAU,KAAKpG,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAN;AACH;;AAED,QAAM4Q,QAAN,CAAejC,KAAf,EAAsBhM,QAAtB,EAAgC;AAC5B;AACA,QAAI;AAAC4D,MAAAA;AAAD,QAAS,MAAM,KAAK6D,IAAL,CAAUpK,IAAV,CAAe0P,UAAf,EAAnB;AACA,UAAMoC,WAAW,GAAGvL,IAAI,CAACwL,SAAL,CAAexT,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASoE,QAAQ,CAAC4C,WAAtC,CAApB;;AAEA,QAAIuM,WAAW,GAAG,CAAC,CAAnB,EAAsB;AAClB;AACA,YAAM,CAACtS,IAAD,EAAOwS,SAAP,IAAoBzL,IAAI,CAACuL,WAAD,CAA9B;;AACA,YAAMG,QAAQ,GAAG,KAAK7H,IAAL,CAAU8H,eAAV,CAA0BF,SAA1B,EAAqC,KAArC,EAA4CrD,KAAK,CAACwD,MAAlD,CAAjB;;AACA5L,MAAAA,IAAI,CAACuL,WAAD,CAAJ,GAAoB,CAACtS,IAAD,EAAOyS,QAAP,CAApB;AACH,KALD,MAKO;AACH;AACA,UAAItD,KAAK,CAAC+C,QAAV,EAAoB;AAChBnL,QAAAA,IAAI,CAACyJ,IAAL,CAAU,CAACrN,QAAQ,CAAC4C,WAAV,EAAuBoJ,KAAK,CAACwD,MAAN,GAAe,SAAf,GAA2B,KAAlD,CAAV;AACH,OAFD,MAEO;AACH5L,QAAAA,IAAI,GAAG,CAAC,CAAC5D,QAAQ,CAAC4C,WAAV,EAAuBoJ,KAAK,CAACwD,MAAN,GAAe,SAAf,GAA2B,KAAlD,CAAD,CAAP;AACH;AACJ;;AACD,SAAK/H,IAAL,CAAUzD,YAAV,CAAuB,MAAvB,EAA+ByL,IAAI,CAACC,SAAL,CAAe9L,IAAf,CAA/B;AACH;;AA1bmD,C,yDA0NnDrK,e,2JA8IAA,e;AAqFLoW,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,sBAA7B,EAAqDvI,6BAArD;AAEA;;;;;;AAMA;;;;;;AAKA,MAAMwI,cAAN,CAAqB;AACjB,MAAIjT,IAAJ,GAAW;AACP,WAAO,UAAP;AACH;;AAED,MAAIkT,UAAJ,GAAiB;AACb,WAAO,QAAP;AACH;;AAED,MAAIC,YAAJ,GAAmB;AACf,WAAO,QAAP;AACH;;AAED,QAAMC,MAAN,CAAaC,GAAb,EAAkB7S,IAAlB,EAAwB;AACpB,QAAI;AACA,YAAM6S,GAAG,CAAC7V,OAAD,CAAH,CAAaoJ,IAAb,CAAkBpG,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAN;AACH,KAFD,CAEE,OAAO8S,CAAP,EAAU;AACR;AACH;AACJ;;AAED,QAAMC,MAAN,CAAaF,GAAb,EAAkB7S,IAAlB,EAAwB;AACpB,QAAI,CAAC6S,GAAG,CAACG,cAAJ,CAAmBhW,OAAnB,CAAL,EAAkC;AAC9B,YAAMkI,KAAK,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAmB,MAAAA,KAAK,CAAC1B,WAAN,GAAoBlH,cAApB;AACAwH,MAAAA,QAAQ,CAACmP,IAAT,CAAcjP,WAAd,CAA0BkB,KAA1B;AACA2N,MAAAA,GAAG,CAAC7V,OAAD,CAAH,GAAe8G,QAAQ,CAACC,aAAT,CAAuB,sBAAvB,CAAf;AACA8O,MAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAamN,WAAb,CAAyB,IAAzB;AACA0I,MAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAagH,WAAb,CAAyBF,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAzB;AACA8O,MAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAaiT,MAAb,CAAoB,IAApB;AACA4C,MAAAA,GAAG,CAAClT,SAAJ,GAAgB,EAAhB;AACAkT,MAAAA,GAAG,CAAC7O,WAAJ,CAAgB6O,GAAG,CAAC7V,OAAD,CAAnB;AACH;;AAED,QAAIkW,KAAK,GAAG,IAAZ;;AAEA,QAAI,CAACL,GAAG,CAAC7V,OAAD,CAAH,CAAamW,WAAlB,EAA+B;AAC3BN,MAAAA,GAAG,CAAClT,SAAJ,GAAgB,EAAhB;AACAkT,MAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAa0N,KAAb;AACAwI,MAAAA,KAAK,GAAG,KAAR;AACAL,MAAAA,GAAG,CAAC7O,WAAJ,CAAgB6O,GAAG,CAAC7V,OAAD,CAAnB;AACH,KApBmB,CAsBpB;;;AACA6V,IAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAaqS,YAAb;AACAwD,IAAAA,GAAG,CAAC7V,OAAD,CAAH,CAAagD,IAAb,GAAoBA,IAApB;AACA,UAAM6S,GAAG,CAAC7V,OAAD,CAAH,CAAaoJ,IAAb,CAAkBpG,IAAlB,EAAwBkT,KAAxB,CAAN;AACH;;AAED,QAAMhE,MAAN,GAAe;AACX,QAAI,KAAKlP,IAAL,IAAa,KAAKoT,QAAL,CAAcpW,OAAd,CAAjB,EAAyC;AACrC,WAAKoW,QAAL,CAAcpW,OAAd,EAAuBkS,MAAvB;;AACA,YAAM,KAAKkE,QAAL,CAAcpW,OAAd,EAAuBoJ,IAAvB,CAA4B,KAAKpG,IAAjC,CAAN;AACH;AACJ;;AAtDgB;;AAyDrB7D,cAAc,CAAC,UAAD,EAAa,IAAIsW,cAAJ,EAAb,CAAd;;AAEAzT,qBAAqB","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport {throttlePromise, registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\r\nimport CONTAINER_STYLE from \"../less/container.less\";\r\nimport MATERIAL_STYLE from \"../less/material.less\";\r\n\r\n// Output runtime debug info like FPS.\r\nconst DEBUG = false;\r\n\r\nconst ROW_HEIGHT = 19;\r\n\r\n// Double buffer when the viewport scrolls columns, rows or when the\r\n// view is recreated.  Reduces render draw-in on some browsers, at the\r\n// expense of performance.\r\nconst DOUBLE_BUFFER_COLUMN = false;\r\nconst DOUBLE_BUFFER_ROW = false;\r\nconst DOUBLE_BUFFER_RECREATE = true;\r\n\r\n// The largest size virtual <div> in (px) that Chrome can support without\r\n// glitching.\r\nconst BROWSER_MAX_HEIGHT = 10000000;\r\n\r\nconst ICON_MAP = {\r\n    asc: \"arrow_upward\",\r\n    desc: \"arrow_downward\",\r\n    \"asc abs\": \"\\u21E7\",\r\n    \"desc abs\": \"\\u21E9\",\r\n    \"col asc\": \"arrow_back\",\r\n    \"col desc\": \"arrow_forward\",\r\n    \"col asc abs\": \"\\u21E8\",\r\n    \"col desc abs\": \"\\u21E6\"\r\n};\r\n\r\n/******************************************************************************\r\n *\r\n * Utilities\r\n *\r\n */\r\n\r\nconst PRIVATE = Symbol(\"Private Datagrid\");\r\n\r\nconst METADATA_MAP = new WeakMap();\r\n\r\n/**\r\n * A class method decorate for memoizing method results.  Only works on one\r\n * arg.\r\n */\r\nfunction memoize(_target, _property, descriptor) {\r\n    const cache = new Map();\r\n    const func = descriptor.value;\r\n    descriptor.value = new_func;\r\n    return descriptor;\r\n    function new_func(arg) {\r\n        if (cache.has(arg)) {\r\n            return cache.get(arg);\r\n        } else {\r\n            const res = func.call(this, arg);\r\n            cache.set(arg, res);\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n// Profiling\r\n\r\nlet LOG = [];\r\n\r\nfunction _log_fps() {\r\n    const avg = LOG.reduce((x, y) => x + y, 0) / LOG.length;\r\n    const rfps = LOG.length / 5;\r\n    const vfps = 1000 / avg;\r\n    const nframes = LOG.length;\r\n    console.log(`${avg.toFixed(2)} ms/frame   ${rfps} rfps   ${vfps.toFixed(2)} vfps   (${nframes} frames in 5s)`);\r\n    LOG = [];\r\n}\r\n\r\nfunction _start_profiling_loop() {\r\n    if (DEBUG) {\r\n        setInterval(_log_fps.bind(this), 5000);\r\n    }\r\n}\r\n\r\n// Tree Header Renderer\r\n// TODO factor out\r\n\r\nfunction _tree_header(td, path, is_leaf, is_open) {\r\n    let name;\r\n    if (path.length > 0) {\r\n        name = path[path.length - 1];\r\n    } else {\r\n        name = \"TOTAL\";\r\n    }\r\n    if (is_leaf) {\r\n        let html = \"\";\r\n        for (let i = 0; i < path.length; i++) {\r\n            html += `<span class=\"pd-tree-group\"></span>`;\r\n        }\r\n        td.innerHTML = `<div style=\"display:flex;align-items:stretch\">${html}<span class=\"pd-group-name pd-group-leaf\">${name}</span></div>`;\r\n    } else {\r\n        const icon = is_open ? \"remove\" : \"add\";\r\n        let html = \"\";\r\n        for (let i = 0; i < path.length; i++) {\r\n            html += `<span class=\"pd-tree-group\"></span>`;\r\n        }\r\n        td.innerHTML = `<div style=\"display:flex;align-items:stretch\">${html}<span class=\"pd-row-header-icon\">${icon}</span><span class=\"pd-group-name\">${name}</span></div>`;\r\n    }\r\n    td.classList.add(\"pd-group-header\");\r\n}\r\n\r\nasync function getCellConfig(view, config, row_idx, col_idx) {\r\n    const row_pivots = config.row_pivots;\r\n    const column_pivots = config.column_pivots;\r\n    const start_row = row_idx >= 0 ? row_idx : 0;\r\n    const end_row = start_row + 1;\r\n    const r = await view.to_json({start_row, end_row});\r\n    const row_paths = r.map(x => x.__ROW_PATH__);\r\n    const row_pivots_values = row_paths[0] || [];\r\n    const row_filters = row_pivots\r\n        .map((pivot, index) => {\r\n            const pivot_value = row_pivots_values[index];\r\n            return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\r\n        })\r\n        .filter(x => x);\r\n    const column_index = row_pivots.length > 0 ? col_idx + 1 : col_idx;\r\n    const column_paths = Object.keys(r[0])[column_index];\r\n    const result = {row: r[0]};\r\n    let column_filters = [];\r\n    if (column_paths) {\r\n        const column_pivot_values = column_paths.split(\"|\");\r\n        result.column_names = [column_pivot_values[column_pivot_values.length - 1]];\r\n        column_filters = column_pivots\r\n            .map((pivot, index) => {\r\n                const pivot_value = column_pivot_values[index];\r\n                return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\r\n            })\r\n            .filter(x => x)\r\n            .filter(([, , value]) => value !== \"__ROW_PATH__\");\r\n    }\r\n\r\n    const filters = config.filter.concat(row_filters).concat(column_filters);\r\n    result.config = {filters};\r\n    return result;\r\n}\r\n\r\n/******************************************************************************\r\n *\r\n * View Model\r\n *\r\n */\r\n\r\nclass ViewModel {\r\n    constructor(column_sizes, container, table) {\r\n        this._column_sizes = column_sizes;\r\n        this._container = container;\r\n        this.table = table;\r\n        this.cells = [];\r\n        this.rows = [];\r\n    }\r\n\r\n    num_rows() {\r\n        return this.cells.length;\r\n    }\r\n\r\n    _get_or_create_metadata(td) {\r\n        if (METADATA_MAP.has(td)) {\r\n            return METADATA_MAP.get(td);\r\n        } else {\r\n            const metadata = {};\r\n            METADATA_MAP.set(td, metadata);\r\n            return metadata;\r\n        }\r\n    }\r\n\r\n    @memoize\r\n    _format(type) {\r\n        const config = get_type_config(type);\r\n        const real_type = config.type || type;\r\n        const format_function = {\r\n            float: Intl.NumberFormat,\r\n            integer: Intl.NumberFormat,\r\n            datetime: Intl.DateTimeFormat,\r\n            date: Intl.DateTimeFormat\r\n        }[real_type];\r\n        if (format_function) {\r\n            const func = new format_function(\"en-us\", config.format);\r\n            return {\r\n                format(td, path) {\r\n                    td.textContent = func.format(path);\r\n                    if (real_type === \"integer\" || real_type === \"float\") {\r\n                        if (path > 0) {\r\n                            td.classList.add(\"pd-positive\");\r\n                        } else if (path < 0) {\r\n                            td.classList.add(\"pd-negative\");\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        } else if (type === undefined) {\r\n            return {format: _tree_header};\r\n        }\r\n    }\r\n\r\n    _get_cell(tag = \"td\", row_container, cidx, tr) {\r\n        let td = row_container[cidx];\r\n        if (!td) {\r\n            td = row_container[cidx] = document.createElement(tag);\r\n            tr.appendChild(td);\r\n        }\r\n        return td;\r\n    }\r\n\r\n    _get_row(ridx) {\r\n        let tr = this.rows[ridx];\r\n        if (!tr) {\r\n            tr = this.rows[ridx] = document.createElement(\"tr\");\r\n            this.table.appendChild(tr);\r\n        }\r\n\r\n        let row_container = this.cells[ridx];\r\n        if (!row_container) {\r\n            row_container = this.cells[ridx] = [];\r\n        }\r\n\r\n        return {tr, row_container};\r\n    }\r\n\r\n    _clean_columns(cidx) {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const tr = this.rows[i];\r\n            const row_container = this.cells[i];\r\n            let idx = cidx[i] || cidx;\r\n            while (tr.children[idx]) {\r\n                tr.removeChild(tr.children[idx]);\r\n            }\r\n            this.cells[i] = row_container.slice(0, idx);\r\n        }\r\n    }\r\n\r\n    _clean_rows(ridx) {\r\n        while (this.table.children[ridx]) {\r\n            this.table.removeChild(this.table.children[ridx]);\r\n        }\r\n        this.rows = this.rows.slice(0, ridx);\r\n        this.cells = this.cells.slice(0, ridx);\r\n    }\r\n}\r\n\r\n/**\r\n * <thead> view model.  This model accumulates state in the form of\r\n * column_sizes, which leverages <tables> autosize behavior across\r\n * virtual pages.\r\n *\r\n * @class DatagridHeaderViewModel\r\n */\r\nclass DatagridHeaderViewModel extends ViewModel {\r\n    _draw_group_th(offset_cache, d, column, sort_dir) {\r\n        const {tr, row_container} = this._get_row(d);\r\n        const th = this._get_cell(\"th\", row_container, offset_cache[d], tr);\r\n        const cidx = offset_cache[d];\r\n        offset_cache[d] += 1;\r\n        th.className = \"\";\r\n        th.removeAttribute(\"colspan\");\r\n        th.style.minWidth = \"0\";\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.cidx = cidx;\r\n\r\n        if (sort_dir?.length === 0) {\r\n            th.innerHTML = \"<span>\" + column + `</span><span class=\"pd-column-resize\"></span>`;\r\n        } else {\r\n            const sort_txt = sort_dir?.map(x => ICON_MAP[x]);\r\n            th.innerHTML = \"<span>\" + column + `</span><span class=\"pd-column-header-icon\">${sort_txt}</span><span class=\"pd-column-resize\"></span>`;\r\n        }\r\n        return th;\r\n    }\r\n\r\n    _redraw_previous(offset_cache, d) {\r\n        const {tr, row_container} = this._get_row(d);\r\n        const cidx = offset_cache[d] - 1;\r\n        if (cidx < 0) {\r\n            return;\r\n        }\r\n        const th = this._get_cell(\"th\", row_container, cidx, tr);\r\n        if (!th) return;\r\n        th.classList.add(\"pd-group-header\");\r\n        return th;\r\n    }\r\n\r\n    _draw_group(column, column_name, type, th) {\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.column_path = column;\r\n        metadata.column_name = column_name;\r\n        metadata.column_type = type;\r\n        metadata.is_column_header = false;\r\n        metadata.size_key = `${column}|${type}`;\r\n        th.className = \"\";\r\n    }\r\n\r\n    _draw_th(column, column_name, type, th) {\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.column_path = column;\r\n        metadata.column_name = column_name;\r\n        metadata.column_type = type;\r\n        metadata.is_column_header = true;\r\n        metadata.size_key = `${column}|${type}`;\r\n        const auto_width = this._column_sizes.auto[metadata.size_key];\r\n        const override_width = this._column_sizes.override[metadata.size_key];\r\n        th.classList.add(type);\r\n        if (override_width) {\r\n            th.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n            th.style.minWidth = override_width + \"px\";\r\n            th.style.maxWidth = override_width + \"px\";\r\n        } else if (auto_width) {\r\n            th.classList.remove(\"pd-cell-clip\");\r\n            th.style.maxWidth = \"none\";\r\n            th.style.minWidth = auto_width + \"px\";\r\n        }\r\n    }\r\n\r\n    draw(header_levels, alias, column, type, sort, {group_header_cache = [], offset_cache = []} = {}) {\r\n        let parts = column.split?.(\"|\");\r\n        let th,\r\n            column_name,\r\n            is_new_group = false;\r\n        for (let d = 0; d < header_levels; d++) {\r\n            column_name = parts[d] ? parts[d] : \"\";\r\n            group_header_cache[d] = group_header_cache[d] || [];\r\n            offset_cache[d] = offset_cache[d] || 0;\r\n            if (d < header_levels - 1) {\r\n                if (group_header_cache[d][0] === column_name) {\r\n                    th = group_header_cache[d][1];\r\n                    th.setAttribute(\"colspan\", (parseInt(th.getAttribute(\"colspan\")) || 1) + 1);\r\n                } else {\r\n                    th = this._draw_group_th(offset_cache, d, column_name, []);\r\n                    this._draw_group(column, column_name, type, th);\r\n                    group_header_cache[d] = [column_name, th];\r\n                    is_new_group = true;\r\n                }\r\n            } else {\r\n                if (is_new_group) {\r\n                    this._redraw_previous(offset_cache, d);\r\n                }\r\n                const sort_dir = sort?.filter(x => x[0] === column_name).map(x => x[1]);\r\n                th = this._draw_group_th(offset_cache, d, column_name, sort_dir);\r\n                this._draw_th(alias || column, column_name, type, th);\r\n            }\r\n        }\r\n\r\n        if (header_levels === 1 && type === undefined) {\r\n            th.classList.add(\"pd-group-header\");\r\n        }\r\n        this._clean_rows(offset_cache.length);\r\n        return {group_header_cache, offset_cache, th};\r\n    }\r\n\r\n    clean({offset_cache}) {\r\n        this._clean_columns(offset_cache);\r\n    }\r\n}\r\n\r\nfunction column_path_2_type(schema, column) {\r\n    let parts = column.split(\"|\");\r\n    return schema[parts[parts.length - 1]];\r\n}\r\n\r\nfunction _is_equals_id(id, selected_id) {\r\n    if (Array.isArray(id) && Array.isArray(selected_id)) {\r\n        let i;\r\n        for (i = 0; i < selected_id.length; i++) {\r\n            if (id[i] !== selected_id[i]) {\r\n                return 0;\r\n            }\r\n        }\r\n        return id.length === selected_id.length ? 2 : 1;\r\n    } else {\r\n        return id === selected_id && id !== undefined ? 2 : 0;\r\n    }\r\n}\r\n\r\n/**\r\n * <tbody> view model.\r\n *\r\n * @class DatagridBodyViewModel\r\n */\r\nclass DatagridBodyViewModel extends ViewModel {\r\n    _draw_td(ridx, cidx, column, val, id, selected_id, type, depth, is_open, ridx_offset, cidx_offset) {\r\n        const {tr, row_container} = this._get_row(ridx);\r\n        if (selected_id !== false) {\r\n            const is_selected = _is_equals_id(id, selected_id);\r\n            tr.classList.toggle(\"pd-selected\", is_selected === 2);\r\n            tr.classList.toggle(\"pd-sub-selected\", is_selected === 1);\r\n        }\r\n        const td = this._get_cell(\"td\", row_container, cidx, tr);\r\n        const metadata = this._get_or_create_metadata(td);\r\n        metadata.id = id;\r\n        metadata.cidx = cidx + cidx_offset;\r\n        if (metadata.value !== val || metadata.type !== type) {\r\n            td.className = type;\r\n            metadata.column = column;\r\n            metadata.size_key = `${column}|${type}`;\r\n            const override_width = this._column_sizes.override[metadata.size_key];\r\n            if (override_width) {\r\n                const auto_width = this._column_sizes.auto[metadata.size_key];\r\n                td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n                //td.classList.remove(\"pd-cell-clip\");\r\n                td.style.minWidth = override_width + \"px\";\r\n                td.style.maxWidth = override_width + \"px\";\r\n            } else {\r\n                td.classList.remove(\"pd-cell-clip\");\r\n                td.style.minWidth = \"0\";\r\n                td.style.maxWidth = \"none\";\r\n            }\r\n            const formatter = this._format(type);\r\n            if (val === undefined || val === null) {\r\n                td.textContent = \"-\";\r\n                metadata.value = null;\r\n                metadata.row_path = null;\r\n                metadata.ridx = ridx + ridx_offset;\r\n            } else if (formatter) {\r\n                formatter.format(td, val, val.length === depth, is_open);\r\n                metadata.value = Array.isArray(val) ? val[val.length - 1] : val;\r\n                metadata.row_path = val;\r\n                metadata.ridx = ridx + ridx_offset;\r\n                metadata.is_open = is_open;\r\n            } else {\r\n                td.textContent = val;\r\n                metadata.value = val;\r\n                metadata.ridx = ridx + ridx_offset;\r\n            }\r\n        }\r\n\r\n        return {td, metadata};\r\n    }\r\n\r\n    draw(container_height, column_name, cidx, column_data, id_column, selected_id, type, depth, ridx_offset, cidx_offset) {\r\n        let ridx = 0;\r\n        let td, metadata;\r\n        for (const val of column_data) {\r\n            const next = column_data[ridx + 1];\r\n            const id = id_column?.[ridx];\r\n            const obj = this._draw_td(ridx++, cidx, column_name, val, id, selected_id, type, depth, next?.length > val?.length, ridx_offset, cidx_offset);\r\n            td = obj.td;\r\n            metadata = obj.metadata;\r\n\r\n            if (ridx * ROW_HEIGHT > container_height) {\r\n                break;\r\n            }\r\n        }\r\n        this._clean_rows(ridx);\r\n        const offsetWidth = td?.offsetWidth;\r\n        if (offsetWidth && !this._column_sizes.override[metadata.size_key]) {\r\n            this._column_sizes.auto[metadata.size_key] = offsetWidth;\r\n        }\r\n        return {offsetWidth: offsetWidth, cidx, ridx};\r\n    }\r\n\r\n    clean({ridx, cidx}) {\r\n        this._clean_rows(ridx);\r\n        this._clean_columns(cidx);\r\n    }\r\n}\r\n\r\n/**\r\n * <table> view model.  In order to handle unknown column width when `draw()`\r\n * is called, this model will iteratively fetch more data to fill in columns\r\n * until the page is complete, and makes some column viewport estimations\r\n * when this information is not availble.\r\n *\r\n * @class DatagridTableViewModel\r\n */\r\nclass DatagridTableViewModel {\r\n    constructor(table_clip, column_sizes) {\r\n        const table = document.createElement(\"table\");\r\n        table.setAttribute(\"cellspacing\", 0);\r\n\r\n        const thead = document.createElement(\"thead\");\r\n        table.appendChild(thead);\r\n\r\n        const tbody = document.createElement(\"tbody\");\r\n        table.appendChild(tbody);\r\n\r\n        this.table = table;\r\n        this._column_sizes = column_sizes;\r\n        this.header = new DatagridHeaderViewModel(column_sizes, table_clip, thead);\r\n        this.body = new DatagridBodyViewModel(column_sizes, table_clip, tbody);\r\n        this.fragment = document.createDocumentFragment();\r\n    }\r\n\r\n    num_columns() {\r\n        return this.header._get_row(Math.max(0, this.header.rows?.length - 1 || 0)).row_container.length;\r\n    }\r\n\r\n    async draw(view, container_width, container_height, header_levels, row_levels, column_paths, row_paths, sort, schema, selected_id, is_resize, viewport) {\r\n        const visible_columns = column_paths.slice(viewport.start_col);\r\n\r\n        const columns_data = await view.to_columns(viewport);\r\n        const {start_col: sidx} = viewport;\r\n        let cont_body,\r\n            cont_head,\r\n            cidx = 0,\r\n            width = 0;\r\n        const id_column = columns_data[\"__ID__\"];\r\n\r\n        if (column_paths[0] === \"__ROW_PATH__\") {\r\n            cont_head = this.header.draw(header_levels, row_paths.join(\",\"), \"\");\r\n            cont_body = this.body.draw(container_height, row_paths.join(\",\"), 0, columns_data[\"__ROW_PATH__\"], id_column, selected_id, undefined, row_levels, viewport.start_row, 0);\r\n            selected_id = false;\r\n            if (!is_resize) {\r\n                this._column_sizes.indices[0] = cont_body.offsetWidth;\r\n            }\r\n            width += cont_body.offsetWidth;\r\n            cidx++;\r\n        }\r\n\r\n        try {\r\n            while (cidx < visible_columns.length) {\r\n                const column_name = visible_columns[cidx];\r\n                if (!columns_data[column_name]) {\r\n                    let missing_cidx = Math.max(viewport.end_col, 0);\r\n                    viewport.start_col = missing_cidx;\r\n                    viewport.end_col = missing_cidx + 1;\r\n                    const new_col = await view.to_columns(viewport);\r\n                    if (!(column_name in new_col)) {\r\n                        new_col[column_name] = [];\r\n                    }\r\n                    columns_data[column_name] = new_col[column_name];\r\n                }\r\n                const column_data = columns_data[column_name];\r\n                const type = column_path_2_type(schema, column_name);\r\n\r\n                cont_head = this.header.draw(header_levels, undefined, column_name, type, sort, cont_head);\r\n                cont_body = this.body.draw(container_height, column_name, cidx, column_data, id_column, selected_id, type, undefined, viewport.start_row, sidx);\r\n                selected_id = false;\r\n                width += cont_body.offsetWidth || cont_head.th.offsetWidth;\r\n                if (!is_resize) {\r\n                    this._column_sizes.indices[cidx + sidx] = cont_body.offsetWidth || cont_head.th.offsetWidth;\r\n                }\r\n                cidx++;\r\n\r\n                if (width > container_width) {\r\n                    break;\r\n                }\r\n            }\r\n        } finally {\r\n            this.body.clean({ridx: cont_body?.ridx || 0, cidx});\r\n            if (cont_head) {\r\n                this.header.clean(cont_head);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the virtual scroll pane, as well as the double buffering\r\n * of the underlying <table> (really two). This DOM structure looks\r\n * a little like this:\r\n *\r\n *     +------------------------+      <- div.pd-scroll-container\r\n *     | +----------------------|------<- div.pd-virtual-panel\r\n *     | | +------------------+ |      <- div.pd-scroll-table-clip\r\n *     | | | +----------------|-|--+   <- table             |\r\n *     | | | | 1  A  Alabama  | |  |                        |\r\n *     | | | | 2  B  Arizona  | |  |                        |\r\n *     | | | | 3  C  Arkansas | |  |                        |\r\n *     | | | | 4  D  Californi| |  |                        |\r\n *     | | | | 5  E  Colorado | |  |                        |\r\n *     | | +------------------+ |  |                        |\r\n *     +------------------------+  |                        |\r\n *       |   | 8  H  District of C |                        |\r\n *       |   +---------------------+                        |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       +--------------------------------------------------+\r\n *\r\n * `overflow: auto` is applied to `.pd-scroll-container`, and `.pd-virtual-pane`\r\n * is sized to match the estimated \"virtual\" size of the `table`;  estimated,\r\n * because it's true size can't be known until all columns dimensions are known,\r\n * which may be deferred in the case of auto-sized tables.\r\n *\r\n * Double buffering can be enabled on \"column scroll\", \"row scroll\" and/or\r\n * \"column schema change\".  When enabled and a redraw is requested for the case,\r\n * the existing table is cloned with `cloneNode()` and swapped with the real\r\n * `table`, which is then updated offscreen and swapped back in.  While this is\r\n * much slower to render, it prevents draw-in.\r\n *\r\n * @class DatagridVirtualTableViewModel\r\n */\r\nclass DatagridVirtualTableViewModel extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._create_shadow_dom();\r\n    }\r\n\r\n    set_element(elem) {\r\n        this.elem = elem;\r\n    }\r\n\r\n    get_meta(td) {\r\n        return METADATA_MAP.get(td);\r\n    }\r\n\r\n    get_tds() {\r\n        return this.table_model.body.cells.flat(1);\r\n    }\r\n\r\n    get_ths() {\r\n        return this.table_model.body.cells.flat(1);\r\n    }\r\n\r\n    clear() {\r\n        this._sticky_container.innerHTML = \"<table></table>\";\r\n    }\r\n\r\n    _create_shadow_dom() {\r\n        this.attachShadow({mode: \"open\"});\r\n        const style = document.createElement(\"style\");\r\n        style.textContent = CONTAINER_STYLE + MATERIAL_STYLE;\r\n        this.shadowRoot.appendChild(style);\r\n\r\n        const virtual_panel = document.createElement(\"div\");\r\n        virtual_panel.classList.add(\"pd-virtual-panel\");\r\n\r\n        const table_clip = document.createElement(\"div\");\r\n        table_clip.classList.add(\"pd-scroll-table-clip\");\r\n\r\n        const scroll_container = document.createElement(\"div\");\r\n        scroll_container.classList.add(\"pd-scroll-container\");\r\n        scroll_container.appendChild(virtual_panel);\r\n        scroll_container.appendChild(table_clip);\r\n        scroll_container.addEventListener(\"scroll\", this._on_scroll.bind(this), {passive: false});\r\n        scroll_container.addEventListener(\"mousewheel\", this._on_mousewheel.bind(this), {passive: false});\r\n\r\n        const slot = document.createElement(\"slot\");\r\n        table_clip.appendChild(slot);\r\n\r\n        this.shadowRoot.appendChild(scroll_container);\r\n\r\n        const table_staging = document.createElement(\"div\");\r\n        table_staging.style.position = \"absolute\";\r\n        table_staging.style.visibility = \"hidden\";\r\n        scroll_container.appendChild(table_staging);\r\n\r\n        const sticky_container = document.createElement(\"div\");\r\n        sticky_container.addEventListener(\"mousedown\", this._on_click.bind(this));\r\n        sticky_container.addEventListener(\"dblclick\", this._on_dblclick.bind(this));\r\n\r\n        this._sticky_container = sticky_container;\r\n        this._table_clip = table_clip;\r\n        this._table_staging = table_staging;\r\n        this._scroll_container = scroll_container;\r\n        this._virtual_panel = virtual_panel;\r\n    }\r\n\r\n    _calculate_row_range(container_height, nrows, preserve_scroll_position) {\r\n        const total_scroll_height = Math.max(1, this._virtual_panel.offsetHeight - container_height);\r\n        const percent_scroll = this._scroll_container.scrollTop / total_scroll_height;\r\n        const virtual_panel_row_height = Math.floor(container_height / ROW_HEIGHT);\r\n        const relative_nrows = preserve_scroll_position ? this._nrows || 0 : nrows;\r\n        let start_row = Math.floor(Math.max(0, relative_nrows + this.table_model.header.cells.length - virtual_panel_row_height) * percent_scroll);\r\n        let end_row = start_row + virtual_panel_row_height;\r\n        if (end_row - 1 > nrows) {\r\n            const offset = end_row - 1 - nrows;\r\n            if (start_row - offset < 0) {\r\n                end_row = nrows;\r\n                start_row = 0;\r\n            } else {\r\n                start_row -= offset;\r\n                end_row -= offset;\r\n            }\r\n        }\r\n        return {start_row, end_row};\r\n    }\r\n\r\n    _calculate_column_range(container_width, row_paths, column_paths) {\r\n        const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - container_width);\r\n        const percent_left = this._scroll_container.scrollLeft / total_scroll_width;\r\n\r\n        const max_scroll_column = this._max_scroll_column(container_width, row_paths, column_paths) + 0.5;\r\n\r\n        let start_col = Math.floor(max_scroll_column * percent_left);\r\n        let end_col = start_col + (this.table_model.num_columns() || 1) + 1;\r\n\r\n        return {start_col, end_col};\r\n    }\r\n\r\n    _validate_viewport({start_col, end_col, start_row, end_row}) {\r\n        const invalid_column = this._start_col !== start_col;\r\n        const invalid_row = this._start_row !== start_row || this._end_row !== end_row || this._end_col !== end_col;\r\n        this._start_col = start_col;\r\n        this._end_col = end_col;\r\n        this._start_row = start_row;\r\n        this._end_row = end_row;\r\n        return {invalid_column, invalid_row};\r\n    }\r\n\r\n    _needs_swap(force_redraw, invalid_row, invalid_column) {\r\n        return (DOUBLE_BUFFER_RECREATE && force_redraw) || (DOUBLE_BUFFER_COLUMN && (invalid_column || force_redraw)) || (DOUBLE_BUFFER_ROW && (invalid_row || force_redraw));\r\n    }\r\n\r\n    _swap_in(...args) {\r\n        if (this._needs_swap(...args)) {\r\n            if (this._table_staging !== this.table_model.table.parentElement) {\r\n                this._sticky_container.replaceChild(this.table_model.table.cloneNode(true), this.table_model.table);\r\n                this._table_staging.appendChild(this.table_model.table);\r\n            }\r\n        } else {\r\n            if (this._sticky_container !== this.table_model.table.parentElement) {\r\n                this._sticky_container.replaceChild(this.table_model.table, this._sticky_container.children[0]);\r\n            }\r\n        }\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-before-update\", {detail: this}));\r\n    }\r\n\r\n    _swap_out(...args) {\r\n        if (this._needs_swap(...args)) {\r\n            this._sticky_container.replaceChild(this.table_model.table, this._sticky_container.children[0]);\r\n        }\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-after-update\", {detail: this}));\r\n    }\r\n\r\n    _max_scroll_column(container_width, row_pivots, column_paths) {\r\n        let width = 0;\r\n        if (row_pivots.length > 0) {\r\n            width = this._column_sizes.indices[0];\r\n        }\r\n        let max_scroll_column = column_paths.length;\r\n        while (width < container_width) {\r\n            max_scroll_column--;\r\n            width += this._column_sizes.indices[max_scroll_column] || 100;\r\n        }\r\n        return Math.min(column_paths.length - (row_pivots.length > 0 ? 2 : 1), max_scroll_column + (row_pivots.length > 0 ? 0 : 1));\r\n    }\r\n\r\n    _update_virtual_panel_width(force_redraw, container_width, row_pivots, column_paths) {\r\n        if (force_redraw) {\r\n            const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - container_width);\r\n            const percent_left = this._scroll_container.scrollLeft / total_scroll_width;\r\n            const max_scroll_column = this._max_scroll_column(container_width, row_pivots, column_paths);\r\n            let cidx = 0,\r\n                virtual_width = 0;\r\n            while (cidx < max_scroll_column) {\r\n                virtual_width += this._column_sizes.indices[cidx] || 100;\r\n                cidx++;\r\n            }\r\n            const panel_width = container_width + virtual_width;\r\n            this._virtual_panel.style.width = panel_width + \"px\";\r\n            this._scroll_container.scrollLeft = percent_left * virtual_width;\r\n        }\r\n    }\r\n\r\n    _update_virtual_panel_height(nrows) {\r\n        const virtual_panel_px_size = Math.min(BROWSER_MAX_HEIGHT, (nrows + this.table_model.header.cells.length) * ROW_HEIGHT);\r\n        this._virtual_panel.style.height = `${virtual_panel_px_size}px`;\r\n    }\r\n\r\n    /**\r\n     * @returns\r\n     * @memberof DatagridViewModel\r\n     */\r\n    async _on_scroll(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.returnValue = false;\r\n        await this.draw(this.view);\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-scroll\"));\r\n    }\r\n\r\n    /**\r\n     * Mousewheel must precalculate in addition to `_on_scroll` to prevent\r\n     * visual artifacts due to scrolling \"inertia\" on modern browsers/mobile.\r\n     *\r\n     * @param {*} event\r\n     * @memberof DatagridViewModel\r\n     */\r\n    _on_mousewheel(event) {\r\n        event.preventDefault();\r\n        event.returnValue = false;\r\n        const total_scroll_height = Math.max(1, this._virtual_panel.offsetHeight - this._scroll_container.offsetHeight);\r\n        const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - this._scroll_container.offsetWidth);\r\n        this._scroll_container.scrollTop = Math.min(total_scroll_height, this._scroll_container.scrollTop + event.deltaY);\r\n        this._scroll_container.scrollLeft = Math.min(total_scroll_width, this._scroll_container.scrollLeft + event.deltaX);\r\n        this._on_scroll(event);\r\n    }\r\n\r\n    _reset_viewport() {\r\n        this._start_row = undefined;\r\n        this._end_row = undefined;\r\n        this._start_col = undefined;\r\n        this._end_col = undefined;\r\n    }\r\n\r\n    resize() {\r\n        this._container_width = undefined;\r\n        this._container_height = undefined;\r\n        this._nrows = undefined;\r\n        this._reset_viewport();\r\n    }\r\n\r\n    reset_scroll() {\r\n        this._column_sizes.indices = [];\r\n        this._scroll_container.scrollTop = 0;\r\n        this._scroll_container.scrollLeft = 0;\r\n        this._reset_viewport();\r\n    }\r\n\r\n    @throttlePromise\r\n    async draw(view, force_redraw = false, preserve_scroll_position = false, preserve_width = false) {\r\n        let start;\r\n        if (DEBUG) {\r\n            start = performance.now();\r\n        }\r\n\r\n        this.config = await view.get_config();\r\n\r\n        const container_width = (this._container_width = this._container_width || this._scroll_container.offsetWidth);\r\n        const container_height = (this._container_height = this._container_height || this._scroll_container.offsetHeight);\r\n\r\n        const nrowsp = view.num_rows().catch(() => {});\r\n        const column_pathsp = view.column_paths().catch(() => {});\r\n        const schemap = view.schema().catch(() => {});\r\n        const nrows = await nrowsp;\r\n        const {start_row, end_row} = this._calculate_row_range(container_height, nrows, preserve_scroll_position);\r\n        this._nrows = nrows;\r\n\r\n        this._update_virtual_panel_height(nrows);\r\n\r\n        const column_paths = await column_pathsp;\r\n        if (column_paths === undefined) {\r\n            return;\r\n        }\r\n        let {start_col, end_col} = this._calculate_column_range(container_width, this.config.row_pivots, column_paths);\r\n        const id = this.config.row_pivots.length > 0;\r\n        const viewport = {start_col, end_col, start_row, end_row, id};\r\n        let {invalid_row, invalid_column} = this._validate_viewport(viewport);\r\n        if (force_redraw || invalid_row || invalid_column) {\r\n            this._swap_in(force_redraw, invalid_row, invalid_column);\r\n            const header_levels = this.config.column_pivots.length + 1;\r\n            const row_levels = this.config.row_pivots.length;\r\n            const schema = await schemap;\r\n            await this.table_model.draw(\r\n                view,\r\n                container_width,\r\n                container_height,\r\n                header_levels,\r\n                row_levels,\r\n                column_paths,\r\n                this.config.row_pivots,\r\n                this.config.sort,\r\n                schema,\r\n                this._selected_id,\r\n                preserve_width,\r\n                viewport\r\n            );\r\n            this._swap_out(force_redraw, invalid_row, invalid_column);\r\n            if (!preserve_width) {\r\n                this._update_virtual_panel_width(force_redraw || invalid_column, container_width, this.config.row_pivots, column_paths);\r\n            }\r\n        }\r\n\r\n        if (DEBUG) {\r\n            LOG.push(performance.now() - start);\r\n        }\r\n    }\r\n\r\n    attach(render_element) {\r\n        this._column_sizes = {auto: {}, override: {}, indices: []};\r\n        this.table_model = new DatagridTableViewModel(this._table_clip, this._column_sizes);\r\n        this._sticky_container.appendChild(this.table_model.table);\r\n        if (render_element) {\r\n            this.render_element = render_element;\r\n        }\r\n        if (!this.table_model) return;\r\n        if (this.render_element) {\r\n            if (this.render_element !== this.table_model.table.parentElement) {\r\n                this.render_element.appendChild(this._sticky_container);\r\n            } else {\r\n            }\r\n        } else {\r\n            this.appendChild(this.table_model.table);\r\n        }\r\n    }\r\n\r\n    async _on_dblclick(event) {\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_resize) {\r\n            await new Promise(setTimeout);\r\n            this._column_sizes.override[metadata.size_key] = undefined;\r\n            this._column_sizes.auto[metadata.size_key] = undefined;\r\n            this._column_sizes.indices[metadata.cidx] = undefined;\r\n            element.style.minWidth = \"0\";\r\n            element.style.maxWidth = \"none\";\r\n            for (const row of this.table_model.body.cells) {\r\n                const td = row[metadata.cidx];\r\n                td.style.minWidth = \"0\";\r\n                td.style.maxWidth = \"none\";\r\n                td.classList.remove(\"pd-cell-clip\");\r\n            }\r\n            await this.draw(this.view, true, true);\r\n        }\r\n    }\r\n\r\n    async _on_click(event) {\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n        const is_button = event.target.classList.contains(\"pd-row-header-icon\");\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_button) {\r\n            await this._on_toggle(event, metadata);\r\n        } else if (is_resize) {\r\n            this._on_resize_column(event, element, metadata);\r\n        } else if (metadata?.is_column_header) {\r\n            await this._on_sort(event, metadata);\r\n        } else {\r\n            await this._on_select(metadata);\r\n        }\r\n    }\r\n\r\n    _on_resize_column(event, element, metadata) {\r\n        const start = event.pageX;\r\n        const width = element.offsetWidth;\r\n        const scroll_left = this._scroll_container.scrollLeft;\r\n        const move = event => this._on_resize_column_move(event, element, start, width, scroll_left, metadata);\r\n        const up = async () => {\r\n            document.removeEventListener(\"mousemove\", move);\r\n            document.removeEventListener(\"mouseup\", up);\r\n            const override_width = this._column_sizes.override[metadata.size_key];\r\n            this._column_sizes.indices[metadata.cidx] = override_width;\r\n            await this.draw(this.view, true, true);\r\n        };\r\n        document.addEventListener(\"mousemove\", move);\r\n        document.addEventListener(\"mouseup\", up);\r\n    }\r\n\r\n    @throttlePromise\r\n    async _on_resize_column_move(event, th, start, width, scroll_left, metadata) {\r\n        await new Promise(setTimeout);\r\n        const diff = event.pageX - start;\r\n        const override_width = width + diff;\r\n        this._column_sizes.override[metadata.size_key] = override_width;\r\n        th.style.minWidth = override_width + \"px\";\r\n        th.style.maxWidth = override_width + \"px\";\r\n        const auto_width = this._column_sizes.auto[metadata.size_key];\r\n        for (const row of this.table_model.body.cells) {\r\n            const td = row[metadata.cidx];\r\n            td.style.maxWidth = td.style.minWidth = override_width + \"px\";\r\n            td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n        }\r\n        if (diff < 0) {\r\n            await this.draw(this.view, true, true, true);\r\n        }\r\n    }\r\n\r\n    async _on_select(metadata) {\r\n        if (!this.elem.hasAttribute(\"selectable\")) {\r\n            return;\r\n        }\r\n        const cell_config = await getCellConfig(this.view, this.config, metadata.ridx, metadata.cidx);\r\n        if (_is_equals_id(metadata.id, this._selected_id) === 2) {\r\n            this._selected_id = undefined;\r\n            this.elem.dispatchEvent(\r\n                new CustomEvent(\"perspective-select\", {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    detail: {selected: false, config: {filters: []}}\r\n                })\r\n            );\r\n        } else {\r\n            this._selected_id = metadata.id;\r\n            this.elem.dispatchEvent(\r\n                new CustomEvent(\"perspective-select\", {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    detail: {selected: true, ...cell_config}\r\n                })\r\n            );\r\n        }\r\n        await this.draw(this.view, true, true);\r\n    }\r\n\r\n    async _on_toggle(event, metadata) {\r\n        if (metadata.is_open) {\r\n            if (event.shiftKey) {\r\n                await this.view.set_depth(metadata.row_path.length - 1);\r\n            } else {\r\n                await this.view.collapse(metadata.ridx);\r\n            }\r\n        } else if (metadata.is_open === false) {\r\n            if (event.shiftKey) {\r\n                await this.view.set_depth(metadata.row_path.length);\r\n            } else {\r\n                await this.view.expand(metadata.ridx);\r\n            }\r\n        }\r\n        await this.draw(this.view, true, true);\r\n    }\r\n\r\n    async _on_sort(event, metadata) {\r\n        // `element` is a `<th>`\r\n        let {sort} = await this.elem.view.get_config();\r\n        const current_idx = sort.findIndex(x => x[0] === metadata.column_name);\r\n\r\n        if (current_idx > -1) {\r\n            // Already sorted by `metadata.column_name`, so increment\r\n            const [name, direction] = sort[current_idx];\r\n            const new_sort = this.elem._increment_sort(direction, false, event.altKey);\r\n            sort[current_idx] = [name, new_sort];\r\n        } else {\r\n            // Not sorted, append\r\n            if (event.shiftKey) {\r\n                sort.push([metadata.column_name, event.altKey ? \"asc abs\" : \"asc\"]);\r\n            } else {\r\n                sort = [[metadata.column_name, event.altKey ? \"asc abs\" : \"asc\"]];\r\n            }\r\n        }\r\n        this.elem.setAttribute(\"sort\", JSON.stringify(sort));\r\n    }\r\n}\r\n\r\nwindow.customElements.define(\"perspective-datagrid\", DatagridVirtualTableViewModel);\r\n\r\n/******************************************************************************\r\n *\r\n * <perspective-viewer> integration\r\n *\r\n */\r\n\r\n/**\r\n * <perspective-viewer> plugin.\r\n *\r\n * @class DatagridPlugin\r\n */\r\nclass DatagridPlugin {\r\n    get name() {\r\n        return \"Datagrid\";\r\n    }\r\n\r\n    get selectMode() {\r\n        return \"toggle\";\r\n    }\r\n\r\n    get deselectMode() {\r\n        return \"pivots\";\r\n    }\r\n\r\n    async update(div, view) {\r\n        try {\r\n            await div[PRIVATE].draw(view, true, true);\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    async create(div, view) {\r\n        if (!div.hasOwnProperty(PRIVATE)) {\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = MATERIAL_STYLE;\r\n            document.head.appendChild(style);\r\n            div[PRIVATE] = document.createElement(\"perspective-datagrid\");\r\n            div[PRIVATE].set_element(this);\r\n            div[PRIVATE].appendChild(document.createElement(\"slot\"));\r\n            div[PRIVATE].attach(this);\r\n            div.innerHTML = \"\";\r\n            div.appendChild(div[PRIVATE]);\r\n        }\r\n\r\n        let force = true;\r\n\r\n        if (!div[PRIVATE].isConnected) {\r\n            div.innerHTML = \"\";\r\n            div[PRIVATE].clear();\r\n            force = false;\r\n            div.appendChild(div[PRIVATE]);\r\n        }\r\n\r\n        // TODO only on schema change\r\n        div[PRIVATE].reset_scroll();\r\n        div[PRIVATE].view = view;\r\n        await div[PRIVATE].draw(view, force);\r\n    }\r\n\r\n    async resize() {\r\n        if (this.view && this._datavis[PRIVATE]) {\r\n            this._datavis[PRIVATE].resize();\r\n            await this._datavis[PRIVATE].draw(this.view);\r\n        }\r\n    }\r\n}\r\n\r\nregisterPlugin(\"datagrid\", new DatagridPlugin());\r\n\r\n_start_profiling_loop();\r\n"],"file":"datagrid.js"}