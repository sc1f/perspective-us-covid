{"version":3,"sources":["../../src/js/tree_row_header.js"],"names":["html","_tree_header_classes","name","type","is_leaf","cls","_format_class","header_classes","push","join","_tree_header_levels","path","is_open","tree_levels","map","group_icon","tree_button","tree_header","td","types","length","call","header_text","_format_text","classList","add","innerHTML"],"mappings":"AAAA;;;;;;;;AASA,SAAQA,IAAR,QAAmB,SAAnB;;AAEA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,OAA1C,EAAmD;AAC/C,QAAMC,GAAG,GAAG,KAAKC,aAAL,CAAmBH,IAAnB,EAAyBD,IAAzB,CAAZ;;AACA,QAAMK,cAAc,GAAG,CAAC,eAAD,CAAvB;;AACA,MAAIH,OAAJ,EAAa;AACTG,IAAAA,cAAc,CAACC,IAAf,CAAoB,eAApB;AACH;;AAED,MAAIH,GAAJ,EAAS;AACLE,IAAAA,cAAc,CAACC,IAAf,CAAoBH,GAApB;AACH;;AAED,SAAOE,cAAc,CAACE,IAAf,CAAoB,GAApB,CAAP;AACH;;AAED,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CR,OAA5C,EAAqD;AACjD,QAAMS,WAAW,GAAGF,IAAI,CAACG,GAAL,CAAS,MAAO,qCAAhB,CAApB;;AACA,MAAI,CAACV,OAAL,EAAc;AACV,UAAMW,UAAU,GAAGH,OAAO,GAAG,QAAH,GAAc,KAAxC;AACA,UAAMI,WAAW,GAAI,oCAAmCD,UAAW,SAAnE;AACAF,IAAAA,WAAW,CAACL,IAAZ,CAAiBQ,WAAjB;AACH;;AAED,SAAOH,WAAW,CAACJ,IAAZ,CAAiB,EAAjB,CAAP;AACH;;AAED,OAAO,SAASQ,WAAT,CAAqBC,EAArB,EAAyBP,IAAzB,EAA+BQ,KAA/B,EAAsCf,OAAtC,EAA+CQ,OAA/C,EAAwD;AAC3D,QAAMT,IAAI,GAAGgB,KAAK,CAACR,IAAI,CAACS,MAAL,GAAc,CAAf,CAAlB;AACA,QAAMlB,IAAI,GAAGS,IAAI,CAACS,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8BT,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAA/C;;AACA,QAAMb,cAAc,GAAGN,oBAAoB,CAACoB,IAArB,CAA0B,IAA1B,EAAgCnB,IAAhC,EAAsCC,IAAtC,EAA4CC,OAA5C,CAAvB;;AACA,QAAMS,WAAW,GAAGH,mBAAmB,CAACC,IAAD,EAAOC,OAAP,EAAgBR,OAAhB,CAAvC;;AACA,QAAMkB,WAAW,GAAG,KAAKC,YAAL,CAAkBpB,IAAlB,EAAwBD,IAAxB,CAApB;;AAEAgB,EAAAA,EAAE,CAACM,SAAH,CAAaC,GAAb,CAAiB,iBAAjB;AACAP,EAAAA,EAAE,CAACQ,SAAH,GAAe1B,IAAK,qCAEVa,WAAY,iBACCN,cAAe,KAAIe,WAAY,kBAHtD;AAMH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {html} from \"./utils\";\n\nfunction _tree_header_classes(name, type, is_leaf) {\n    const cls = this._format_class(type)(name);\n    const header_classes = [\"pd-group-name\"];\n    if (is_leaf) {\n        header_classes.push(\"pd-group-leaf\");\n    }\n\n    if (cls) {\n        header_classes.push(cls);\n    }\n\n    return header_classes.join(\" \");\n}\n\nfunction _tree_header_levels(path, is_open, is_leaf) {\n    const tree_levels = path.map(() => `<span class=\"pd-tree-group\"></span>`);\n    if (!is_leaf) {\n        const group_icon = is_open ? \"remove\" : \"add\";\n        const tree_button = `<span class=\"pd-row-header-icon\">${group_icon}</span>`;\n        tree_levels.push(tree_button);\n    }\n\n    return tree_levels.join(\"\");\n}\n\nexport function tree_header(td, path, types, is_leaf, is_open) {\n    const type = types[path.length - 1];\n    const name = path.length === 0 ? \"TOTAL\" : path[path.length - 1];\n    const header_classes = _tree_header_classes.call(this, name, type, is_leaf);\n    const tree_levels = _tree_header_levels(path, is_open, is_leaf);\n    const header_text = this._format_text(type)(name);\n\n    td.classList.add(\"pd-group-header\");\n    td.innerHTML = html`\n        <span class=\"pd-tree-container\">\n            ${tree_levels}\n            <span class=\"${header_classes}\">${header_text}</span>\n        </span>\n    `;\n}\n"],"file":"tree_row_header.js"}