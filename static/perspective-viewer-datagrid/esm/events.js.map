{"version":3,"sources":["../../src/js/events.js"],"names":["throttlePromise","isEqual","METADATA_MAP","DatagridVirtualTableViewModel","getCellConfig","DatagridViewEventModel","register_listeners","_scroll_container","addEventListener","_on_scroll","bind","passive","_on_mousewheel","_sticky_container","_on_click","_on_dblclick","event","stopPropagation","returnValue","draw","_render_element","dispatchEvent","CustomEvent","_virtual_scrolling_disabled","preventDefault","offsetWidth","offsetHeight","scrollTop","scrollLeft","total_scroll_height","Math","max","_virtual_panel","total_scroll_width","min","deltaY","deltaX","element","target","tagName","parentElement","contains","is_resize","classList","metadata","get","Promise","setTimeout","_column_sizes","override","size_key","auto","indices","cidx","style","minWidth","maxWidth","row","table_model","body","cells","td","remove","invalid_viewport","button","is_button","_on_toggle","_on_resize_column","is_column_header","_on_sort","_on_select","start","pageX","header","get_column_header","vcidx","width","move","_on_resize_column_move","up","document","removeEventListener","override_width","th","diff","preserve_width","auto_width","toggle","hasAttribute","is_deselect","id","_selected_id","filters","undefined","_view_cache","ridx","config","bubbles","composed","detail","selected","is_open","shiftKey","view","set_depth","row_path","length","collapse","expand","sort","slice","current_idx","findIndex","x","column_name","sort_dir","new_sort","_increment_sort","altKey","push","setAttribute","JSON","stringify"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport {throttlePromise} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\n\r\nimport isEqual from \"lodash/isEqual\";\r\nimport {METADATA_MAP} from \"./constants\";\r\nimport {DatagridVirtualTableViewModel} from \"./scroll_panel\";\r\nimport {getCellConfig} from \"./utils\";\r\n\r\n/**\r\n *\r\n *\r\n * @class DatagridViewEventModel\r\n * @extends {DatagridVirtualTableViewModel}\r\n */\r\nexport class DatagridViewEventModel extends DatagridVirtualTableViewModel {\r\n    register_listeners() {\r\n        this._scroll_container.addEventListener(\"scroll\", this._on_scroll.bind(this), {passive: false});\r\n        this._scroll_container.addEventListener(\"mousewheel\", this._on_mousewheel.bind(this), {passive: false});\r\n        this._sticky_container.addEventListener(\"mousedown\", this._on_click.bind(this));\r\n        this._sticky_container.addEventListener(\"dblclick\", this._on_dblclick.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @returns\r\n     * @memberof DatagridViewModel\r\n     */\r\n    async _on_scroll(event) {\r\n        event.stopPropagation();\r\n        event.returnValue = false;\r\n        await this.draw();\r\n        this._render_element.dispatchEvent(new CustomEvent(\"perspective-datagrid-scroll\"));\r\n    }\r\n\r\n    /**\r\n     * Mousewheel must precalculate in addition to `_on_scroll` to prevent\r\n     * visual artifacts due to scrolling \"inertia\" on modern browsers/mobile.\r\n     *\r\n     * @param {*} event\r\n     * @memberof DatagridViewModel\r\n     */\r\n    _on_mousewheel(event) {\r\n        if (this._virtual_scrolling_disabled) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        event.returnValue = false;\r\n        const {offsetWidth, offsetHeight, scrollTop, scrollLeft} = this._scroll_container;\r\n        const total_scroll_height = Math.max(1, this._virtual_panel.offsetHeight - offsetHeight);\r\n        const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - offsetWidth);\r\n        this._scroll_container.scrollTop = Math.min(total_scroll_height, scrollTop + event.deltaY);\r\n        this._scroll_container.scrollLeft = Math.min(total_scroll_width, scrollLeft + event.deltaX);\r\n        this._on_scroll(event);\r\n    }\r\n\r\n    /**\r\n     * Handles double-click header width override reset.\r\n     *\r\n     * @param {*} event\r\n     * @returns\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    async _on_dblclick(event) {\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_resize) {\r\n            await new Promise(setTimeout);\r\n            delete this._column_sizes.override[metadata.size_key];\r\n            delete this._column_sizes.auto[metadata.size_key];\r\n            delete this._column_sizes.indices[metadata.cidx];\r\n            element.style.minWidth = \"\";\r\n            element.style.maxWidth = \"\";\r\n            for (const row of this.table_model.body.cells) {\r\n                const td = row[metadata.cidx];\r\n                td.style.minWidth = \"\";\r\n                td.style.maxWidth = \"\";\r\n                td.classList.remove(\"pd-cell-clip\");\r\n            }\r\n            await this.draw({invalid_viewport: true});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatches all click events to other handlers, depending on\r\n     * `event.target`.\r\n     *\r\n     * @param {*} event\r\n     * @returns\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    async _on_click(event) {\r\n        if (event.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const is_button = event.target.classList.contains(\"pd-row-header-icon\");\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_button) {\r\n            await this._on_toggle(event, metadata);\r\n        } else if (is_resize) {\r\n            this._on_resize_column(event, element, metadata);\r\n        } else if (metadata?.is_column_header) {\r\n            await this._on_sort(event, metadata);\r\n        } else {\r\n            await this._on_select(metadata);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Datagrid event for column resize.\r\n     *\r\n     * @param {*} event\r\n     * @param {*} element\r\n     * @param {*} metadata\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    _on_resize_column(event, element, metadata) {\r\n        const start = event.pageX;\r\n        element = this.table_model.header.get_column_header(metadata.vcidx);\r\n        const width = this._column_sizes.indices[metadata.cidx];\r\n        const move = event => this._on_resize_column_move(event, element, start, width, metadata);\r\n        const up = async () => {\r\n            document.removeEventListener(\"mousemove\", move);\r\n            document.removeEventListener(\"mouseup\", up);\r\n            const override_width = this._column_sizes.override[metadata.size_key];\r\n            this._column_sizes.indices[metadata.cidx] = override_width;\r\n            await this.draw({invalid_viewport: true});\r\n        };\r\n        document.addEventListener(\"mousemove\", move);\r\n        document.addEventListener(\"mouseup\", up);\r\n    }\r\n\r\n    /**\r\n     * Datagrid event for mouse movement when resizing a column.\r\n     *\r\n     * @param {*} event\r\n     * @param {*} th\r\n     * @param {*} start\r\n     * @param {*} width\r\n     * @param {*} metadata\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    @throttlePromise\r\n    async _on_resize_column_move(event, th, start, width, metadata) {\r\n        await new Promise(setTimeout);\r\n        const diff = event.pageX - start;\r\n        const override_width = width + diff;\r\n        this._column_sizes.override[metadata.size_key] = override_width;\r\n\r\n        // If the column is smaller, new columns may need to be fetched, so\r\n        // redraw, else just update the DOM widths as if redrawn.\r\n        if (diff < 0) {\r\n            await this.draw({invalid_viewport: true, preserve_width: true});\r\n        } else {\r\n            th.style.minWidth = override_width + \"px\";\r\n            th.style.maxWidth = override_width + \"px\";\r\n            const auto_width = this._column_sizes.auto[metadata.size_key];\r\n            for (const row of this.table_model.body.cells) {\r\n                const td = row[metadata.vcidx];\r\n                td.style.maxWidth = td.style.minWidth = override_width + \"px\";\r\n                td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Datagrid event which handles row selection.\r\n     *\r\n     * @param {*} metadata\r\n     * @returns\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    async _on_select(metadata) {\r\n        if (!this._render_element.hasAttribute(\"selectable\")) {\r\n            return;\r\n        }\r\n\r\n        const is_deselect = isEqual(metadata.id, this._selected_id);\r\n        let filters = [];\r\n        if (is_deselect) {\r\n            this._selected_id = undefined;\r\n            await this.draw({invalid_viewport: true});\r\n        } else {\r\n            this._selected_id = metadata.id;\r\n            await this.draw({invalid_viewport: true});\r\n            filters = await getCellConfig(this._view_cache, metadata.ridx, metadata.cidx);\r\n            filters = filters.config.filters;\r\n        }\r\n\r\n        this._render_element.dispatchEvent(\r\n            new CustomEvent(\"perspective-select\", {\r\n                bubbles: true,\r\n                composed: true,\r\n                detail: {\r\n                    selected: !is_deselect,\r\n                    config: {filters}\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Toggles a tree row between 'open' and 'closed' states, or toggles all\r\n     * tree rows at this depth when the shift key is also pressed.\r\n     *\r\n     * @param {*} event\r\n     * @param {*} metadata\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    async _on_toggle(event, metadata) {\r\n        if (metadata.is_open) {\r\n            if (event.shiftKey) {\r\n                await this._view_cache.view.set_depth(metadata.row_path.length - 1);\r\n            } else {\r\n                await this._view_cache.view.collapse(metadata.ridx);\r\n            }\r\n        } else if (metadata.is_open === false) {\r\n            if (event.shiftKey) {\r\n                await this._view_cache.view.set_depth(metadata.row_path.length);\r\n            } else {\r\n                await this._view_cache.view.expand(metadata.ridx);\r\n            }\r\n        }\r\n        await this.draw({invalid_viewport: true});\r\n    }\r\n\r\n    /**\r\n     * Datagrid event which handles sorting.  There are 3 control states:\r\n     *\r\n     *  - Already sorted by `metadata.column_name`, increment sort clause to\r\n     *    next sort state.\r\n     *  - Not sorted, shift key, append new sort clause to existing.\r\n     *  - Not sorted, set as new sort clause.\r\n     *\r\n     * @param {*} event\r\n     * @param {*} metadata\r\n     * @memberof DatagridVirtualTableViewModel\r\n     */\r\n    async _on_sort(event, metadata) {\r\n        let sort = this._view_cache.config.sort.slice();\r\n        const current_idx = sort.findIndex(x => x[0] === metadata.column_name);\r\n        if (current_idx > -1) {\r\n            const sort_dir = sort[current_idx][1];\r\n            const new_sort = this._render_element._increment_sort(sort_dir, false, event.altKey);\r\n            sort[current_idx] = [metadata.column_name, new_sort];\r\n        } else {\r\n            let sort_dir = event.altKey ? \"asc abs\" : \"asc\";\r\n            const new_sort = [metadata.column_name, sort_dir];\r\n            if (event.shiftKey) {\r\n                sort.push(new_sort);\r\n            } else {\r\n                sort = [new_sort];\r\n            }\r\n        }\r\n        this._render_element.setAttribute(\"sort\", JSON.stringify(sort));\r\n    }\r\n}\r\n"],"file":"events.js"}