{"version":3,"sources":["webpack:///packages/perspective-viewer-datagrid/webpack/universalModuleDefinition","webpack:///packages/perspective-viewer-datagrid/webpack/bootstrap","webpack:///packages/perspective-viewer-datagrid/external \"@finos/perspective-viewer/dist/esm/utils.js\"","webpack:///packages/perspective-viewer-datagrid/dist/less/material.less","webpack:///node_modules/css-loader/lib/css-base.js","webpack:///packages/perspective-viewer-datagrid/external \"@finos/perspective/dist/esm/config\"","webpack:///packages/perspective-viewer-datagrid/dist/less/container.less","webpack:///src/js/datagrid.js","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.symbol.description\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.array.flat\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.array.iterator\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.array.reverse\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.array.sort\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.array.unscopables.flat\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.number.to-fixed\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.promise\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/es.string.split\"","webpack:///packages/perspective-viewer-datagrid/external \"core-js/modules/web.dom-collections.iterator\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__12__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","push","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","DEBUG","ROW_HEIGHT","ICON_MAP","asc","desc","PRIVATE","METADATA_MAP","WeakMap","LOG","_log_fps","avg","reduce","x","y","rfps","vfps","nframes","console","log","toFixed","_tree_header","td","path","is_leaf","is_open","html","innerHTML","icon","classList","add","ViewModel","constructor","column_sizes","container","table","_column_sizes","_container","cells","rows","num_rows","_get_or_create_metadata","has","metadata","set","_format","type","config","get_type_config","real_type","format_function","float","Intl","NumberFormat","integer","datetime","DateTimeFormat","date","func","format","textContent","undefined","_get_cell","tag","row_container","cidx","tr","document","createElement","appendChild","_get_row","ridx","_clean_columns","idx","children","removeChild","slice","_clean_rows","_target","_property","descriptor","cache","Map","arg","res","DatagridHeaderViewModel","_draw_group_th","offset_cache","column","sort_dir","th","className","removeAttribute","style","minWidth","sort_txt","_redraw_previous","_draw_group","column_name","column_path","column_type","is_column_header","size_key","_draw_th","auto_width","auto","override_width","override","toggle","maxWidth","remove","draw","header_levels","alias","sort","group_header_cache","parts","split","is_new_group","setAttribute","parseInt","getAttribute","filter","clean","column_path_2_type","schema","_is_equals_id","selected_id","Array","isArray","DatagridBodyViewModel","_draw_td","val","depth","ridx_offset","cidx_offset","is_selected","formatter","row_path","container_height","column_data","id_column","next","obj","offsetWidth","DatagridTableViewModel","table_clip","thead","tbody","header","body","fragment","createDocumentFragment","num_columns","Math","max","view","container_width","row_levels","column_paths","row_paths","is_resize","viewport","visible_columns","start_col","columns_data","to_columns","sidx","cont_body","cont_head","width","start_row","indices","missing_cidx","end_col","new_col","DatagridVirtualTableViewModel","super","_create_shadow_dom","set_element","elem","get_meta","get_tds","table_model","flat","get_ths","clear","_sticky_container","attachShadow","CONTAINER_STYLE","MATERIAL_STYLE","shadowRoot","virtual_panel","scroll_container","addEventListener","_on_scroll","passive","_on_mousewheel","slot","table_staging","position","visibility","sticky_container","_on_click","_on_dblclick","_table_clip","_table_staging","_scroll_container","_virtual_panel","_calculate_row_range","nrows","preserve_scroll_position","total_scroll_height","offsetHeight","percent_scroll","scrollTop","virtual_panel_row_height","floor","relative_nrows","_nrows","end_row","offset","_calculate_column_range","total_scroll_width","percent_left","scrollLeft","max_scroll_column","_max_scroll_column","_validate_viewport","invalid_column","_start_col","invalid_row","_start_row","_end_row","_end_col","_needs_swap","force_redraw","_swap_in","args","parentElement","replaceChild","cloneNode","dispatchEvent","CustomEvent","detail","_swap_out","row_pivots","min","_update_virtual_panel_width","virtual_width","panel_width","_update_virtual_panel_height","virtual_panel_px_size","height","event","preventDefault","stopPropagation","returnValue","deltaY","deltaX","_reset_viewport","resize","_container_width","_container_height","reset_scroll","preserve_width","start","performance","now","get_config","nrowsp","catch","column_pathsp","schemap","column_pivots","_selected_id","attach","render_element","element","target","tagName","contains","Promise","setTimeout","row","is_button","_on_toggle","_on_resize_column","_on_sort","_on_select","pageX","scroll_left","move","_on_resize_column_move","up","async","removeEventListener","diff","hasAttribute","cell_config","row_idx","col_idx","to_json","row_pivots_values","__ROW_PATH__","row_filters","pivot","index","pivot_value","column_index","keys","result","column_filters","column_pivot_values","column_names","filters","getCellConfig","bubbles","composed","selected","shiftKey","set_depth","collapse","expand","current_idx","findIndex","direction","new_sort","_increment_sort","altKey","throttlePromise","customElements","registerPlugin","div","e","head","force","isConnected","_datavis","setInterval","_start_profiling_loop"],"mappings":"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","file":"perspective-viewer-datagrid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"@finos/perspective/dist/esm/config\"), require(\"core-js/modules/es.symbol.description\"), require(\"core-js/modules/es.array.flat\"), require(\"core-js/modules/es.array.iterator\"), require(\"core-js/modules/es.array.reverse\"), require(\"core-js/modules/es.array.sort\"), require(\"core-js/modules/es.array.unscopables.flat\"), require(\"core-js/modules/es.number.to-fixed\"), require(\"core-js/modules/es.promise\"), require(\"core-js/modules/es.string.split\"), require(\"core-js/modules/web.dom-collections.iterator\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@finos/perspective-viewer/dist/esm/utils.js\", \"@finos/perspective/dist/esm/config\", \"core-js/modules/es.symbol.description\", \"core-js/modules/es.array.flat\", \"core-js/modules/es.array.iterator\", \"core-js/modules/es.array.reverse\", \"core-js/modules/es.array.sort\", \"core-js/modules/es.array.unscopables.flat\", \"core-js/modules/es.number.to-fixed\", \"core-js/modules/es.promise\", \"core-js/modules/es.string.split\", \"core-js/modules/web.dom-collections.iterator\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"perspective-viewer-datagrid\"] = factory(require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"@finos/perspective/dist/esm/config\"), require(\"core-js/modules/es.symbol.description\"), require(\"core-js/modules/es.array.flat\"), require(\"core-js/modules/es.array.iterator\"), require(\"core-js/modules/es.array.reverse\"), require(\"core-js/modules/es.array.sort\"), require(\"core-js/modules/es.array.unscopables.flat\"), require(\"core-js/modules/es.number.to-fixed\"), require(\"core-js/modules/es.promise\"), require(\"core-js/modules/es.string.split\"), require(\"core-js/modules/web.dom-collections.iterator\"));\n\telse\n\t\troot[\"perspective-viewer-datagrid\"] = factory(root[\"@finos/perspective-viewer/dist/esm/utils.js\"], root[\"@finos/perspective/dist/esm/config\"], root[\"core-js/modules/es.symbol.description\"], root[\"core-js/modules/es.array.flat\"], root[\"core-js/modules/es.array.iterator\"], root[\"core-js/modules/es.array.reverse\"], root[\"core-js/modules/es.array.sort\"], root[\"core-js/modules/es.array.unscopables.flat\"], root[\"core-js/modules/es.number.to-fixed\"], root[\"core-js/modules/es.promise\"], root[\"core-js/modules/es.string.split\"], root[\"core-js/modules/web.dom-collections.iterator\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__12__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__15__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"th{text-align:center;position:relative}tbody td.float,tbody td.integer,thead th.integer,thead tr:last-child th.float{text-align:right}td.pd-positive{color:#1078d1}td.pd-negative{color:#de3838}tbody td.date,tbody td.datetime,tbody td.string,thead th.date,thead th.datetime,thead th.string{text-align:left}tr td.pd-group-header,tr th{border-right:1px solid #ddd}tr th:last-child,tr:last-child th:not(.pd-group-header){border-right:none}tr:last-child th{border-bottom:1px solid #ddd}tr td span.pd-tree-group{margin-left:5px;margin-right:15px;border-left:1px solid #eee;height:19px}td,th{white-space:nowrap;font-size:12px;height:19px;padding:0 5px}tbody{transition:opacity .2s ease-in}tbody:hover tr:hover td{background:#eee;opacity:1}tr{transition:background-color .2s ease-in}table *{box-sizing:border-box}table{position:absolute;overflow:hidden}span.pd-row-header-icon{color:#aaa;padding-right:4px;font-family:\\\"Material Icons\\\"}span.pd-column-header-icon{font-size:10px;padding-left:3px;font-family:\\\"Material Icons\\\"}span.pd-row-header-icon:hover{color:#1a7da1;text-shadow:0 0 3px #1a7da1}.pd-selected td{background-color:#eee}.pd-cell-clip{overflow:hidden;text-overflow:ellipsis}td span.pd-group-name,th span.pd-group-name{margin-right:-5px;padding-right:5px;padding-left:8px;flex:1}td span.pd-group-leaf{margin-left:12px}.pd-column-resize{height:100%;width:10px;position:absolute;top:0;right:0;cursor:col-resize}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div.pd-scroll-container{position:absolute;top:12px;left:12px;right:12px;bottom:12px;overflow:auto;-webkit-overflow-scrolling:auto}div.pd-virtual-panel{position:absolute;top:0;left:0;right:0;pointer-events:none}div.pd-scroll-table-clip{position:sticky;position:-webkit-sticky;top:0;left:0;overflow:hidden;width:100%;height:100%}slot{position:absolute;overflow:hidden}\", \"\"]);\n\n// exports\n","/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport {throttlePromise, registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\r\nimport CONTAINER_STYLE from \"../less/container.less\";\r\nimport MATERIAL_STYLE from \"../less/material.less\";\r\n\r\n// Output runtime debug info like FPS.\r\nconst DEBUG = false;\r\n\r\nconst ROW_HEIGHT = 19;\r\n\r\n// Double buffer when the viewport scrolls columns, rows or when the\r\n// view is recreated.  Reduces render draw-in on some browsers, at the\r\n// expense of performance.\r\nconst DOUBLE_BUFFER_COLUMN = false;\r\nconst DOUBLE_BUFFER_ROW = false;\r\nconst DOUBLE_BUFFER_RECREATE = true;\r\n\r\n// The largest size virtual <div> in (px) that Chrome can support without\r\n// glitching.\r\nconst BROWSER_MAX_HEIGHT = 10000000;\r\n\r\nconst ICON_MAP = {\r\n    asc: \"arrow_upward\",\r\n    desc: \"arrow_downward\",\r\n    \"asc abs\": \"\\u21E7\",\r\n    \"desc abs\": \"\\u21E9\",\r\n    \"col asc\": \"arrow_back\",\r\n    \"col desc\": \"arrow_forward\",\r\n    \"col asc abs\": \"\\u21E8\",\r\n    \"col desc abs\": \"\\u21E6\"\r\n};\r\n\r\n/******************************************************************************\r\n *\r\n * Utilities\r\n *\r\n */\r\n\r\nconst PRIVATE = Symbol(\"Private Datagrid\");\r\n\r\nconst METADATA_MAP = new WeakMap();\r\n\r\n/**\r\n * A class method decorate for memoizing method results.  Only works on one\r\n * arg.\r\n */\r\nfunction memoize(_target, _property, descriptor) {\r\n    const cache = new Map();\r\n    const func = descriptor.value;\r\n    descriptor.value = new_func;\r\n    return descriptor;\r\n    function new_func(arg) {\r\n        if (cache.has(arg)) {\r\n            return cache.get(arg);\r\n        } else {\r\n            const res = func.call(this, arg);\r\n            cache.set(arg, res);\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n// Profiling\r\n\r\nlet LOG = [];\r\n\r\nfunction _log_fps() {\r\n    const avg = LOG.reduce((x, y) => x + y, 0) / LOG.length;\r\n    const rfps = LOG.length / 5;\r\n    const vfps = 1000 / avg;\r\n    const nframes = LOG.length;\r\n    console.log(`${avg.toFixed(2)} ms/frame   ${rfps} rfps   ${vfps.toFixed(2)} vfps   (${nframes} frames in 5s)`);\r\n    LOG = [];\r\n}\r\n\r\nfunction _start_profiling_loop() {\r\n    if (DEBUG) {\r\n        setInterval(_log_fps.bind(this), 5000);\r\n    }\r\n}\r\n\r\n// Tree Header Renderer\r\n// TODO factor out\r\n\r\nfunction _tree_header(td, path, is_leaf, is_open) {\r\n    let name;\r\n    if (path.length > 0) {\r\n        name = path[path.length - 1];\r\n    } else {\r\n        name = \"TOTAL\";\r\n    }\r\n    if (is_leaf) {\r\n        let html = \"\";\r\n        for (let i = 0; i < path.length; i++) {\r\n            html += `<span class=\"pd-tree-group\"></span>`;\r\n        }\r\n        td.innerHTML = `<div style=\"display:flex;align-items:stretch\">${html}<span class=\"pd-group-name pd-group-leaf\">${name}</span></div>`;\r\n    } else {\r\n        const icon = is_open ? \"remove\" : \"add\";\r\n        let html = \"\";\r\n        for (let i = 0; i < path.length; i++) {\r\n            html += `<span class=\"pd-tree-group\"></span>`;\r\n        }\r\n        td.innerHTML = `<div style=\"display:flex;align-items:stretch\">${html}<span class=\"pd-row-header-icon\">${icon}</span><span class=\"pd-group-name\">${name}</span></div>`;\r\n    }\r\n    td.classList.add(\"pd-group-header\");\r\n}\r\n\r\nasync function getCellConfig(view, config, row_idx, col_idx) {\r\n    const row_pivots = config.row_pivots;\r\n    const column_pivots = config.column_pivots;\r\n    const start_row = row_idx >= 0 ? row_idx : 0;\r\n    const end_row = start_row + 1;\r\n    const r = await view.to_json({start_row, end_row});\r\n    const row_paths = r.map(x => x.__ROW_PATH__);\r\n    const row_pivots_values = row_paths[0] || [];\r\n    const row_filters = row_pivots\r\n        .map((pivot, index) => {\r\n            const pivot_value = row_pivots_values[index];\r\n            return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\r\n        })\r\n        .filter(x => x);\r\n    const column_index = row_pivots.length > 0 ? col_idx + 1 : col_idx;\r\n    const column_paths = Object.keys(r[0])[column_index];\r\n    const result = {row: r[0]};\r\n    let column_filters = [];\r\n    if (column_paths) {\r\n        const column_pivot_values = column_paths.split(\"|\");\r\n        result.column_names = [column_pivot_values[column_pivot_values.length - 1]];\r\n        column_filters = column_pivots\r\n            .map((pivot, index) => {\r\n                const pivot_value = column_pivot_values[index];\r\n                return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\r\n            })\r\n            .filter(x => x)\r\n            .filter(([, , value]) => value !== \"__ROW_PATH__\");\r\n    }\r\n\r\n    const filters = config.filter.concat(row_filters).concat(column_filters);\r\n    result.config = {filters};\r\n    return result;\r\n}\r\n\r\n/******************************************************************************\r\n *\r\n * View Model\r\n *\r\n */\r\n\r\nclass ViewModel {\r\n    constructor(column_sizes, container, table) {\r\n        this._column_sizes = column_sizes;\r\n        this._container = container;\r\n        this.table = table;\r\n        this.cells = [];\r\n        this.rows = [];\r\n    }\r\n\r\n    num_rows() {\r\n        return this.cells.length;\r\n    }\r\n\r\n    _get_or_create_metadata(td) {\r\n        if (METADATA_MAP.has(td)) {\r\n            return METADATA_MAP.get(td);\r\n        } else {\r\n            const metadata = {};\r\n            METADATA_MAP.set(td, metadata);\r\n            return metadata;\r\n        }\r\n    }\r\n\r\n    @memoize\r\n    _format(type) {\r\n        const config = get_type_config(type);\r\n        const real_type = config.type || type;\r\n        const format_function = {\r\n            float: Intl.NumberFormat,\r\n            integer: Intl.NumberFormat,\r\n            datetime: Intl.DateTimeFormat,\r\n            date: Intl.DateTimeFormat\r\n        }[real_type];\r\n        if (format_function) {\r\n            const func = new format_function(\"en-us\", config.format);\r\n            return {\r\n                format(td, path) {\r\n                    td.textContent = func.format(path);\r\n                    if (real_type === \"integer\" || real_type === \"float\") {\r\n                        if (path > 0) {\r\n                            td.classList.add(\"pd-positive\");\r\n                        } else if (path < 0) {\r\n                            td.classList.add(\"pd-negative\");\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        } else if (type === undefined) {\r\n            return {format: _tree_header};\r\n        }\r\n    }\r\n\r\n    _get_cell(tag = \"td\", row_container, cidx, tr) {\r\n        let td = row_container[cidx];\r\n        if (!td) {\r\n            td = row_container[cidx] = document.createElement(tag);\r\n            tr.appendChild(td);\r\n        }\r\n        return td;\r\n    }\r\n\r\n    _get_row(ridx) {\r\n        let tr = this.rows[ridx];\r\n        if (!tr) {\r\n            tr = this.rows[ridx] = document.createElement(\"tr\");\r\n            this.table.appendChild(tr);\r\n        }\r\n\r\n        let row_container = this.cells[ridx];\r\n        if (!row_container) {\r\n            row_container = this.cells[ridx] = [];\r\n        }\r\n\r\n        return {tr, row_container};\r\n    }\r\n\r\n    _clean_columns(cidx) {\r\n        for (let i = 0; i < this.rows.length; i++) {\r\n            const tr = this.rows[i];\r\n            const row_container = this.cells[i];\r\n            let idx = cidx[i] || cidx;\r\n            while (tr.children[idx]) {\r\n                tr.removeChild(tr.children[idx]);\r\n            }\r\n            this.cells[i] = row_container.slice(0, idx);\r\n        }\r\n    }\r\n\r\n    _clean_rows(ridx) {\r\n        while (this.table.children[ridx]) {\r\n            this.table.removeChild(this.table.children[ridx]);\r\n        }\r\n        this.rows = this.rows.slice(0, ridx);\r\n        this.cells = this.cells.slice(0, ridx);\r\n    }\r\n}\r\n\r\n/**\r\n * <thead> view model.  This model accumulates state in the form of\r\n * column_sizes, which leverages <tables> autosize behavior across\r\n * virtual pages.\r\n *\r\n * @class DatagridHeaderViewModel\r\n */\r\nclass DatagridHeaderViewModel extends ViewModel {\r\n    _draw_group_th(offset_cache, d, column, sort_dir) {\r\n        const {tr, row_container} = this._get_row(d);\r\n        const th = this._get_cell(\"th\", row_container, offset_cache[d], tr);\r\n        const cidx = offset_cache[d];\r\n        offset_cache[d] += 1;\r\n        th.className = \"\";\r\n        th.removeAttribute(\"colspan\");\r\n        th.style.minWidth = \"0\";\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.cidx = cidx;\r\n\r\n        if (sort_dir?.length === 0) {\r\n            th.innerHTML = \"<span>\" + column + `</span><span class=\"pd-column-resize\"></span>`;\r\n        } else {\r\n            const sort_txt = sort_dir?.map(x => ICON_MAP[x]);\r\n            th.innerHTML = \"<span>\" + column + `</span><span class=\"pd-column-header-icon\">${sort_txt}</span><span class=\"pd-column-resize\"></span>`;\r\n        }\r\n        return th;\r\n    }\r\n\r\n    _redraw_previous(offset_cache, d) {\r\n        const {tr, row_container} = this._get_row(d);\r\n        const cidx = offset_cache[d] - 1;\r\n        if (cidx < 0) {\r\n            return;\r\n        }\r\n        const th = this._get_cell(\"th\", row_container, cidx, tr);\r\n        if (!th) return;\r\n        th.classList.add(\"pd-group-header\");\r\n        return th;\r\n    }\r\n\r\n    _draw_group(column, column_name, type, th) {\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.column_path = column;\r\n        metadata.column_name = column_name;\r\n        metadata.column_type = type;\r\n        metadata.is_column_header = false;\r\n        metadata.size_key = `${column}|${type}`;\r\n        th.className = \"\";\r\n    }\r\n\r\n    _draw_th(column, column_name, type, th) {\r\n        const metadata = this._get_or_create_metadata(th);\r\n        metadata.column_path = column;\r\n        metadata.column_name = column_name;\r\n        metadata.column_type = type;\r\n        metadata.is_column_header = true;\r\n        metadata.size_key = `${column}|${type}`;\r\n        const auto_width = this._column_sizes.auto[metadata.size_key];\r\n        const override_width = this._column_sizes.override[metadata.size_key];\r\n        th.classList.add(type);\r\n        if (override_width) {\r\n            th.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n            th.style.minWidth = override_width + \"px\";\r\n            th.style.maxWidth = override_width + \"px\";\r\n        } else if (auto_width) {\r\n            th.classList.remove(\"pd-cell-clip\");\r\n            th.style.maxWidth = \"none\";\r\n            th.style.minWidth = auto_width + \"px\";\r\n        }\r\n    }\r\n\r\n    draw(header_levels, alias, column, type, sort, {group_header_cache = [], offset_cache = []} = {}) {\r\n        let parts = column.split?.(\"|\");\r\n        let th,\r\n            column_name,\r\n            is_new_group = false;\r\n        for (let d = 0; d < header_levels; d++) {\r\n            column_name = parts[d] ? parts[d] : \"\";\r\n            group_header_cache[d] = group_header_cache[d] || [];\r\n            offset_cache[d] = offset_cache[d] || 0;\r\n            if (d < header_levels - 1) {\r\n                if (group_header_cache[d][0] === column_name) {\r\n                    th = group_header_cache[d][1];\r\n                    th.setAttribute(\"colspan\", (parseInt(th.getAttribute(\"colspan\")) || 1) + 1);\r\n                } else {\r\n                    th = this._draw_group_th(offset_cache, d, column_name, []);\r\n                    this._draw_group(column, column_name, type, th);\r\n                    group_header_cache[d] = [column_name, th];\r\n                    is_new_group = true;\r\n                }\r\n            } else {\r\n                if (is_new_group) {\r\n                    this._redraw_previous(offset_cache, d);\r\n                }\r\n                const sort_dir = sort?.filter(x => x[0] === column_name).map(x => x[1]);\r\n                th = this._draw_group_th(offset_cache, d, column_name, sort_dir);\r\n                this._draw_th(alias || column, column_name, type, th);\r\n            }\r\n        }\r\n\r\n        if (header_levels === 1 && type === undefined) {\r\n            th.classList.add(\"pd-group-header\");\r\n        }\r\n        this._clean_rows(offset_cache.length);\r\n        return {group_header_cache, offset_cache, th};\r\n    }\r\n\r\n    clean({offset_cache}) {\r\n        this._clean_columns(offset_cache);\r\n    }\r\n}\r\n\r\nfunction column_path_2_type(schema, column) {\r\n    let parts = column.split(\"|\");\r\n    return schema[parts[parts.length - 1]];\r\n}\r\n\r\nfunction _is_equals_id(id, selected_id) {\r\n    if (Array.isArray(id) && Array.isArray(selected_id)) {\r\n        let i;\r\n        for (i = 0; i < selected_id.length; i++) {\r\n            if (id[i] !== selected_id[i]) {\r\n                return 0;\r\n            }\r\n        }\r\n        return id.length === selected_id.length ? 2 : 1;\r\n    } else {\r\n        return id === selected_id && id !== undefined ? 2 : 0;\r\n    }\r\n}\r\n\r\n/**\r\n * <tbody> view model.\r\n *\r\n * @class DatagridBodyViewModel\r\n */\r\nclass DatagridBodyViewModel extends ViewModel {\r\n    _draw_td(ridx, cidx, column, val, id, selected_id, type, depth, is_open, ridx_offset, cidx_offset) {\r\n        const {tr, row_container} = this._get_row(ridx);\r\n        if (selected_id !== false) {\r\n            const is_selected = _is_equals_id(id, selected_id);\r\n            tr.classList.toggle(\"pd-selected\", is_selected === 2);\r\n            tr.classList.toggle(\"pd-sub-selected\", is_selected === 1);\r\n        }\r\n        const td = this._get_cell(\"td\", row_container, cidx, tr);\r\n        const metadata = this._get_or_create_metadata(td);\r\n        metadata.id = id;\r\n        metadata.cidx = cidx + cidx_offset;\r\n        if (metadata.value !== val || metadata.type !== type) {\r\n            td.className = type;\r\n            metadata.column = column;\r\n            metadata.size_key = `${column}|${type}`;\r\n            const override_width = this._column_sizes.override[metadata.size_key];\r\n            if (override_width) {\r\n                const auto_width = this._column_sizes.auto[metadata.size_key];\r\n                td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n                //td.classList.remove(\"pd-cell-clip\");\r\n                td.style.minWidth = override_width + \"px\";\r\n                td.style.maxWidth = override_width + \"px\";\r\n            } else {\r\n                td.classList.remove(\"pd-cell-clip\");\r\n                td.style.minWidth = \"0\";\r\n                td.style.maxWidth = \"none\";\r\n            }\r\n            const formatter = this._format(type);\r\n            if (val === undefined || val === null) {\r\n                td.textContent = \"-\";\r\n                metadata.value = null;\r\n                metadata.row_path = null;\r\n                metadata.ridx = ridx + ridx_offset;\r\n            } else if (formatter) {\r\n                formatter.format(td, val, val.length === depth, is_open);\r\n                metadata.value = Array.isArray(val) ? val[val.length - 1] : val;\r\n                metadata.row_path = val;\r\n                metadata.ridx = ridx + ridx_offset;\r\n                metadata.is_open = is_open;\r\n            } else {\r\n                td.textContent = val;\r\n                metadata.value = val;\r\n                metadata.ridx = ridx + ridx_offset;\r\n            }\r\n        }\r\n\r\n        return {td, metadata};\r\n    }\r\n\r\n    draw(container_height, column_name, cidx, column_data, id_column, selected_id, type, depth, ridx_offset, cidx_offset) {\r\n        let ridx = 0;\r\n        let td, metadata;\r\n        for (const val of column_data) {\r\n            const next = column_data[ridx + 1];\r\n            const id = id_column?.[ridx];\r\n            const obj = this._draw_td(ridx++, cidx, column_name, val, id, selected_id, type, depth, next?.length > val?.length, ridx_offset, cidx_offset);\r\n            td = obj.td;\r\n            metadata = obj.metadata;\r\n\r\n            if (ridx * ROW_HEIGHT > container_height) {\r\n                break;\r\n            }\r\n        }\r\n        this._clean_rows(ridx);\r\n        const offsetWidth = td?.offsetWidth;\r\n        if (offsetWidth && !this._column_sizes.override[metadata.size_key]) {\r\n            this._column_sizes.auto[metadata.size_key] = offsetWidth;\r\n        }\r\n        return {offsetWidth: offsetWidth, cidx, ridx};\r\n    }\r\n\r\n    clean({ridx, cidx}) {\r\n        this._clean_rows(ridx);\r\n        this._clean_columns(cidx);\r\n    }\r\n}\r\n\r\n/**\r\n * <table> view model.  In order to handle unknown column width when `draw()`\r\n * is called, this model will iteratively fetch more data to fill in columns\r\n * until the page is complete, and makes some column viewport estimations\r\n * when this information is not availble.\r\n *\r\n * @class DatagridTableViewModel\r\n */\r\nclass DatagridTableViewModel {\r\n    constructor(table_clip, column_sizes) {\r\n        const table = document.createElement(\"table\");\r\n        table.setAttribute(\"cellspacing\", 0);\r\n\r\n        const thead = document.createElement(\"thead\");\r\n        table.appendChild(thead);\r\n\r\n        const tbody = document.createElement(\"tbody\");\r\n        table.appendChild(tbody);\r\n\r\n        this.table = table;\r\n        this._column_sizes = column_sizes;\r\n        this.header = new DatagridHeaderViewModel(column_sizes, table_clip, thead);\r\n        this.body = new DatagridBodyViewModel(column_sizes, table_clip, tbody);\r\n        this.fragment = document.createDocumentFragment();\r\n    }\r\n\r\n    num_columns() {\r\n        return this.header._get_row(Math.max(0, this.header.rows?.length - 1 || 0)).row_container.length;\r\n    }\r\n\r\n    async draw(view, container_width, container_height, header_levels, row_levels, column_paths, row_paths, sort, schema, selected_id, is_resize, viewport) {\r\n        const visible_columns = column_paths.slice(viewport.start_col);\r\n\r\n        const columns_data = await view.to_columns(viewport);\r\n        const {start_col: sidx} = viewport;\r\n        let cont_body,\r\n            cont_head,\r\n            cidx = 0,\r\n            width = 0;\r\n        const id_column = columns_data[\"__ID__\"];\r\n\r\n        if (column_paths[0] === \"__ROW_PATH__\") {\r\n            cont_head = this.header.draw(header_levels, row_paths.join(\",\"), \"\");\r\n            cont_body = this.body.draw(container_height, row_paths.join(\",\"), 0, columns_data[\"__ROW_PATH__\"], id_column, selected_id, undefined, row_levels, viewport.start_row, 0);\r\n            selected_id = false;\r\n            if (!is_resize) {\r\n                this._column_sizes.indices[0] = cont_body.offsetWidth;\r\n            }\r\n            width += cont_body.offsetWidth;\r\n            cidx++;\r\n        }\r\n\r\n        try {\r\n            while (cidx < visible_columns.length) {\r\n                const column_name = visible_columns[cidx];\r\n                if (!columns_data[column_name]) {\r\n                    let missing_cidx = Math.max(viewport.end_col, 0);\r\n                    viewport.start_col = missing_cidx;\r\n                    viewport.end_col = missing_cidx + 1;\r\n                    const new_col = await view.to_columns(viewport);\r\n                    if (!(column_name in new_col)) {\r\n                        new_col[column_name] = [];\r\n                    }\r\n                    columns_data[column_name] = new_col[column_name];\r\n                }\r\n                const column_data = columns_data[column_name];\r\n                const type = column_path_2_type(schema, column_name);\r\n\r\n                cont_head = this.header.draw(header_levels, undefined, column_name, type, sort, cont_head);\r\n                cont_body = this.body.draw(container_height, column_name, cidx, column_data, id_column, selected_id, type, undefined, viewport.start_row, sidx);\r\n                selected_id = false;\r\n                width += cont_body.offsetWidth || cont_head.th.offsetWidth;\r\n                if (!is_resize) {\r\n                    this._column_sizes.indices[cidx + sidx] = cont_body.offsetWidth || cont_head.th.offsetWidth;\r\n                }\r\n                cidx++;\r\n\r\n                if (width > container_width) {\r\n                    break;\r\n                }\r\n            }\r\n        } finally {\r\n            this.body.clean({ridx: cont_body?.ridx || 0, cidx});\r\n            if (cont_head) {\r\n                this.header.clean(cont_head);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the virtual scroll pane, as well as the double buffering\r\n * of the underlying <table> (really two). This DOM structure looks\r\n * a little like this:\r\n *\r\n *     +------------------------+      <- div.pd-scroll-container\r\n *     | +----------------------|------<- div.pd-virtual-panel\r\n *     | | +------------------+ |      <- div.pd-scroll-table-clip\r\n *     | | | +----------------|-|--+   <- table             |\r\n *     | | | | 1  A  Alabama  | |  |                        |\r\n *     | | | | 2  B  Arizona  | |  |                        |\r\n *     | | | | 3  C  Arkansas | |  |                        |\r\n *     | | | | 4  D  Californi| |  |                        |\r\n *     | | | | 5  E  Colorado | |  |                        |\r\n *     | | +------------------+ |  |                        |\r\n *     +------------------------+  |                        |\r\n *       |   | 8  H  District of C |                        |\r\n *       |   +---------------------+                        |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       |                                                  |\r\n *       +--------------------------------------------------+\r\n *\r\n * `overflow: auto` is applied to `.pd-scroll-container`, and `.pd-virtual-pane`\r\n * is sized to match the estimated \"virtual\" size of the `table`;  estimated,\r\n * because it's true size can't be known until all columns dimensions are known,\r\n * which may be deferred in the case of auto-sized tables.\r\n *\r\n * Double buffering can be enabled on \"column scroll\", \"row scroll\" and/or\r\n * \"column schema change\".  When enabled and a redraw is requested for the case,\r\n * the existing table is cloned with `cloneNode()` and swapped with the real\r\n * `table`, which is then updated offscreen and swapped back in.  While this is\r\n * much slower to render, it prevents draw-in.\r\n *\r\n * @class DatagridVirtualTableViewModel\r\n */\r\nclass DatagridVirtualTableViewModel extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._create_shadow_dom();\r\n    }\r\n\r\n    set_element(elem) {\r\n        this.elem = elem;\r\n    }\r\n\r\n    get_meta(td) {\r\n        return METADATA_MAP.get(td);\r\n    }\r\n\r\n    get_tds() {\r\n        return this.table_model.body.cells.flat(1);\r\n    }\r\n\r\n    get_ths() {\r\n        return this.table_model.body.cells.flat(1);\r\n    }\r\n\r\n    clear() {\r\n        this._sticky_container.innerHTML = \"<table></table>\";\r\n    }\r\n\r\n    _create_shadow_dom() {\r\n        this.attachShadow({mode: \"open\"});\r\n        const style = document.createElement(\"style\");\r\n        style.textContent = CONTAINER_STYLE + MATERIAL_STYLE;\r\n        this.shadowRoot.appendChild(style);\r\n\r\n        const virtual_panel = document.createElement(\"div\");\r\n        virtual_panel.classList.add(\"pd-virtual-panel\");\r\n\r\n        const table_clip = document.createElement(\"div\");\r\n        table_clip.classList.add(\"pd-scroll-table-clip\");\r\n\r\n        const scroll_container = document.createElement(\"div\");\r\n        scroll_container.classList.add(\"pd-scroll-container\");\r\n        scroll_container.appendChild(virtual_panel);\r\n        scroll_container.appendChild(table_clip);\r\n        scroll_container.addEventListener(\"scroll\", this._on_scroll.bind(this), {passive: false});\r\n        scroll_container.addEventListener(\"mousewheel\", this._on_mousewheel.bind(this), {passive: false});\r\n\r\n        const slot = document.createElement(\"slot\");\r\n        table_clip.appendChild(slot);\r\n\r\n        this.shadowRoot.appendChild(scroll_container);\r\n\r\n        const table_staging = document.createElement(\"div\");\r\n        table_staging.style.position = \"absolute\";\r\n        table_staging.style.visibility = \"hidden\";\r\n        scroll_container.appendChild(table_staging);\r\n\r\n        const sticky_container = document.createElement(\"div\");\r\n        sticky_container.addEventListener(\"mousedown\", this._on_click.bind(this));\r\n        sticky_container.addEventListener(\"dblclick\", this._on_dblclick.bind(this));\r\n\r\n        this._sticky_container = sticky_container;\r\n        this._table_clip = table_clip;\r\n        this._table_staging = table_staging;\r\n        this._scroll_container = scroll_container;\r\n        this._virtual_panel = virtual_panel;\r\n    }\r\n\r\n    _calculate_row_range(container_height, nrows, preserve_scroll_position) {\r\n        const total_scroll_height = Math.max(1, this._virtual_panel.offsetHeight - container_height);\r\n        const percent_scroll = this._scroll_container.scrollTop / total_scroll_height;\r\n        const virtual_panel_row_height = Math.floor(container_height / ROW_HEIGHT);\r\n        const relative_nrows = preserve_scroll_position ? this._nrows || 0 : nrows;\r\n        let start_row = Math.floor(Math.max(0, relative_nrows + this.table_model.header.cells.length - virtual_panel_row_height) * percent_scroll);\r\n        let end_row = start_row + virtual_panel_row_height;\r\n        if (end_row - 1 > nrows) {\r\n            const offset = end_row - 1 - nrows;\r\n            if (start_row - offset < 0) {\r\n                end_row = nrows;\r\n                start_row = 0;\r\n            } else {\r\n                start_row -= offset;\r\n                end_row -= offset;\r\n            }\r\n        }\r\n        return {start_row, end_row};\r\n    }\r\n\r\n    _calculate_column_range(container_width, row_paths, column_paths) {\r\n        const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - container_width);\r\n        const percent_left = this._scroll_container.scrollLeft / total_scroll_width;\r\n\r\n        const max_scroll_column = this._max_scroll_column(container_width, row_paths, column_paths) + 0.5;\r\n\r\n        let start_col = Math.floor(max_scroll_column * percent_left);\r\n        let end_col = start_col + (this.table_model.num_columns() || 1) + 1;\r\n\r\n        return {start_col, end_col};\r\n    }\r\n\r\n    _validate_viewport({start_col, end_col, start_row, end_row}) {\r\n        const invalid_column = this._start_col !== start_col;\r\n        const invalid_row = this._start_row !== start_row || this._end_row !== end_row || this._end_col !== end_col;\r\n        this._start_col = start_col;\r\n        this._end_col = end_col;\r\n        this._start_row = start_row;\r\n        this._end_row = end_row;\r\n        return {invalid_column, invalid_row};\r\n    }\r\n\r\n    _needs_swap(force_redraw, invalid_row, invalid_column) {\r\n        return (DOUBLE_BUFFER_RECREATE && force_redraw) || (DOUBLE_BUFFER_COLUMN && (invalid_column || force_redraw)) || (DOUBLE_BUFFER_ROW && (invalid_row || force_redraw));\r\n    }\r\n\r\n    _swap_in(...args) {\r\n        if (this._needs_swap(...args)) {\r\n            if (this._table_staging !== this.table_model.table.parentElement) {\r\n                this._sticky_container.replaceChild(this.table_model.table.cloneNode(true), this.table_model.table);\r\n                this._table_staging.appendChild(this.table_model.table);\r\n            }\r\n        } else {\r\n            if (this._sticky_container !== this.table_model.table.parentElement) {\r\n                this._sticky_container.replaceChild(this.table_model.table, this._sticky_container.children[0]);\r\n            }\r\n        }\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-before-update\", {detail: this}));\r\n    }\r\n\r\n    _swap_out(...args) {\r\n        if (this._needs_swap(...args)) {\r\n            this._sticky_container.replaceChild(this.table_model.table, this._sticky_container.children[0]);\r\n        }\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-after-update\", {detail: this}));\r\n    }\r\n\r\n    _max_scroll_column(container_width, row_pivots, column_paths) {\r\n        let width = 0;\r\n        if (row_pivots.length > 0) {\r\n            width = this._column_sizes.indices[0];\r\n        }\r\n        let max_scroll_column = column_paths.length;\r\n        while (width < container_width) {\r\n            max_scroll_column--;\r\n            width += this._column_sizes.indices[max_scroll_column] || 100;\r\n        }\r\n        return Math.min(column_paths.length - (row_pivots.length > 0 ? 2 : 1), max_scroll_column + (row_pivots.length > 0 ? 0 : 1));\r\n    }\r\n\r\n    _update_virtual_panel_width(force_redraw, container_width, row_pivots, column_paths) {\r\n        if (force_redraw) {\r\n            const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - container_width);\r\n            const percent_left = this._scroll_container.scrollLeft / total_scroll_width;\r\n            const max_scroll_column = this._max_scroll_column(container_width, row_pivots, column_paths);\r\n            let cidx = 0,\r\n                virtual_width = 0;\r\n            while (cidx < max_scroll_column) {\r\n                virtual_width += this._column_sizes.indices[cidx] || 100;\r\n                cidx++;\r\n            }\r\n            const panel_width = container_width + virtual_width;\r\n            this._virtual_panel.style.width = panel_width + \"px\";\r\n            this._scroll_container.scrollLeft = percent_left * virtual_width;\r\n        }\r\n    }\r\n\r\n    _update_virtual_panel_height(nrows) {\r\n        const virtual_panel_px_size = Math.min(BROWSER_MAX_HEIGHT, (nrows + this.table_model.header.cells.length) * ROW_HEIGHT);\r\n        this._virtual_panel.style.height = `${virtual_panel_px_size}px`;\r\n    }\r\n\r\n    /**\r\n     * @returns\r\n     * @memberof DatagridViewModel\r\n     */\r\n    async _on_scroll(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.returnValue = false;\r\n        await this.draw(this.view);\r\n        this.elem.dispatchEvent(new CustomEvent(\"perspective-datagrid-scroll\"));\r\n    }\r\n\r\n    /**\r\n     * Mousewheel must precalculate in addition to `_on_scroll` to prevent\r\n     * visual artifacts due to scrolling \"inertia\" on modern browsers/mobile.\r\n     *\r\n     * @param {*} event\r\n     * @memberof DatagridViewModel\r\n     */\r\n    _on_mousewheel(event) {\r\n        event.preventDefault();\r\n        event.returnValue = false;\r\n        const total_scroll_height = Math.max(1, this._virtual_panel.offsetHeight - this._scroll_container.offsetHeight);\r\n        const total_scroll_width = Math.max(1, this._virtual_panel.offsetWidth - this._scroll_container.offsetWidth);\r\n        this._scroll_container.scrollTop = Math.min(total_scroll_height, this._scroll_container.scrollTop + event.deltaY);\r\n        this._scroll_container.scrollLeft = Math.min(total_scroll_width, this._scroll_container.scrollLeft + event.deltaX);\r\n        this._on_scroll(event);\r\n    }\r\n\r\n    _reset_viewport() {\r\n        this._start_row = undefined;\r\n        this._end_row = undefined;\r\n        this._start_col = undefined;\r\n        this._end_col = undefined;\r\n    }\r\n\r\n    resize() {\r\n        this._container_width = undefined;\r\n        this._container_height = undefined;\r\n        this._nrows = undefined;\r\n        this._reset_viewport();\r\n    }\r\n\r\n    reset_scroll() {\r\n        this._column_sizes.indices = [];\r\n        this._scroll_container.scrollTop = 0;\r\n        this._scroll_container.scrollLeft = 0;\r\n        this._reset_viewport();\r\n    }\r\n\r\n    @throttlePromise\r\n    async draw(view, force_redraw = false, preserve_scroll_position = false, preserve_width = false) {\r\n        let start;\r\n        if (DEBUG) {\r\n            start = performance.now();\r\n        }\r\n\r\n        this.config = await view.get_config();\r\n\r\n        const container_width = (this._container_width = this._container_width || this._scroll_container.offsetWidth);\r\n        const container_height = (this._container_height = this._container_height || this._scroll_container.offsetHeight);\r\n\r\n        const nrowsp = view.num_rows().catch(() => {});\r\n        const column_pathsp = view.column_paths().catch(() => {});\r\n        const schemap = view.schema().catch(() => {});\r\n        const nrows = await nrowsp;\r\n        const {start_row, end_row} = this._calculate_row_range(container_height, nrows, preserve_scroll_position);\r\n        this._nrows = nrows;\r\n\r\n        this._update_virtual_panel_height(nrows);\r\n\r\n        const column_paths = await column_pathsp;\r\n        if (column_paths === undefined) {\r\n            return;\r\n        }\r\n        let {start_col, end_col} = this._calculate_column_range(container_width, this.config.row_pivots, column_paths);\r\n        const id = this.config.row_pivots.length > 0;\r\n        const viewport = {start_col, end_col, start_row, end_row, id};\r\n        let {invalid_row, invalid_column} = this._validate_viewport(viewport);\r\n        if (force_redraw || invalid_row || invalid_column) {\r\n            this._swap_in(force_redraw, invalid_row, invalid_column);\r\n            const header_levels = this.config.column_pivots.length + 1;\r\n            const row_levels = this.config.row_pivots.length;\r\n            const schema = await schemap;\r\n            await this.table_model.draw(\r\n                view,\r\n                container_width,\r\n                container_height,\r\n                header_levels,\r\n                row_levels,\r\n                column_paths,\r\n                this.config.row_pivots,\r\n                this.config.sort,\r\n                schema,\r\n                this._selected_id,\r\n                preserve_width,\r\n                viewport\r\n            );\r\n            this._swap_out(force_redraw, invalid_row, invalid_column);\r\n            if (!preserve_width) {\r\n                this._update_virtual_panel_width(force_redraw || invalid_column, container_width, this.config.row_pivots, column_paths);\r\n            }\r\n        }\r\n\r\n        if (DEBUG) {\r\n            LOG.push(performance.now() - start);\r\n        }\r\n    }\r\n\r\n    attach(render_element) {\r\n        this._column_sizes = {auto: {}, override: {}, indices: []};\r\n        this.table_model = new DatagridTableViewModel(this._table_clip, this._column_sizes);\r\n        this._sticky_container.appendChild(this.table_model.table);\r\n        if (render_element) {\r\n            this.render_element = render_element;\r\n        }\r\n        if (!this.table_model) return;\r\n        if (this.render_element) {\r\n            if (this.render_element !== this.table_model.table.parentElement) {\r\n                this.render_element.appendChild(this._sticky_container);\r\n            } else {\r\n            }\r\n        } else {\r\n            this.appendChild(this.table_model.table);\r\n        }\r\n    }\r\n\r\n    async _on_dblclick(event) {\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_resize) {\r\n            await new Promise(setTimeout);\r\n            this._column_sizes.override[metadata.size_key] = undefined;\r\n            this._column_sizes.auto[metadata.size_key] = undefined;\r\n            this._column_sizes.indices[metadata.cidx] = undefined;\r\n            element.style.minWidth = \"0\";\r\n            element.style.maxWidth = \"none\";\r\n            for (const row of this.table_model.body.cells) {\r\n                const td = row[metadata.cidx];\r\n                td.style.minWidth = \"0\";\r\n                td.style.maxWidth = \"none\";\r\n                td.classList.remove(\"pd-cell-clip\");\r\n            }\r\n            await this.draw(this.view, true, true);\r\n        }\r\n    }\r\n\r\n    async _on_click(event) {\r\n        let element = event.target;\r\n        while (element.tagName !== \"TD\" && element.tagName !== \"TH\") {\r\n            element = element.parentElement;\r\n            if (!this._sticky_container.contains(element)) {\r\n                return;\r\n            }\r\n        }\r\n        const is_button = event.target.classList.contains(\"pd-row-header-icon\");\r\n        const is_resize = event.target.classList.contains(\"pd-column-resize\");\r\n        const metadata = METADATA_MAP.get(element);\r\n        if (is_button) {\r\n            await this._on_toggle(event, metadata);\r\n        } else if (is_resize) {\r\n            this._on_resize_column(event, element, metadata);\r\n        } else if (metadata?.is_column_header) {\r\n            await this._on_sort(event, metadata);\r\n        } else {\r\n            await this._on_select(metadata);\r\n        }\r\n    }\r\n\r\n    _on_resize_column(event, element, metadata) {\r\n        const start = event.pageX;\r\n        const width = element.offsetWidth;\r\n        const scroll_left = this._scroll_container.scrollLeft;\r\n        const move = event => this._on_resize_column_move(event, element, start, width, scroll_left, metadata);\r\n        const up = async () => {\r\n            document.removeEventListener(\"mousemove\", move);\r\n            document.removeEventListener(\"mouseup\", up);\r\n            const override_width = this._column_sizes.override[metadata.size_key];\r\n            this._column_sizes.indices[metadata.cidx] = override_width;\r\n            await this.draw(this.view, true, true);\r\n        };\r\n        document.addEventListener(\"mousemove\", move);\r\n        document.addEventListener(\"mouseup\", up);\r\n    }\r\n\r\n    @throttlePromise\r\n    async _on_resize_column_move(event, th, start, width, scroll_left, metadata) {\r\n        await new Promise(setTimeout);\r\n        const diff = event.pageX - start;\r\n        const override_width = width + diff;\r\n        this._column_sizes.override[metadata.size_key] = override_width;\r\n        th.style.minWidth = override_width + \"px\";\r\n        th.style.maxWidth = override_width + \"px\";\r\n        const auto_width = this._column_sizes.auto[metadata.size_key];\r\n        for (const row of this.table_model.body.cells) {\r\n            const td = row[metadata.cidx];\r\n            td.style.maxWidth = td.style.minWidth = override_width + \"px\";\r\n            td.classList.toggle(\"pd-cell-clip\", auto_width > override_width);\r\n        }\r\n        if (diff < 0) {\r\n            await this.draw(this.view, true, true, true);\r\n        }\r\n    }\r\n\r\n    async _on_select(metadata) {\r\n        if (!this.elem.hasAttribute(\"selectable\")) {\r\n            return;\r\n        }\r\n        const cell_config = await getCellConfig(this.view, this.config, metadata.ridx, metadata.cidx);\r\n        if (_is_equals_id(metadata.id, this._selected_id) === 2) {\r\n            this._selected_id = undefined;\r\n            this.elem.dispatchEvent(\r\n                new CustomEvent(\"perspective-select\", {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    detail: {selected: false, config: {filters: []}}\r\n                })\r\n            );\r\n        } else {\r\n            this._selected_id = metadata.id;\r\n            this.elem.dispatchEvent(\r\n                new CustomEvent(\"perspective-select\", {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    detail: {selected: true, ...cell_config}\r\n                })\r\n            );\r\n        }\r\n        await this.draw(this.view, true, true);\r\n    }\r\n\r\n    async _on_toggle(event, metadata) {\r\n        if (metadata.is_open) {\r\n            if (event.shiftKey) {\r\n                await this.view.set_depth(metadata.row_path.length - 1);\r\n            } else {\r\n                await this.view.collapse(metadata.ridx);\r\n            }\r\n        } else if (metadata.is_open === false) {\r\n            if (event.shiftKey) {\r\n                await this.view.set_depth(metadata.row_path.length);\r\n            } else {\r\n                await this.view.expand(metadata.ridx);\r\n            }\r\n        }\r\n        await this.draw(this.view, true, true);\r\n    }\r\n\r\n    async _on_sort(event, metadata) {\r\n        // `element` is a `<th>`\r\n        let {sort} = await this.elem.view.get_config();\r\n        const current_idx = sort.findIndex(x => x[0] === metadata.column_name);\r\n\r\n        if (current_idx > -1) {\r\n            // Already sorted by `metadata.column_name`, so increment\r\n            const [name, direction] = sort[current_idx];\r\n            const new_sort = this.elem._increment_sort(direction, false, event.altKey);\r\n            sort[current_idx] = [name, new_sort];\r\n        } else {\r\n            // Not sorted, append\r\n            if (event.shiftKey) {\r\n                sort.push([metadata.column_name, event.altKey ? \"asc abs\" : \"asc\"]);\r\n            } else {\r\n                sort = [[metadata.column_name, event.altKey ? \"asc abs\" : \"asc\"]];\r\n            }\r\n        }\r\n        this.elem.setAttribute(\"sort\", JSON.stringify(sort));\r\n    }\r\n}\r\n\r\nwindow.customElements.define(\"perspective-datagrid\", DatagridVirtualTableViewModel);\r\n\r\n/******************************************************************************\r\n *\r\n * <perspective-viewer> integration\r\n *\r\n */\r\n\r\n/**\r\n * <perspective-viewer> plugin.\r\n *\r\n * @class DatagridPlugin\r\n */\r\nclass DatagridPlugin {\r\n    get name() {\r\n        return \"Datagrid\";\r\n    }\r\n\r\n    get selectMode() {\r\n        return \"toggle\";\r\n    }\r\n\r\n    get deselectMode() {\r\n        return \"pivots\";\r\n    }\r\n\r\n    async update(div, view) {\r\n        try {\r\n            await div[PRIVATE].draw(view, true, true);\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    async create(div, view) {\r\n        if (!div.hasOwnProperty(PRIVATE)) {\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = MATERIAL_STYLE;\r\n            document.head.appendChild(style);\r\n            div[PRIVATE] = document.createElement(\"perspective-datagrid\");\r\n            div[PRIVATE].set_element(this);\r\n            div[PRIVATE].appendChild(document.createElement(\"slot\"));\r\n            div[PRIVATE].attach(this);\r\n            div.innerHTML = \"\";\r\n            div.appendChild(div[PRIVATE]);\r\n        }\r\n\r\n        let force = true;\r\n\r\n        if (!div[PRIVATE].isConnected) {\r\n            div.innerHTML = \"\";\r\n            div[PRIVATE].clear();\r\n            force = false;\r\n            div.appendChild(div[PRIVATE]);\r\n        }\r\n\r\n        // TODO only on schema change\r\n        div[PRIVATE].reset_scroll();\r\n        div[PRIVATE].view = view;\r\n        await div[PRIVATE].draw(view, force);\r\n    }\r\n\r\n    async resize() {\r\n        if (this.view && this._datavis[PRIVATE]) {\r\n            this._datavis[PRIVATE].resize();\r\n            await this._datavis[PRIVATE].draw(this.view);\r\n        }\r\n    }\r\n}\r\n\r\nregisterPlugin(\"datagrid\", new DatagridPlugin());\r\n\r\n_start_profiling_loop();\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;"],"sourceRoot":""}