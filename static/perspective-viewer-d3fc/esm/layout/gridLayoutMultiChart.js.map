{"version":3,"sources":["../../../src/js/layout/gridLayoutMultiChart.js"],"names":["getOrCreateElement","gridLayoutMultiChart","elementsPrefix","chartContainer","chartEnter","chartDiv","chartTitle","color","containerSize","_gridLayoutMultiChart","container","innerContainer","append","attr","innerRect","node","getBoundingClientRect","containerHeight","height","containerWidth","width","minSize","data","datum","cols","Math","min","length","floor","rows","ceil","max","style","selectAll","d","split","exit","remove","enter","args"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {getOrCreateElement} from \"../utils/utils\";\n\nexport function gridLayoutMultiChart() {\n    let elementsPrefix = \"element-prefix-unset\";\n\n    let chartContainer = null;\n    let chartEnter = null;\n    let chartDiv = null;\n    let chartTitle = null;\n    let color = null;\n    let containerSize = null;\n\n    const _gridLayoutMultiChart = container => {\n        const innerContainer = getOrCreateElement(container, \"div.inner-container\", () => container.append(\"div\").attr(\"class\", \"inner-container\"));\n\n        const innerRect = innerContainer.node().getBoundingClientRect();\n        const containerHeight = innerRect.height;\n        const containerWidth = innerRect.width - (color ? 70 : 0);\n\n        const minSize = 500;\n        const data = container.datum();\n        const cols = Math.min(data.length, Math.floor(containerWidth / minSize));\n        const rows = Math.ceil(data.length / cols);\n        containerSize = {\n            width: containerWidth / cols,\n            height: Math.min(containerHeight, Math.max(containerHeight / rows, containerWidth / cols))\n        };\n        if (containerHeight / rows > containerSize.height * 0.75) {\n            containerSize.height = containerHeight / rows;\n        }\n\n        innerContainer.style(\"grid-template-columns\", `repeat(${cols}, ${containerSize.width}px)`);\n        innerContainer.style(\"grid-template-rows\", `repeat(${rows}, ${containerSize.height}px)`);\n\n        chartDiv = innerContainer.selectAll(`div.${elementsPrefix}-container`).data(data, d => d.split);\n        chartDiv.exit().remove();\n\n        chartEnter = chartDiv\n            .enter()\n            .append(\"div\")\n            .attr(\"class\", `${elementsPrefix}-container`);\n\n        chartTitle = chartEnter\n            .append(\"div\")\n            .attr(\"class\", \"title-container\")\n            .style(\"text-align\", \"center\")\n            .attr(\"display\", \"inline-block\")\n            .append(\"text\")\n            .attr(\"class\", \"title\")\n            .style(\"text-align\", \"left\");\n\n        chartContainer = chartEnter\n            .append(\"svg\")\n            .append(\"g\")\n            .attr(\"class\", elementsPrefix);\n    };\n\n    _gridLayoutMultiChart.elementsPrefix = (...args) => {\n        if (!args.length) {\n            return elementsPrefix;\n        }\n        elementsPrefix = args[0];\n        return _gridLayoutMultiChart;\n    };\n\n    _gridLayoutMultiChart.chartContainer = () => chartContainer;\n\n    _gridLayoutMultiChart.chartEnter = () => chartEnter;\n\n    _gridLayoutMultiChart.chartDiv = () => chartDiv;\n\n    _gridLayoutMultiChart.chartTitle = () => chartTitle;\n\n    _gridLayoutMultiChart.containerSize = () => containerSize;\n\n    return _gridLayoutMultiChart;\n}\n"],"file":"gridLayoutMultiChart.js"}