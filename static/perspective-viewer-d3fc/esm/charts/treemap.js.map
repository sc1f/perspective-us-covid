{"version":3,"sources":["../../../src/js/charts/treemap.js"],"names":["d3","treeColor","treeData","treemapSeries","tooltip","gridLayoutMultiChart","colorRangeLegend","treemap","container","settings","crossValues","length","console","warn","treemaps","data","color","map","d","treemapGrid","elementsPrefix","datum","call","legend","scale","treemapEnter","chartEnter","treemapDiv","chartDiv","treemapTitle","chartTitle","each","i","nodes","select","text","split","merge","treemapSvg","parentNode","node","centered","selectAll","plugin","type","name","max_cells","max_columns","initial","count","names"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {treeColor} from \"../series/treemap/treemapColor\";\nimport {treeData} from \"../data/treeData\";\nimport {treemapSeries} from \"../series/treemap/treemapSeries\";\nimport {tooltip} from \"../tooltip/tooltip\";\nimport {gridLayoutMultiChart} from \"../layout/gridLayoutMultiChart\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\n\nfunction treemap(container, settings) {\n    if (settings.crossValues.length === 0) {\n        console.warn(\"Unable to render a chart in the absence of any groups.\");\n        return;\n    }\n    if (!settings.treemaps) settings.treemaps = {};\n\n    const data = treeData(settings);\n    const color = treeColor(\n        settings,\n        data.map(d => d.data)\n    );\n    const treemapGrid = gridLayoutMultiChart().elementsPrefix(\"treemap\");\n\n    container.datum(data).call(treemapGrid);\n\n    if (color) {\n        const legend = colorRangeLegend().scale(color);\n        container.call(legend);\n    }\n\n    const treemapEnter = treemapGrid.chartEnter();\n    const treemapDiv = treemapGrid.chartDiv();\n    const treemapTitle = treemapGrid.chartTitle();\n\n    treemapTitle.each((d, i, nodes) => d3.select(nodes[i]).text(d.split));\n    treemapEnter\n        .merge(treemapDiv)\n        .select(\"svg\")\n        .select(\"g.treemap\")\n        .each(function({split, data}) {\n            const treemapSvg = d3.select(this);\n\n            if (!settings.treemaps[split]) settings.treemaps[split] = {};\n\n            treemapSeries()\n                .settings(settings.treemaps[split])\n                .data(data)\n                .container(d3.select(d3.select(this.parentNode).node().parentNode))\n                .color(color)(treemapSvg);\n\n            tooltip()\n                .settings(settings)\n                .centered(true)(treemapSvg.selectAll(\"g\"));\n        });\n}\n\ntreemap.plugin = {\n    type: \"d3_treemap\",\n    name: \"Treemap\",\n    max_cells: 5000,\n    max_columns: 50,\n    initial: {\n        type: \"number\",\n        count: 1,\n        names: [\"Size\", \"Color\", \"Tooltip\"]\n    }\n};\nexport default treemap;\n"],"file":"treemap.js"}