{"version":3,"sources":["../../../src/js/charts/y-scatter.js"],"names":["fc","axisFactory","AXIS_TYPES","chartSvgFactory","axisSplitter","seriesColors","categoryPointSeries","symbolType","groupData","symbolLegend","filterData","withGridLines","hardLimitZeroPadding","zoomableChart","nearbyTip","yScatter","container","settings","data","symbols","color","legend","scale","series","seriesSvgMulti","mapping","index","map","key","paddingStrategy","pad","padUnit","xAxis","excludeType","linear","settingName","valueName","yAxisFactory","orient","splitter","yAxis1","plotSeries","haveSplit","chart","plotArea","yNice","zoomChart","xScale","toolTip","yScale","yAxis2","altData","altAxis","altDataWithScale","datum","call","plugin","type","name","max_cells","max_columns"],"mappings":"AAAA;;;;;;;;AAQA,OAAO,KAAKA,EAAZ,MAAoB,MAApB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,SAAQC,mBAAR,EAA6BC,UAA7B,QAA8C,+BAA9C;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,IAAI,GAAGV,SAAS,CAACS,QAAD,EAAWP,UAAU,CAACO,QAAD,CAArB,CAAtB;AACA,QAAME,OAAO,GAAGZ,UAAU,CAACU,QAAD,CAA1B;AACA,QAAMG,KAAK,GAAGf,YAAY,CAACY,QAAD,CAA1B;AAEA,QAAMI,MAAM,GAAGZ,YAAY,GACtBQ,QADU,CACDA,QADC,EAEVK,KAFU,CAEJH,OAFI,EAGVC,KAHU,CAGJA,KAHI,CAAf;AAKA,QAAMG,MAAM,GAAGvB,EAAE,CACZwB,cADU,GAEVC,OAFU,CAEF,CAACP,IAAD,EAAOQ,KAAP,KAAiBR,IAAI,CAACQ,KAAD,CAFnB,EAGVH,MAHU,CAGHL,IAAI,CAACS,GAAL,CAASJ,MAAM,IAAIjB,mBAAmB,CAACW,QAAD,EAAWM,MAAM,CAACK,GAAlB,EAAuBR,KAAvB,EAA8BD,OAA9B,CAAtC,CAHG,CAAf;AAKA,QAAMU,eAAe,GAAGjB,oBAAoB,GACvCkB,GADmB,CACf,CAAC,IAAD,EAAO,IAAP,CADe,EAEnBC,OAFmB,CAEX,SAFW,CAAxB;AAIA,QAAMC,KAAK,GAAG/B,WAAW,CAACgB,QAAD,CAAX,CACTgB,WADS,CACG/B,UAAU,CAACgC,MADd,EAETC,WAFS,CAEG,aAFH,EAGTC,SAHS,CAGC,YAHD,EAGelB,IAHf,CAAd;AAIA,QAAMmB,YAAY,GAAGpC,WAAW,CAACgB,QAAD,CAAX,CAChBkB,WADgB,CACJ,YADI,EAEhBC,SAFgB,CAEN,WAFM,EAGhBE,MAHgB,CAGT,UAHS,EAIhBT,eAJgB,CAIAA,eAJA,CAArB,CAvBmC,CA6BnC;;AACA,QAAMU,QAAQ,GAAGnC,YAAY,CAACa,QAAD,EAAWC,IAAX,CAAZ,CAA6BE,KAA7B,CAAmCA,KAAnC,CAAjB;AAEA,QAAMoB,MAAM,GAAGH,YAAY,CAACE,QAAQ,CAACrB,IAAT,EAAD,CAA3B,CAhCmC,CAkCnC;;AACA,QAAMuB,UAAU,GAAGF,QAAQ,CAACG,SAAT,KAAuBnB,MAAvB,GAAgCZ,aAAa,CAACY,MAAD,EAASN,QAAT,CAAb,CAAgCqB,MAAhC,CAAuC,UAAvC,CAAnD;AAEA,QAAMK,KAAK,GAAGxC,eAAe,CAAC6B,KAAD,EAAQQ,MAAR,CAAf,CACTpC,YADS,CACImC,QADJ,EAETK,QAFS,CAEAH,UAFA,CAAd;AAIAE,EAAAA,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACE,KAAN,EAAf;AAEA,QAAMC,SAAS,GAAGjC,aAAa,GAC1B8B,KADa,CACPA,KADO,EAEb1B,QAFa,CAEJA,QAFI,EAGb8B,MAHa,CAGNf,KAAK,CAACV,KAHA,CAAlB;AAKA,QAAM0B,OAAO,GAAGlC,SAAS,GACpBG,QADW,CACFA,QADE,EAEX8B,MAFW,CAEJf,KAAK,CAACV,KAFF,EAGX2B,MAHW,CAGJT,MAAM,CAAClB,KAHH,EAIXF,KAJW,CAILA,KAJK,EAKXF,IALW,CAKNA,IALM,CAAhB;;AAOA,MAAIqB,QAAQ,CAACG,SAAT,EAAJ,EAA0B;AACtB;AACA,UAAMQ,MAAM,GAAGb,YAAY,CAACE,QAAQ,CAACY,OAAT,EAAD,CAA3B;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAcF,MAAd,EAHsB,CAItB;AACA;;AACAF,IAAAA,OAAO,CAAC9B,IAAR,CAAaqB,QAAQ,CAACrB,IAAT,EAAb,EAA8BmC,gBAA9B,CAA+C;AAACJ,MAAAA,MAAM,EAAEC,MAAM,CAAC5B,KAAhB;AAAuBJ,MAAAA,IAAI,EAAEqB,QAAQ,CAACY,OAAT;AAA7B,KAA/C;AACH,GA9DkC,CAgEnC;;;AACAnC,EAAAA,SAAS,CAACsC,KAAV,CAAgBf,QAAQ,CAACrB,IAAT,EAAhB,EAAiCqC,IAAjC,CAAsCT,SAAtC;AACA9B,EAAAA,SAAS,CAACuC,IAAV,CAAeP,OAAf;;AACA,MAAI3B,MAAJ,EAAY;AACRL,IAAAA,SAAS,CAACuC,IAAV,CAAelC,MAAf;AACH;AACJ;;AACDN,QAAQ,CAACyC,MAAT,GAAkB;AACdC,EAAAA,IAAI,EAAE,cADQ;AAEdC,EAAAA,IAAI,EAAE,iBAFQ;AAGdC,EAAAA,SAAS,EAAE,IAHG;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAlB;AAOA,eAAe7C,QAAf","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {axisSplitter} from \"../axis/axisSplitter\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {categoryPointSeries, symbolType} from \"../series/categoryPointSeries\";\nimport {groupData} from \"../data/groupData\";\nimport {symbolLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction yScatter(container, settings) {\n    const data = groupData(settings, filterData(settings));\n    const symbols = symbolType(settings);\n    const color = seriesColors(settings);\n\n    const legend = symbolLegend()\n        .settings(settings)\n        .scale(symbols)\n        .color(color);\n\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(data.map(series => categoryPointSeries(settings, series.key, color, symbols)));\n\n    const paddingStrategy = hardLimitZeroPadding()\n        .pad([0.05, 0.05])\n        .padUnit(\"percent\");\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .orient(\"vertical\")\n        .paddingStrategy(paddingStrategy);\n\n    // Check whether we've split some values into a second y-axis\n    const splitter = axisSplitter(settings, data).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit() ? series : withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    const toolTip = nearbyTip()\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis1.scale)\n        .color(color)\n        .data(data);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n        chart.altAxis(yAxis2);\n        // Give the tooltip the information (i.e. 2 datasets with different\n        // scales)\n        toolTip.data(splitter.data()).altDataWithScale({yScale: yAxis2.scale, data: splitter.altData()});\n    }\n\n    // render\n    container.datum(splitter.data()).call(zoomChart);\n    container.call(toolTip);\n    if (legend) {\n        container.call(legend);\n    }\n}\nyScatter.plugin = {\n    type: \"d3_y_scatter\",\n    name: \"Y Scatter Chart\",\n    max_cells: 4000,\n    max_columns: 50\n};\n\nexport default yScatter;\n"],"file":"y-scatter.js"}