{"version":3,"sources":["../../../src/js/charts/sunburst.js"],"names":["select","treeColor","treeData","sunburstSeries","tooltip","gridLayoutMultiChart","colorRangeLegend","sunburst","container","settings","crossValues","length","console","warn","data","color","map","d","extents","sunburstGrid","elementsPrefix","datum","call","legend","scale","sunburstContainer","chartContainer","sunburstEnter","chartEnter","sunburstDiv","chartDiv","sunburstTitle","chartTitle","containerSize","each","i","nodes","text","split","append","attr","merge","width","height","sunburstElement","svgNode","parentNode","getBoundingClientRect","radius","Math","min","selectAll","plugin","type","name","max_cells","max_columns","initial","count","names"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\nimport {treeColor} from \"../series/sunburst/sunburstColor\";\nimport {treeData} from \"../data/treeData\";\nimport {sunburstSeries} from \"../series/sunburst/sunburstSeries\";\nimport {tooltip} from \"../tooltip/tooltip\";\nimport {gridLayoutMultiChart} from \"../layout/gridLayoutMultiChart\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\n\nfunction sunburst(container, settings) {\n    if (settings.crossValues.length === 0) {\n        console.warn(\"Unable to render a chart in the absence of any groups.\");\n        return;\n    }\n\n    const data = treeData(settings);\n    const color = treeColor(\n        settings,\n        data.map(d => d.extents)\n    );\n    const sunburstGrid = gridLayoutMultiChart().elementsPrefix(\"sunburst\");\n\n    container.datum(data).call(sunburstGrid);\n\n    if (color) {\n        const legend = colorRangeLegend().scale(color);\n        container.call(legend);\n    }\n\n    const sunburstContainer = sunburstGrid.chartContainer();\n    const sunburstEnter = sunburstGrid.chartEnter();\n    const sunburstDiv = sunburstGrid.chartDiv();\n    const sunburstTitle = sunburstGrid.chartTitle();\n    const containerSize = sunburstGrid.containerSize();\n\n    sunburstTitle.each((d, i, nodes) => select(nodes[i]).text(d.split));\n\n    sunburstContainer\n        .append(\"circle\")\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\");\n\n    sunburstContainer.append(\"text\").attr(\"class\", \"parent\");\n    sunburstEnter\n        .merge(sunburstDiv)\n        .select(\"svg\")\n        .select(\"g.sunburst\")\n        .attr(\"transform\", `translate(${containerSize.width / 2}, ${containerSize.height / 2})`)\n        .each(function({split, data}) {\n            const sunburstElement = select(this);\n            const svgNode = this.parentNode;\n            const {width, height} = svgNode.getBoundingClientRect();\n\n            const radius = (Math.min(width, height) - 120) / 6;\n            sunburstSeries()\n                .settings(settings)\n                .split(split)\n                .data(data)\n                .color(color)\n                .radius(radius)(sunburstElement);\n\n            tooltip().settings(settings)(sunburstElement.selectAll(\"g.segment\"));\n        });\n}\n\nsunburst.plugin = {\n    type: \"d3_sunburst\",\n    name: \"Sunburst\",\n    max_cells: 7500,\n    max_columns: 50,\n    initial: {\n        type: \"number\",\n        count: 1,\n        names: [\"Size\", \"Color\", \"Tooltip\"]\n    }\n};\n\nexport default sunburst;\n"],"file":"sunburst.js"}