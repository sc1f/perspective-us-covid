{"version":3,"sources":["../../../src/js/charts/bar.js"],"names":["fc","axisFactory","chartSvgFactory","AXIS_TYPES","barSeries","seriesColors","groupAndStackData","colorLegend","filterData","withGridLines","hardLimitZeroPadding","zoomableChart","barChart","container","settings","data","color","legend","scale","bars","orient","series","seriesSvgMulti","mapping","index","map","xAxis","settingName","valueName","excludeType","ordinal","include","paddingStrategy","yAxis","linear","chart","plotArea","yPaddingInner","yPaddingOuter","align","xNice","zoomChart","yScale","datum","call","plugin","type","name","max_cells","max_columns"],"mappings":"AAAA;;;;;;;;AAQA,OAAO,KAAKA,EAAZ,MAAoB,MAApB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,IAAI,GAAGT,iBAAiB,CAACQ,QAAD,EAAWN,UAAU,CAACM,QAAD,CAArB,CAA9B;AACA,QAAME,KAAK,GAAGX,YAAY,CAACS,QAAD,CAA1B;AAEA,QAAMG,MAAM,GAAGV,WAAW,GACrBO,QADU,CACDA,QADC,EAEVI,KAFU,CAEJF,KAFI,CAAf;AAIA,QAAMG,IAAI,GAAGf,SAAS,CAACU,QAAD,EAAWE,KAAX,CAAT,CAA2BI,MAA3B,CAAkC,YAAlC,CAAb;AACA,QAAMC,MAAM,GAAGrB,EAAE,CACZsB,cADU,GAEVC,OAFU,CAEF,CAACR,IAAD,EAAOS,KAAP,KAAiBT,IAAI,CAACS,KAAD,CAFnB,EAGVH,MAHU,CAGHN,IAAI,CAACU,GAAL,CAAS,MAAMN,IAAf,CAHG,CAAf;AAKA,QAAMO,KAAK,GAAGzB,WAAW,CAACa,QAAD,CAAX,CACTa,WADS,CACG,YADH,EAETC,SAFS,CAEC,WAFD,EAGTC,WAHS,CAGG1B,UAAU,CAAC2B,OAHd,EAITC,OAJS,CAID,CAAC,CAAD,CAJC,EAKTC,eALS,CAKOtB,oBAAoB,EAL3B,EAK+BK,IAL/B,CAAd;AAMA,QAAMkB,KAAK,GAAGhC,WAAW,CAACa,QAAD,CAAX,CACTe,WADS,CACG1B,UAAU,CAAC+B,MADd,EAETP,WAFS,CAEG,aAFH,EAGTC,SAHS,CAGC,YAHD,EAITR,MAJS,CAIF,UAJE,EAIUL,IAJV,CAAd;AAMA,QAAMoB,KAAK,GAAGjC,eAAe,CAACwB,KAAD,EAAQO,KAAR,CAAf,CAA8BG,QAA9B,CAAuC3B,aAAa,CAACY,MAAD,EAASP,QAAT,CAAb,CAAgCM,MAAhC,CAAuC,YAAvC,CAAvC,CAAd;;AAEA,MAAIe,KAAK,CAACE,aAAV,EAAyB;AACrBF,IAAAA,KAAK,CAACE,aAAN,CAAoB,GAApB;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoB,IAApB;AACAnB,IAAAA,IAAI,CAACoB,KAAL,CAAW,MAAX;AACH;;AACDJ,EAAAA,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACK,KAAN,EAAf;AAEA,QAAMC,SAAS,GAAG9B,aAAa,GAC1BwB,KADa,CACPA,KADO,EAEbrB,QAFa,CAEJA,QAFI,EAGb4B,MAHa,CAGNT,KAAK,CAACf,KAHA,CAAlB,CAnCmC,CAwCnC;;AACAL,EAAAA,SAAS,CAAC8B,KAAV,CAAgB5B,IAAhB,EAAsB6B,IAAtB,CAA2BH,SAA3B;AACA5B,EAAAA,SAAS,CAAC+B,IAAV,CAAe3B,MAAf;AACH;;AACDL,QAAQ,CAACiC,MAAT,GAAkB;AACdC,EAAAA,IAAI,EAAE,UADQ;AAEdC,EAAAA,IAAI,EAAE,aAFQ;AAGdC,EAAAA,SAAS,EAAE,IAHG;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAlB;AAOA,eAAerC,QAAf","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\nimport * as fc from \"d3fc\";\r\nimport {axisFactory} from \"../axis/axisFactory\";\r\nimport {chartSvgFactory} from \"../axis/chartFactory\";\r\nimport {AXIS_TYPES} from \"../axis/axisType\";\r\nimport {barSeries} from \"../series/barSeries\";\r\nimport {seriesColors} from \"../series/seriesColors\";\r\nimport {groupAndStackData} from \"../data/groupData\";\r\nimport {colorLegend} from \"../legend/legend\";\r\nimport {filterData} from \"../legend/filter\";\r\nimport withGridLines from \"../gridlines/gridlines\";\r\n\r\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\r\nimport zoomableChart from \"../zoom/zoomableChart\";\r\n\r\nfunction barChart(container, settings) {\r\n    const data = groupAndStackData(settings, filterData(settings));\r\n    const color = seriesColors(settings);\r\n\r\n    const legend = colorLegend()\r\n        .settings(settings)\r\n        .scale(color);\r\n\r\n    const bars = barSeries(settings, color).orient(\"horizontal\");\r\n    const series = fc\r\n        .seriesSvgMulti()\r\n        .mapping((data, index) => data[index])\r\n        .series(data.map(() => bars));\r\n\r\n    const xAxis = axisFactory(settings)\r\n        .settingName(\"mainValues\")\r\n        .valueName(\"mainValue\")\r\n        .excludeType(AXIS_TYPES.ordinal)\r\n        .include([0])\r\n        .paddingStrategy(hardLimitZeroPadding())(data);\r\n    const yAxis = axisFactory(settings)\r\n        .excludeType(AXIS_TYPES.linear)\r\n        .settingName(\"crossValues\")\r\n        .valueName(\"crossValue\")\r\n        .orient(\"vertical\")(data);\r\n\r\n    const chart = chartSvgFactory(xAxis, yAxis).plotArea(withGridLines(series, settings).orient(\"horizontal\"));\r\n\r\n    if (chart.yPaddingInner) {\r\n        chart.yPaddingInner(0.5);\r\n        chart.yPaddingOuter(0.25);\r\n        bars.align(\"left\");\r\n    }\r\n    chart.xNice && chart.xNice();\r\n\r\n    const zoomChart = zoomableChart()\r\n        .chart(chart)\r\n        .settings(settings)\r\n        .yScale(yAxis.scale);\r\n\r\n    // render\r\n    container.datum(data).call(zoomChart);\r\n    container.call(legend);\r\n}\r\nbarChart.plugin = {\r\n    type: \"d3_x_bar\",\r\n    name: \"X Bar Chart\",\r\n    max_cells: 1000,\r\n    max_columns: 50\r\n};\r\n\r\nexport default barChart;\r\n"],"file":"bar.js"}