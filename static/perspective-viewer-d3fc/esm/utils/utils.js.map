{"version":3,"sources":["../../../src/js/utils/utils.js"],"names":["areArraysEqualSimple","arr1","arr2","JSON","stringify","getOrCreateElement","container","selector","createCallback","element","select","size","isElementOverflowing","containerRect","innerElementRect","direction","isElementOverlapping","axis","immovableRect","elementRect","fuzz","dimension","immovableInnerPoint","immovableOuterPoint","elementInnerPoint","elementOuterPoint","innerPointInside","outerPointInside","pointsEitherSide"],"mappings":"AAAA;;;;;;;;AASA,OAAO,SAASA,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC7C,SAAOC,IAAI,CAACC,SAAL,CAAeH,IAAf,MAAyBE,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAhC;AACH;AAED,OAAO,SAASG,kBAAT,CAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,cAAjD,EAAiE;AACpE,MAAIC,OAAO,GAAGH,SAAS,CAACI,MAAV,CAAiBH,QAAjB,CAAd;AACA,SAAOE,OAAO,CAACE,IAAR,KAAiB,CAAjB,GAAqBF,OAArB,GAA+BD,cAAc,EAApD;AACH;AAED,OAAO,SAASI,oBAAT,CAA8BC,aAA9B,EAA6CC,gBAA7C,EAA+DC,SAAS,GAAG,OAA3E,EAAoF;AACvF,MAAIA,SAAS,KAAK,OAAd,IAAyBA,SAAS,KAAK,QAA3C,EAAqD;AACjD,WAAOF,aAAa,CAACE,SAAD,CAAb,GAA2BD,gBAAgB,CAACC,SAAD,CAA3C,GAAyD,IAAzD,GAAgE,KAAvE;AACH;;AAED,MAAIA,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,KAA1C,EAAiD;AAC7C,WAAOF,aAAa,CAACE,SAAD,CAAb,GAA2BD,gBAAgB,CAACC,SAAD,CAA3C,GAAyD,IAAzD,GAAgE,KAAvE;AACH;;AAED,QAAO,oDAAmDA,SAAU,EAApE;AACH;AAED,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,aAApC,EAAmDC,WAAnD,EAAgEC,IAAI,GAAG,CAAvE,EAA0E;AAC7E,QAAMC,SAAS,GAAGJ,IAAI,KAAK,GAAT,GAAe,OAAf,GAAyB,QAA3C;AAEA,QAAMK,mBAAmB,GAAGJ,aAAa,CAACD,IAAD,CAAzC;AACA,QAAMM,mBAAmB,GAAGL,aAAa,CAACD,IAAD,CAAb,GAAsBC,aAAa,CAACG,SAAD,CAA/D;AAEA,QAAMG,iBAAiB,GAAGL,WAAW,CAACF,IAAD,CAArC;AACA,QAAMQ,iBAAiB,GAAGN,WAAW,CAACF,IAAD,CAAX,GAAoBE,WAAW,CAACE,SAAD,CAAzD;AAEA,QAAMK,gBAAgB,GAAGF,iBAAiB,GAAGJ,IAApB,GAA2BE,mBAA3B,IAAkDE,iBAAiB,GAAGJ,IAApB,GAA2BG,mBAAtG;AACA,QAAMI,gBAAgB,GAAGF,iBAAiB,GAAGL,IAApB,GAA2BE,mBAA3B,IAAkDG,iBAAiB,GAAGL,IAApB,GAA2BG,mBAAtG;AACA,QAAMK,gBAAgB,GAAGJ,iBAAiB,GAAGJ,IAApB,GAA2BE,mBAA3B,IAAkDG,iBAAiB,GAAGL,IAApB,GAA2BG,mBAAtG;AAEA,SAAOG,gBAAgB,IAAIC,gBAApB,IAAwCC,gBAA/C;AACH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function areArraysEqualSimple(arr1, arr2) {\n    return JSON.stringify(arr1) === JSON.stringify(arr2);\n}\n\nexport function getOrCreateElement(container, selector, createCallback) {\n    let element = container.select(selector);\n    return element.size() > 0 ? element : createCallback();\n}\n\nexport function isElementOverflowing(containerRect, innerElementRect, direction = \"right\") {\n    if (direction === \"right\" || direction === \"bottom\") {\n        return containerRect[direction] < innerElementRect[direction] ? true : false;\n    }\n\n    if (direction === \"left\" || direction === \"top\") {\n        return containerRect[direction] > innerElementRect[direction] ? true : false;\n    }\n\n    throw `Direction being checked for overflow is invalid: ${direction}`;\n}\n\nexport function isElementOverlapping(axis, immovableRect, elementRect, fuzz = 0) {\n    const dimension = axis === \"x\" ? \"width\" : \"height\";\n\n    const immovableInnerPoint = immovableRect[axis];\n    const immovableOuterPoint = immovableRect[axis] + immovableRect[dimension];\n\n    const elementInnerPoint = elementRect[axis];\n    const elementOuterPoint = elementRect[axis] + elementRect[dimension];\n\n    const innerPointInside = elementInnerPoint + fuzz > immovableInnerPoint && elementInnerPoint - fuzz < immovableOuterPoint;\n    const outerPointInside = elementOuterPoint + fuzz > immovableInnerPoint && elementOuterPoint - fuzz < immovableOuterPoint;\n    const pointsEitherSide = elementInnerPoint + fuzz < immovableInnerPoint && elementOuterPoint - fuzz > immovableOuterPoint;\n\n    return innerPointInside || outerPointInside || pointsEitherSide;\n}\n"],"file":"utils.js"}