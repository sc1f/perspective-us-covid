{"version":3,"sources":["../../../../src/js/series/treemap/treemapTransitions.js"],"names":["d3","calcWidth","calcHeight","labelMapExists","toggleLabels","preventTextCollisions","lockTextOpacity","unlockTextOpacity","textOpacity","selectVisibleNodes","adjustLabelsThatOverflow","restoreLabels","calculateSubTreeMap","saveLabelMap","returnToLevel","rects","nodesMerge","labels","settings","treemapDiv","treemapSvg","rootNode","parentCtrls","treemapLevel","crossValues","crossValue","split","executeTransition","treemapRoute","slice","length","forEach","cv","d","filter","datum","depth","changeLevel","children","push","pop","mapLevel","levelRoot","duration","recordLabelMap","parent","t","transition","ease","easeCubicOut","each","target","preventUserInteraction","tween","i","interpolate","current","styleTween","opacity","attrTween","visible","x0","y0","x1","y1","end","catch","enableUserInteraction","then","visibleLabelNodes","fadeTextTransition","ex","console","error","_","hide","text","data","name","onClick","label","interpolation","lockedOpacity","targetOpacity","textLockedAt","select","attr","nodes","deactivate","rect","selectAll"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {calcWidth, calcHeight} from \"./treemapSeries\";\nimport {labelMapExists, toggleLabels, preventTextCollisions, lockTextOpacity, unlockTextOpacity, textOpacity, selectVisibleNodes, adjustLabelsThatOverflow, restoreLabels} from \"./treemapLabel\";\nimport {calculateSubTreeMap, saveLabelMap} from \"./treemapLevelCalculation\";\n\nexport function returnToLevel(rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, parentCtrls) {\n    if (settings.treemapLevel > 0) {\n        const crossValues = rootNode.crossValue.split(\"|\");\n        executeTransition(rootNode, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, 0, crossValues, parentCtrls, 1, false);\n\n        settings.treemapRoute.slice(1, settings.treemapRoute.length).forEach(cv => {\n            const d = nodesMerge.filter(d => d.crossValue === cv).datum();\n            const crossValues = d.crossValue.split(\"|\");\n            calculateSubTreeMap(d, crossValues, nodesMerge, d.depth, rootNode, treemapDiv);\n            executeTransition(d, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, d.depth, crossValues, parentCtrls, 1, false);\n        });\n    }\n}\n\nexport function changeLevel(d, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, parentCtrls) {\n    if (!d.children) return;\n\n    if (settings.treemapLevel < d.depth) {\n        settings.treemapRoute.push(d.crossValue);\n    } else {\n        settings.treemapRoute.pop();\n    }\n\n    settings.treemapLevel = d.depth;\n\n    const crossValues = d.crossValue.split(\"|\");\n    if (!d.mapLevel[settings.treemapLevel] || !d.mapLevel[settings.treemapLevel].levelRoot) {\n        calculateSubTreeMap(d, crossValues, nodesMerge, settings.treemapLevel, rootNode, treemapDiv);\n    }\n\n    executeTransition(d, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, settings.treemapLevel, crossValues, parentCtrls);\n}\n\nfunction executeTransition(d, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, treemapLevel, crossValues, parentCtrls, duration = 500, recordLabelMap = true) {\n    const parent = d.parent;\n\n    const t = treemapSvg\n        .transition(\"main transition\")\n        .duration(duration)\n        .ease(d3.easeCubicOut);\n\n    nodesMerge.each(d => (d.target = d.mapLevel[treemapLevel]));\n\n    if (!labelMapExists(d)) preventUserInteraction(nodesMerge, parentCtrls);\n\n    // hide hidden svgs\n    nodesMerge\n        .transition(t)\n        .tween(\"data\", d => {\n            const i = d3.interpolate(d.current, d.target);\n            return t => (d.current = i(t));\n        })\n        .styleTween(\"opacity\", d => () => d.current.opacity)\n        .attrTween(\"pointer-events\", d => () => (d.target.visible ? \"all\" : \"none\"));\n\n    rects\n        .transition(t)\n        .filter(d => d.target.visible)\n        .styleTween(\"x\", d => () => `${d.current.x0}px`)\n        .styleTween(\"y\", d => () => `${d.current.y0}px`)\n        .styleTween(\"width\", d => () => `${d.current.x1 - d.current.x0}px`)\n        .styleTween(\"height\", d => () => `${d.current.y1 - d.current.y0}px`);\n\n    labels\n        .transition(t)\n        .filter(d => d.target.visible)\n        .attrTween(\"x\", d => () => d.current.x0 + calcWidth(d.current) / 2)\n        .attrTween(\"y\", d => () => d.current.y0 + calcHeight(d.current) / 2)\n        .end()\n        .catch(() => enableUserInteraction(nodesMerge))\n        .then(() => {\n            if (!labelMapExists(d)) {\n                preventTextCollisions(visibleLabelNodes);\n                adjustLabelsThatOverflow(visibleLabelNodes);\n                fadeTextTransition(labels, treemapSvg, duration);\n                if (recordLabelMap) saveLabelMap(nodesMerge, treemapLevel);\n                enableUserInteraction(nodesMerge, parentCtrls, parent);\n            }\n        })\n        .catch(ex => {\n            console.error(\"Exception completing promises after main transition\", ex);\n            enableUserInteraction(nodesMerge, parentCtrls, parent);\n        });\n\n    if (!labelMapExists(d)) {\n        labels.each((_, i, labels) => lockTextOpacity(labels[i]));\n        toggleLabels(nodesMerge, treemapLevel, crossValues);\n    } else {\n        restoreLabels(nodesMerge);\n    }\n\n    const visibleLabelNodes = selectVisibleNodes(nodesMerge);\n\n    if (parent) {\n        parentCtrls\n            .hide(false)\n            .text(d.data.name)\n            .onClick(() => changeLevel(parent, rects, nodesMerge, labels, settings, treemapDiv, treemapSvg, rootNode, parentCtrls, duration))();\n    } else {\n        parentCtrls.hide(true)();\n    }\n}\n\nasync function fadeTextTransition(labels, treemapSvg, duration = 400) {\n    const t = treemapSvg\n        .transition(\"text fade transition\")\n        .duration(duration)\n        .ease(d3.easeCubicOut);\n\n    await labels\n        .transition(t)\n        .filter(d => d.target.visible)\n        .tween(\"data\", (d, i, labels) => {\n            const label = labels[i];\n            const interpolation = d3.interpolate(lockedOpacity(d), targetOpacity(label));\n            return t => (d.current.opacity = interpolation(t));\n        })\n        .styleTween(\"opacity\", d => () => d.current.opacity)\n        .end()\n        .catch(ex => console.error(\"Exception in text fade transition\", ex))\n        .then(() => labels.each((_, i, labels) => unlockTextOpacity(labels[i])));\n}\n\nconst lockedOpacity = d => d.target.textLockedAt.opacity;\nconst targetOpacity = d => textOpacity[d3.select(d).attr(\"class\")];\n\nconst preventUserInteraction = (nodes, parentCtrls) => {\n    parentCtrls.deactivate(true);\n\n    nodes.each((_, i, nodes) => {\n        const rect = d3.select(nodes[i]).selectAll(\"rect\");\n        rect.attr(\"pointer-events\", \"none\");\n    });\n};\n\nconst enableUserInteraction = (nodes, parentCtrls) => {\n    if (parentCtrls) parentCtrls.deactivate(false);\n\n    nodes.each((_, i, nodes) => {\n        const rect = d3.select(nodes[i]).selectAll(\"rect\");\n        rect.attr(\"pointer-events\", null);\n    });\n};\n"],"file":"treemapTransitions.js"}