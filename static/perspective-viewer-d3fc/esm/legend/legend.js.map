{"version":3,"sources":["../../../src/js/legend/legend.js"],"names":["d3","d3Legend","scrollableLegend","withoutOpacity","getChartElement","getOrCreateElement","scrollColorLegend","settings","legendColor","shape","shapeRadius","scrollSymbolLegend","legendSymbol","shapePadding","labelOffset","colorLegend","legendComponent","symbolLegend","symbolScale","fromScale","domain","range","map","r","symbol","type","scaleOrdinal","scrollLegendComponent","scaleModifier","scale","color","legend","container","length","scrollLegend","orient","on","d","hideKeys","includes","filter","k","push","draw","labels","options","parts","i","split","mainValues","slice","join","legendSelection","append","decorate","selection","isHidden","data","cells","select","attr","selectAll","classed","html","style","call","args"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport * as d3Legend from \"d3-svg-legend\";\nimport scrollableLegend from \"./scrollableLegend\";\nimport {withoutOpacity} from \"../series/seriesColors\";\nimport {getChartElement} from \"../plugin/root\";\nimport {getOrCreateElement} from \"../utils/utils\";\n\nconst scrollColorLegend = settings =>\n    scrollableLegend(\n        d3Legend\n            .legendColor()\n            .shape(\"circle\")\n            .shapeRadius(6),\n        settings\n    );\nconst scrollSymbolLegend = settings =>\n    scrollableLegend(\n        d3Legend\n            .legendSymbol()\n            .shapePadding(1)\n            .labelOffset(3),\n        settings\n    );\n\nexport const colorLegend = () => legendComponent(scrollColorLegend);\nexport const symbolLegend = () => legendComponent(scrollSymbolLegend, symbolScale);\n\nfunction symbolScale(fromScale) {\n    if (!fromScale) return null;\n\n    const domain = fromScale.domain();\n    const range = fromScale.range().map(r => d3.symbol().type(r)());\n\n    return d3\n        .scaleOrdinal()\n        .domain(domain)\n        .range(range);\n}\n\nfunction legendComponent(scrollLegendComponent, scaleModifier) {\n    let settings = {};\n    let scale = null;\n    let color = null;\n\n    function legend(container) {\n        if (scale && scale.range().length > 1) {\n            const scrollLegend = scrollLegendComponent(settings);\n            scrollLegend\n                .scale(scale)\n                .orient(\"vertical\")\n                .on(\"cellclick\", function(d) {\n                    settings.hideKeys = settings.hideKeys || [];\n                    if (settings.hideKeys.includes(d)) {\n                        settings.hideKeys = settings.hideKeys.filter(k => k !== d);\n                    } else {\n                        settings.hideKeys.push(d);\n                    }\n\n                    getChartElement(this).draw();\n                });\n\n            scrollLegend.labels(options => {\n                const parts = options.domain[options.i].split(\"|\");\n                return settings.mainValues.length <= 1 && parts.length > 1 ? parts.slice(0, parts.length - 1).join(\"|\") : options.domain[options.i];\n            });\n\n            const legendSelection = getOrCreateElement(container, \"div.legend-container\", () => container.append(\"div\"));\n\n            scrollLegend.decorate(selection => {\n                const isHidden = data => settings.hideKeys && settings.hideKeys.includes(data);\n\n                const cells = selection\n                    .select(\"g.legendCells\")\n                    .attr(\"transform\", \"translate(20,20)\")\n                    .selectAll(\"g.cell\");\n\n                cells.classed(\"hidden\", isHidden);\n                cells.append(\"title\").html(d => d);\n\n                if (color) {\n                    cells\n                        .select(\"path\")\n                        .style(\"fill\", d => (isHidden(d) ? null : color(d)))\n                        .style(\"stroke\", d => (isHidden(d) ? null : withoutOpacity(color(d))));\n                }\n            });\n\n            // render the legend\n            legendSelection\n                .attr(\"class\", \"legend-container\")\n                .attr(\"borderbox-on-hover\", true)\n                .style(\"z-index\", \"2\")\n                .call(scrollLegend);\n        }\n    }\n\n    legend.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return legend;\n    };\n\n    legend.scale = (...args) => {\n        if (!args.length) {\n            return scale;\n        }\n        scale = scaleModifier ? scaleModifier(args[0]) : args[0];\n        return legend;\n    };\n\n    legend.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return legend;\n    };\n\n    return legend;\n}\n"],"file":"legend.js"}