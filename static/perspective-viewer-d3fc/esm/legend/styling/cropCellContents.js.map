{"version":3,"sources":["../../../../src/js/legend/styling/cropCellContents.js"],"names":["isElementOverflowing","cropCellContents","legendDiv","legendCells","select","legendDivRect","node","getBoundingClientRect","svg","selectAll","text","d","i","nodes","cell","cutoffCharIndex","getCutoffCharacterIndex","substring","cellRect","cutoffCoord","createSVGPoint","fuzzyFactor","x","right","left","y","getCharNumAtPosition"],"mappings":"AAAA;;;;;;;;AASA,SAAQA,oBAAR,QAAmC,mBAAnC;AAEA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,QAAMC,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,eAAjB,CAApB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,IAAV,GAAiBC,qBAAjB,EAAtB;;AAEA,MAAI,CAACP,oBAAoB,CAACK,aAAD,EAAgBF,WAAW,CAACG,IAAZ,GAAmBC,qBAAnB,EAAhB,CAAzB,EAAsF;AAClF;AACH;;AAED,QAAMC,GAAG,GAAGN,SAAS,CAACE,MAAV,CAAiB,SAAjB,CAAZ;AAEAD,EAAAA,WAAW,CAACM,SAAZ,CAAsB,QAAtB,EAAgCC,IAAhC,CAAqC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,KAAiB;AAClD,UAAMC,IAAI,GAAGD,KAAK,CAACD,CAAD,CAAlB;;AACA,QAAIZ,oBAAoB,CAACK,aAAD,EAAgBS,IAAI,CAACP,qBAAL,EAAhB,CAAxB,EAAuE;AACnE,YAAMQ,eAAe,GAAGC,uBAAuB,CAACF,IAAD,EAAON,GAAP,EAAYH,aAAZ,CAA/C;AACA,aAAQ,GAAEM,CAAC,CAACM,SAAF,CAAY,CAAZ,EAAeF,eAAe,GAAG,CAAjC,CAAoC,KAA9C;AACH,KAHD,MAGO;AACH,aAAOJ,CAAP;AACH;AACJ,GARD;AASH;;AAED,SAASK,uBAAT,CAAiCF,IAAjC,EAAuCN,GAAvC,EAA4CH,aAA5C,EAA2D;AACvD,QAAMa,QAAQ,GAAGJ,IAAI,CAACP,qBAAL,EAAjB;AACA,QAAMY,WAAW,GAAGX,GAAG,CAACF,IAAJ,GAAWc,cAAX,EAApB,CAFuD,CAGvD;;AACA,QAAMC,WAAW,GAAG,CAApB;AACAF,EAAAA,WAAW,CAACG,CAAZ,GAAgBjB,aAAa,CAACkB,KAAd,GAAsBL,QAAQ,CAACM,IAA/B,GAAsCH,WAAtD;AACAF,EAAAA,WAAW,CAACM,CAAZ,GAAgB,CAAhB;AACA,SAAOX,IAAI,CAACY,oBAAL,CAA0BP,WAA1B,CAAP;AACH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {isElementOverflowing} from \"../../utils/utils\";\n\nexport function cropCellContents(legendDiv) {\n    const legendCells = legendDiv.select(\"g.legendCells\");\n    const legendDivRect = legendDiv.node().getBoundingClientRect();\n\n    if (!isElementOverflowing(legendDivRect, legendCells.node().getBoundingClientRect())) {\n        return;\n    }\n\n    const svg = legendDiv.select(\".legend\");\n\n    legendCells.selectAll(\".label\").text((d, i, nodes) => {\n        const cell = nodes[i];\n        if (isElementOverflowing(legendDivRect, cell.getBoundingClientRect())) {\n            const cutoffCharIndex = getCutoffCharacterIndex(cell, svg, legendDivRect);\n            return `${d.substring(0, cutoffCharIndex - 3)}...`;\n        } else {\n            return d;\n        }\n    });\n}\n\nfunction getCutoffCharacterIndex(cell, svg, legendDivRect) {\n    const cellRect = cell.getBoundingClientRect();\n    const cutoffCoord = svg.node().createSVGPoint();\n    // Sometimes the svg point can _just_ miss a character, so we fuzz it.\n    const fuzzyFactor = 3;\n    cutoffCoord.x = legendDivRect.right - cellRect.left - fuzzyFactor;\n    cutoffCoord.y = 0;\n    return cell.getCharNumAtPosition(cutoffCoord);\n}\n"],"file":"cropCellContents.js"}