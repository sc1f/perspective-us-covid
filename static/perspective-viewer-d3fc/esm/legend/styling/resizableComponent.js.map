{"version":3,"sources":["../../../../src/js/legend/styling/resizableComponent.js"],"names":["d3","enforceContainerBoundaries","horizontalHandleClass","verticalHandleClass","cornerHandleClass","handlesContainerId","fillOpacity","resizeEvent","resizableComponent","handleWidthPx","zIndex","settings","minDimensionsPx","height","width","maxDimensionsPx","callbacks","executeCallbacks","event","direction","filter","callback","forEach","execute","resizable","container","handlesContainerExists","dragHelper","left","horizontal","dragLeft","vertical","top","dragTop","right","dragRight","bottom","dragBottom","topleft","topright","bottomright","bottomleft","containerNode","node","legend","style","containerRect","getBoundingClientRect","handles","append","attr","handlesGroup","isVertical","d","xCoordHelper","yCoordHelper","edgeHandles","leftHandle","topHandle","rightHandle","bottomHandle","map","edge","call","drag","on","concatCornerEdges","corner","cornerCursorHelper","cornerHandles","topLeftHandle","topRightHandle","bottomRightHandle","bottomLeftHandle","enforceMaxDimensions","pinCorners","offset","enforceDistToParallelBarConstraints","x","y","offsetLeft","offsetWidth","updateSettings","resizeAndRelocateHandles","dx","pointerFallenBehindAbsoluteCoordinates","offsetTop","offsetHeight","dy","dimensions","handle","dimension","axis","extendHandlesBox","pinHandleToHandleBoxEdge","extendPerpendicularHandles","relativeHandle","push","input","args","length","minWidth","Math","max","minHeight","handleWidth","maxWidth","min","maxHeight","becauseCrossedMinSize","Number","becauseExitedCoordinateSpace","dragHandleContainer","operatorFunction","anticipatedDimension","difference","orientationClass","perpendicularHandles","selectAll","each","_","i","nodes","handleNode","handleElement","select","size"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {enforceContainerBoundaries} from \"./enforceContainerBoundaries\";\n\nconst horizontalHandleClass = \"horizontal-drag-handle\";\nconst verticalHandleClass = \"vertical-drag-handle\";\nconst cornerHandleClass = \"corner-drag-handle\";\n\nconst handlesContainerId = \"dragHandles\";\n\nconst fillOpacity = 0.0;\nconst resizeEvent = \"resize\";\n\nexport function resizableComponent() {\n    let handleWidthPx = 9;\n    let zIndex = 3;\n    let settings = null;\n    const minDimensionsPx = {height: 100, width: 100};\n    const maxDimensionsPx = {height: null, width: null};\n\n    const callbacks = [];\n    const executeCallbacks = (event, direction) => callbacks.filter(callback => callback.event === event).forEach(callback => callback.execute(direction));\n\n    const resizable = container => {\n        if (handlesContainerExists(container)) {\n            return;\n        }\n\n        const dragHelper = {\n            left: () => executeCallbacks(resizeEvent, {horizontal: dragLeft(d3.event), vertical: false}),\n            top: () => executeCallbacks(resizeEvent, {horizontal: false, vertical: dragTop(d3.event)}),\n            right: () => executeCallbacks(resizeEvent, {horizontal: dragRight(d3.event), vertical: false}),\n            bottom: () => executeCallbacks(resizeEvent, {horizontal: false, vertical: dragBottom(d3.event)}),\n            topleft: () => executeCallbacks(resizeEvent, {horizontal: dragLeft(d3.event), vertical: dragTop(d3.event)}),\n            topright: () => executeCallbacks(resizeEvent, {horizontal: dragRight(d3.event), vertical: dragTop(d3.event)}),\n            bottomright: () => executeCallbacks(resizeEvent, {horizontal: dragRight(d3.event), vertical: dragBottom(d3.event)}),\n            bottomleft: () => executeCallbacks(resizeEvent, {horizontal: dragLeft(d3.event), vertical: dragBottom(d3.event)})\n        };\n\n        const containerNode = container.node();\n        if (settings.legend) {\n            containerNode.style.height = settings.legend.height;\n            containerNode.style.width = settings.legend.width;\n        }\n\n        const containerRect = containerNode.getBoundingClientRect();\n        const handles = container\n            .append(\"svg\")\n            .attr(\"id\", handlesContainerId)\n            .attr(\"width\", containerRect.width)\n            .attr(\"height\", containerRect.height);\n        const handlesGroup = handles.append(\"g\");\n\n        const isVertical = d => d === \"left\" || d === \"right\";\n        const xCoordHelper = {left: 0, top: handleWidthPx, right: containerRect.width - handleWidthPx, bottom: handleWidthPx};\n        const yCoordHelper = {left: handleWidthPx, top: 0, right: handleWidthPx, bottom: containerRect.height - handleWidthPx};\n        const edgeHandles = [\"left\", \"top\", \"right\", \"bottom\"];\n        const [leftHandle, topHandle, rightHandle, bottomHandle] = edgeHandles.map(edge =>\n            handlesGroup\n                .append(\"rect\")\n                .attr(\"id\", `drag${edge}`)\n                .attr(\"class\", isVertical(edge) ? verticalHandleClass : horizontalHandleClass)\n                .attr(\"y\", yCoordHelper[edge])\n                .attr(\"x\", xCoordHelper[edge])\n                .attr(\"height\", isVertical(edge) ? containerRect.height - handleWidthPx * 2 : handleWidthPx)\n                .attr(\"width\", isVertical(edge) ? handleWidthPx : containerRect.width - handleWidthPx * 2)\n                .attr(\"fill\", isVertical(edge) ? \"lightgreen\" : \"lightblue\")\n                .attr(\"fill-opacity\", fillOpacity)\n                .style(\"z-index\", zIndex)\n                .attr(\"cursor\", isVertical(edge) ? \"ew-resize\" : \"ns-resize\")\n                .call(d3.drag().on(\"drag\", dragHelper[edge]))\n        );\n\n        const concatCornerEdges = corner => `${corner[0]}${corner[1]}`;\n        const cornerCursorHelper = {topleft: \"nwse\", topright: \"nesw\", bottomright: \"nwse\", bottomleft: \"nesw\"};\n        const cornerHandles = [\n            [\"top\", \"left\"],\n            [\"top\", \"right\"],\n            [\"bottom\", \"right\"],\n            [\"bottom\", \"left\"]\n        ];\n        const [topLeftHandle, topRightHandle, bottomRightHandle, bottomLeftHandle] = cornerHandles.map(corner =>\n            handlesGroup\n                .append(\"rect\")\n                .attr(\"id\", `drag${concatCornerEdges(corner)}`)\n                .attr(\"class\", `${cornerHandleClass} ${corner[0]} ${corner[1]}`)\n                .attr(\"height\", handleWidthPx)\n                .attr(\"width\", handleWidthPx)\n                .attr(\"fill\", \"red\")\n                .attr(\"fill-opacity\", fillOpacity)\n                .style(\"z-index\", zIndex)\n                .attr(\"cursor\", `${cornerCursorHelper[concatCornerEdges(corner)]}-resize`)\n                .call(d3.drag().on(\"drag\", dragHelper[concatCornerEdges(corner)]))\n        );\n\n        enforceMaxDimensions(\"height\", \"y\", bottomHandle);\n        enforceMaxDimensions(\"width\", \"x\", rightHandle);\n        pinCorners(handles);\n\n        function dragLeft(event) {\n            const offset = enforceDistToParallelBarConstraints(enforceContainerBoundaries(leftHandle.node(), event.x, 0).x, handles, \"width\", (x, y) => x - y);\n            containerNode.style.left = `${containerNode.offsetLeft + offset}px`;\n            containerNode.style.width = `${containerNode.offsetWidth - offset}px`;\n            updateSettings();\n            return resizeAndRelocateHandles(rightHandle, offset, \"width\", \"x\");\n        }\n\n        function dragRight(event) {\n            const offset = -enforceDistToParallelBarConstraints(enforceContainerBoundaries(rightHandle.node(), event.dx, 0).x, handles, \"width\", (x, y) => x + y);\n            if (pointerFallenBehindAbsoluteCoordinates(offset, \"x\", rightHandle, event)) return false;\n            containerNode.style.width = `${containerNode.offsetWidth - offset}px`;\n            updateSettings();\n            return resizeAndRelocateHandles(rightHandle, offset, \"width\", \"x\");\n        }\n\n        function dragTop(event) {\n            const offset = enforceDistToParallelBarConstraints(enforceContainerBoundaries(topHandle.node(), 0, event.y).y, handles, \"height\", (x, y) => x - y);\n            containerNode.style.top = `${containerNode.offsetTop + offset}px`;\n            containerNode.style.height = `${containerNode.offsetHeight - offset}px`;\n            updateSettings();\n            return resizeAndRelocateHandles(bottomHandle, offset, \"height\", \"y\");\n        }\n\n        function dragBottom(event) {\n            const offset = -enforceDistToParallelBarConstraints(enforceContainerBoundaries(bottomHandle.node(), 0, event.dy).y, handles, \"height\", (x, y) => x + y);\n            if (pointerFallenBehindAbsoluteCoordinates(offset, \"y\", bottomHandle, event)) return false;\n            containerNode.style.height = `${containerNode.offsetHeight - offset}px`;\n            updateSettings();\n            return resizeAndRelocateHandles(bottomHandle, offset, \"height\", \"y\");\n        }\n\n        function updateSettings() {\n            const dimensions = {\n                top: containerNode.style.top,\n                left: containerNode.style.left,\n                height: containerNode.style.height,\n                width: containerNode.style.width\n            };\n            settings.legend = {...settings.legend, ...dimensions};\n        }\n\n        function resizeAndRelocateHandles(handle, offset, dimension, axis) {\n            extendHandlesBox(handles, dimension, offset);\n            pinHandleToHandleBoxEdge(handle, axis, offset);\n            extendPerpendicularHandles(handles, offset, dimension, dimension === \"height\" ? verticalHandleClass : horizontalHandleClass);\n            pinCorners(handles);\n            return offset != 0;\n        }\n\n        function pinCorners(handles) {\n            topLeftHandle.attr(\"y\", 0, \"x\", 0);\n            topRightHandle.attr(\"y\", 0).attr(\"x\", handles.attr(\"width\") - handleWidthPx);\n            bottomRightHandle.attr(\"y\", handles.attr(\"height\") - handleWidthPx).attr(\"x\", handles.attr(\"width\") - handleWidthPx);\n            bottomLeftHandle.attr(\"y\", handles.attr(\"height\") - handleWidthPx).attr(\"x\", 0);\n        }\n\n        function enforceMaxDimensions(dimension, axis, relativeHandle) {\n            if (!!maxDimensionsPx[dimension] && maxDimensionsPx[dimension] < containerRect[dimension]) {\n                containerNode.style[dimension] = `${maxDimensionsPx[dimension]}px`;\n                resizeAndRelocateHandles(relativeHandle, containerRect[dimension] - maxDimensionsPx[dimension], dimension, axis);\n            }\n        }\n    };\n\n    resizable.on = (event, callback) => {\n        callbacks.push({event: event, execute: callback});\n        return resizable;\n    };\n\n    resizable.zIndex = input => {\n        zIndex = input;\n        return resizable;\n    };\n\n    resizable.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return resizable;\n    };\n\n    resizable.minWidth = input => {\n        minDimensionsPx.width = input;\n        if (!!maxDimensionsPx.width) maxDimensionsPx.width = Math.max(minDimensionsPx.width, maxDimensionsPx.width);\n        return resizable;\n    };\n\n    resizable.minHeight = input => {\n        minDimensionsPx.height = input;\n        if (!!maxDimensionsPx.height) maxDimensionsPx.height = Math.max(minDimensionsPx.height, maxDimensionsPx.height);\n        return resizable;\n    };\n\n    resizable.handleWidth = input => {\n        handleWidthPx = input;\n        return resizable;\n    };\n\n    resizable.maxWidth = input => {\n        maxDimensionsPx.width = input;\n        minDimensionsPx.width = Math.min(minDimensionsPx.width, maxDimensionsPx.width);\n        return resizable;\n    };\n\n    resizable.maxHeight = input => {\n        maxDimensionsPx.height = input;\n        minDimensionsPx.height = Math.min(minDimensionsPx.height, maxDimensionsPx.height);\n        return resizable;\n    };\n\n    function pointerFallenBehindAbsoluteCoordinates(offset, axis, handle, event) {\n        const becauseCrossedMinSize = (offset, axis, handle, event) => offset < 0 && event[axis] < Number(handle.attr(axis));\n        const becauseExitedCoordinateSpace = (offset, axis, handle, event) => offset > 0 && event[axis] > Number(handle.attr(axis));\n        return becauseCrossedMinSize(offset, axis, handle, event) || becauseExitedCoordinateSpace(offset, axis, handle, event);\n    }\n\n    function enforceDistToParallelBarConstraints(offset, dragHandleContainer, dimension, operatorFunction) {\n        const anticipatedDimension = operatorFunction(Number(dragHandleContainer.attr(dimension)), offset);\n        if (anticipatedDimension < minDimensionsPx[dimension]) {\n            const difference = minDimensionsPx[dimension] - anticipatedDimension;\n            return operatorFunction(offset, difference);\n        }\n        if (!!maxDimensionsPx[dimension] && anticipatedDimension > maxDimensionsPx[dimension]) {\n            const difference = maxDimensionsPx[dimension] - anticipatedDimension;\n            return operatorFunction(offset, difference);\n        }\n        return offset;\n    }\n\n    return resizable;\n}\n\n// \"dimension\" referring to width or height\nconst extendPerpendicularHandles = (handles, offset, dimension, orientationClass) => {\n    const perpendicularHandles = handles.selectAll(`.${orientationClass}`);\n    perpendicularHandles.each((_, i, nodes) => {\n        const handleNode = nodes[i];\n        const handleElement = d3.select(handleNode);\n        handleElement.attr(dimension, handleNode.getBoundingClientRect()[dimension] - offset);\n    });\n};\n\nconst handlesContainerExists = container => container.select(`#${handlesContainerId}`).size() > 0;\n\nconst pinHandleToHandleBoxEdge = (handle, axis, offset) => handle.attr(axis, Number(handle.attr(axis)) - offset);\n\nconst extendHandlesBox = (handles, dimension, offset) => handles.attr(dimension, handles.node().getBoundingClientRect()[dimension] - offset);\n"],"file":"resizableComponent.js"}