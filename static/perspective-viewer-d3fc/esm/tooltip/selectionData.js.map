{"version":3,"sources":["../../../src/js/tooltip/selectionData.js"],"names":["toValue","type","value","Date","parseInt","parseFloat","getGroupValues","data","settings","crossValues","length","groupValues","crossValue","split","key","map","cross","i","name","getSplitValues","splitValues","mainValue","getDataValues","mainValues","baseValue","main","colorValue"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nfunction toValue(type, value) {\r\n    switch (type) {\r\n        case \"date\":\r\n        case \"datetime\":\r\n            return value instanceof Date ? value : new Date(parseInt(value));\r\n        case \"integer\":\r\n            return parseInt(value, 10);\r\n        case \"float\":\r\n            return parseFloat(value);\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getGroupValues(data, settings) {\r\n    if (settings.crossValues.length === 0) return [];\r\n    const groupValues = (data.crossValue.split ? data.crossValue.split(\"|\") : [data.crossValue]) || [data.key];\r\n    return groupValues.map((cross, i) => ({name: settings.crossValues[i].name, value: toValue(settings.crossValues[i].type, cross)}));\r\n}\r\n\r\nexport function getSplitValues(data, settings) {\r\n    if (settings.splitValues.length === 0) return [];\r\n    const splitValues = data.key ? data.key.split(\"|\") : data.mainValue.split ? data.mainValue.split(\"|\") : [data.mainValue];\r\n    return settings.splitValues.map((split, i) => ({name: split.name, value: toValue(split.type, splitValues[i])}));\r\n}\r\n\r\nexport function getDataValues(data, settings) {\r\n    if (settings.mainValues.length > 1) {\r\n        if (data.mainValue) {\r\n            return [\r\n                {\r\n                    name: data.key,\r\n                    value: data.mainValue - (data.baseValue || 0)\r\n                }\r\n            ];\r\n        }\r\n        return settings.mainValues.map((main, i) => ({name: main.name, value: toValue(main.type, data.mainValues[i])}));\r\n    }\r\n    return [\r\n        {\r\n            name: settings.mainValues[0].name,\r\n            value: toValue(settings.mainValues[0].type, data.colorValue || data.mainValue - data.baseValue || data.mainValue || data.mainValues)\r\n        }\r\n    ];\r\n}\r\n"],"file":"selectionData.js"}