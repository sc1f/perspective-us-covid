{"version":3,"sources":["../../../src/js/zoom/zoomableChart.js"],"names":["d3","getOrCreateElement","template","chart","settings","xScale","xCopy","yScale","yCopy","bound","canvas","onChange","zoomableChart","selection","chartPlotArea","dateAxis","domain","Date","zoom","on","transform","event","k","x","y","applyTransform","call","noZoom","zoomControls","getZoomControls","style","select","zoomIdentity","oneYear","sixMonths","oneMonth","dateClick","endCalculation","start","end","xRange","range","yMiddle","reduce","a","b","translate","scale","setYear","getFullYear","setMonth","getMonth","oldDecorate","decorate","sel","data","plotArea","detail","width","height","initialTransform","args","length","zoomableScale","copy","yDomain","changeArgs","rescaleX","xDomain","yZoomDomain","rescaleY","container","append","attr","html","nice"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport * as d3 from \"d3\";\r\nimport {getOrCreateElement} from \"../utils/utils\";\r\nimport template from \"../../html/zoom-controls.html\";\r\n\r\nexport default () => {\r\n    let chart = null;\r\n    let settings = null;\r\n    let xScale = null;\r\n    let xCopy = null;\r\n    let yScale = null;\r\n    let yCopy = null;\r\n    let bound = false;\r\n    let canvas = false;\r\n    let onChange = () => {};\r\n\r\n    function zoomableChart(selection) {\r\n        const chartPlotArea = `d3fc-${canvas ? \"canvas\" : \"svg\"}.plot-area`;\r\n        if (xScale || yScale) {\r\n            const dateAxis = xCopy && xCopy.domain()[0] instanceof Date;\r\n            const zoom = d3.zoom().on(\"zoom\", () => {\r\n                const {transform} = d3.event;\r\n                settings.zoom = {\r\n                    k: transform.k,\r\n                    x: transform.x,\r\n                    y: transform.y\r\n                };\r\n\r\n                applyTransform(transform);\r\n\r\n                selection.call(chart);\r\n\r\n                const noZoom = transform.k === 1 && transform.x === 0 && transform.y === 0;\r\n\r\n                const zoomControls = getZoomControls(selection).style(\"display\", noZoom ? \"none\" : \"\");\r\n                zoomControls.select(\"#zoom-reset\").on(\"click\", () => selection.select(chartPlotArea).call(zoom.transform, d3.zoomIdentity));\r\n\r\n                const oneYear = zoomControls.select(\"#one-year\").style(\"display\", dateAxis ? \"\" : \"none\");\r\n                const sixMonths = zoomControls.select(\"#six-months\").style(\"display\", dateAxis ? \"\" : \"none\");\r\n                const oneMonth = zoomControls.select(\"#one-month\").style(\"display\", dateAxis ? \"\" : \"none\");\r\n                if (dateAxis) {\r\n                    const dateClick = endCalculation => () => {\r\n                        const start = new Date(xScale.domain()[0]);\r\n                        const end = new Date(start);\r\n                        endCalculation(start, end);\r\n\r\n                        const xRange = xCopy.range();\r\n                        const k = (xRange[1] - xRange[0]) / (xCopy(end) - xCopy(start));\r\n                        const x = -xCopy(start) * k;\r\n                        let y = 0;\r\n                        if (yScale) {\r\n                            const yMiddle = yScale.domain().reduce((a, b) => a + b) / 2;\r\n                            y = -yCopy(yMiddle) * k + yScale(yMiddle);\r\n                        }\r\n                        selection.select(chartPlotArea).call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(k));\r\n                    };\r\n\r\n                    oneYear.on(\r\n                        \"click\",\r\n                        dateClick((start, end) => end.setYear(start.getFullYear() + 1))\r\n                    );\r\n                    sixMonths.on(\r\n                        \"click\",\r\n                        dateClick((start, end) => end.setMonth(start.getMonth() + 6))\r\n                    );\r\n                    oneMonth.on(\r\n                        \"click\",\r\n                        dateClick((start, end) => end.setMonth(start.getMonth() + 1))\r\n                    );\r\n                }\r\n            });\r\n\r\n            const oldDecorate = chart.decorate();\r\n            chart.decorate((sel, data) => {\r\n                oldDecorate(sel, data);\r\n                if (!bound) {\r\n                    bound = true;\r\n                    // add the zoom interaction on the enter selection\r\n                    const plotArea = sel.select(chartPlotArea);\r\n\r\n                    plotArea\r\n                        .on(\"measure.zoom-range\", () => {\r\n                            if (xCopy) xCopy.range([0, d3.event.detail.width]);\r\n                            if (yCopy) yCopy.range([0, d3.event.detail.height]);\r\n\r\n                            if (settings.zoom) {\r\n                                const initialTransform = d3.zoomIdentity.translate(settings.zoom.x, settings.zoom.y).scale(settings.zoom.k);\r\n                                plotArea.call(zoom.transform, initialTransform);\r\n                            }\r\n                        })\r\n                        .call(zoom);\r\n                }\r\n            });\r\n        }\r\n\r\n        selection.call(chart);\r\n    }\r\n\r\n    zoomableChart.chart = (...args) => {\r\n        if (!args.length) {\r\n            return chart;\r\n        }\r\n        chart = args[0];\r\n        return zoomableChart;\r\n    };\r\n\r\n    zoomableChart.settings = (...args) => {\r\n        if (!args.length) {\r\n            return settings;\r\n        }\r\n        settings = args[0];\r\n        return zoomableChart;\r\n    };\r\n\r\n    zoomableChart.xScale = (...args) => {\r\n        if (!args.length) {\r\n            return xScale;\r\n        }\r\n        xScale = zoomableScale(args[0]);\r\n        xCopy = xScale ? xScale.copy() : null;\r\n        return zoomableChart;\r\n    };\r\n\r\n    zoomableChart.yScale = (...args) => {\r\n        if (!args.length) {\r\n            return yScale;\r\n        }\r\n        yScale = zoomableScale(args[0]);\r\n        yCopy = yScale ? yScale.copy() : null;\r\n        if (yCopy) {\r\n            const yDomain = yCopy.domain();\r\n            yCopy.domain([yDomain[1], yDomain[0]]);\r\n        }\r\n        return zoomableChart;\r\n    };\r\n\r\n    zoomableChart.canvas = (...args) => {\r\n        if (!args.length) {\r\n            return canvas;\r\n        }\r\n        canvas = args[0];\r\n        return zoomableChart;\r\n    };\r\n\r\n    zoomableChart.onChange = (...args) => {\r\n        if (!args.length) {\r\n            return onChange;\r\n        }\r\n        onChange = args[0];\r\n        return zoomableChart;\r\n    };\r\n\r\n    const applyTransform = transform => {\r\n        const changeArgs = {...transform};\r\n        if (xScale) {\r\n            xScale.domain(transform.rescaleX(xCopy).domain());\r\n            changeArgs.xDomain = xScale.domain();\r\n        }\r\n\r\n        if (yScale) {\r\n            const yZoomDomain = transform.rescaleY(yCopy).domain();\r\n            yScale.domain([yZoomDomain[1], yZoomDomain[0]]);\r\n            changeArgs.yDomain = yScale.domain();\r\n        }\r\n\r\n        onChange(changeArgs);\r\n    };\r\n\r\n    const getZoomControls = container =>\r\n        getOrCreateElement(container, \".zoom-controls\", () =>\r\n            container\r\n                .append(\"div\")\r\n                .attr(\"class\", \"zoom-controls\")\r\n                .style(\"display\", \"none\")\r\n                .html(template)\r\n        );\r\n\r\n    const zoomableScale = scale => {\r\n        if (scale && scale.nice) {\r\n            return scale;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return zoomableChart;\r\n};\r\n"],"file":"zoomableChart.js"}