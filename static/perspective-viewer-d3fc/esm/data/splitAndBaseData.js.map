{"version":3,"sources":["../../../src/js/data/splitAndBaseData.js"],"names":["labelFunction","splitAndBaseData","settings","data","labelfn","map","col","i","baseValues","Object","keys","filter","key","labels","split","label","length","baseValue","value","crossValue","mainValue","row"],"mappings":"AAAA;;;;;;;;AAQA,SAAQA,aAAR,QAA4B,mBAA5B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,IAApC,EAA0C;AAC7C,QAAMC,OAAO,GAAGJ,aAAa,CAACE,QAAD,CAA7B;AAEA,SAAOC,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxB,UAAMC,UAAU,GAAG,EAAnB;AAEA,WAAOC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EACFK,MADE,CACKC,GAAG,IAAIA,GAAG,KAAK,cADpB,EAEFP,GAFE,CAEEO,GAAG,IAAI;AACR;AACA,YAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAf,CAFQ,CAGR;;AACA,YAAMC,KAAK,GAAGF,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAApB;AACA,YAAMC,SAAS,GAAGT,UAAU,CAACO,KAAD,CAAV,IAAqB,CAAvC;AACA,YAAMG,KAAK,GAAGD,SAAS,GAAGX,GAAG,CAACM,GAAD,CAA7B;AACAJ,MAAAA,UAAU,CAACO,KAAD,CAAV,GAAoBG,KAApB;AAEA,aAAO;AACHN,QAAAA,GADG;AAEHO,QAAAA,UAAU,EAAEf,OAAO,CAACE,GAAD,EAAMC,CAAN,CAFhB;AAGHa,QAAAA,SAAS,EAAEF,KAHR;AAIHD,QAAAA,SAAS,EAAEA,SAJR;AAKHI,QAAAA,GAAG,EAAEf;AALF,OAAP;AAOH,KAlBE,CAAP;AAmBH,GAtBM,CAAP;AAuBH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\n\nexport function splitAndBaseData(settings, data) {\n    const labelfn = labelFunction(settings);\n\n    return data.map((col, i) => {\n        const baseValues = {};\n\n        return Object.keys(col)\n            .filter(key => key !== \"__ROW_PATH__\")\n            .map(key => {\n                // Keys are of the form \"split1|split2|aggregate\"\n                const labels = key.split(\"|\");\n                // label=\"aggregate\"\n                const label = labels[labels.length - 1];\n                const baseValue = baseValues[label] || 0;\n                const value = baseValue + col[key];\n                baseValues[label] = value;\n\n                return {\n                    key,\n                    crossValue: labelfn(col, i),\n                    mainValue: value,\n                    baseValue: baseValue,\n                    row: col\n                };\n            });\n    });\n}\n"],"file":"splitAndBaseData.js"}