{"version":3,"sources":["../../../src/js/data/heatmapData.js"],"names":["axisType","AXIS_TYPES","labelFunction","heatmapData","settings","data","labelfn","mainType","excludeType","linear","settingName","forEach","col","i","crossValue","Object","keys","filter","key","mainValue","getMainValues","push","time","Date","colorValue","row","labels","split","pop","join"],"mappings":"AAAA;;;;;;;;AAQA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AACxC,QAAMC,OAAO,GAAGJ,aAAa,CAACE,QAAD,CAA7B;AACA,QAAMG,QAAQ,GAAGP,QAAQ,CAACI,QAAD,CAAR,CACZI,WADY,CACAP,UAAU,CAACQ,MADX,EAEZC,WAFY,CAEA,aAFA,GAAjB;AAIA,QAAMP,WAAW,GAAG,EAApB;AAEAE,EAAAA,IAAI,CAACM,OAAL,CAAa,CAACC,GAAD,EAAMC,CAAN,KAAY;AACrB,UAAMC,UAAU,GAAGR,OAAO,CAACM,GAAD,EAAMC,CAAN,CAA1B;AACAE,IAAAA,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EACKK,MADL,CACYC,GAAG,IAAIA,GAAG,KAAK,cAD3B,EAEKP,OAFL,CAEaO,GAAG,IAAI;AACZ,YAAMC,SAAS,GAAGC,aAAa,CAACF,GAAD,CAA/B;AACAf,MAAAA,WAAW,CAACkB,IAAZ,CAAiB;AACbP,QAAAA,UAAU,EAAEA,UADC;AAEbK,QAAAA,SAAS,EAAEZ,QAAQ,KAAKN,UAAU,CAACqB,IAAxB,GAA+B,IAAIC,IAAJ,CAASJ,SAAT,CAA/B,GAAqDA,SAFnD;AAGbK,QAAAA,UAAU,EAAEZ,GAAG,CAACM,GAAD,CAHF;AAIbO,QAAAA,GAAG,EAAEb;AAJQ,OAAjB;AAMH,KAVL;AAWH,GAbD;AAeA,SAAOT,WAAP;AACH;;AAED,SAASiB,aAAT,CAAuBF,GAAvB,EAA4B;AACxB;AACA;AACA,QAAMQ,MAAM,GAAGR,GAAG,CAACS,KAAJ,CAAU,GAAV,CAAf;AACAD,EAAAA,MAAM,CAACE,GAAP;AACA,SAAOF,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAP;AACH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {axisType} from \"../axis/axisType\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {labelFunction} from \"../axis/axisLabel\";\n\nexport function heatmapData(settings, data) {\n    const labelfn = labelFunction(settings);\n    const mainType = axisType(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"splitValues\")();\n\n    const heatmapData = [];\n\n    data.forEach((col, i) => {\n        const crossValue = labelfn(col, i);\n        Object.keys(col)\n            .filter(key => key !== \"__ROW_PATH__\")\n            .forEach(key => {\n                const mainValue = getMainValues(key);\n                heatmapData.push({\n                    crossValue: crossValue,\n                    mainValue: mainType === AXIS_TYPES.time ? new Date(mainValue) : mainValue,\n                    colorValue: col[key],\n                    row: col\n                });\n            });\n    });\n\n    return heatmapData;\n}\n\nfunction getMainValues(key) {\n    // Key format is based on \"Split By\" values plus the value label at the end\n    // val1|val2|....|label\n    const labels = key.split(\"|\");\n    labels.pop();\n    return labels.join(\"|\");\n}\n"],"file":"heatmapData.js"}