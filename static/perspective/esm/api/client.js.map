{"version":3,"sources":["../../../src/js/api/client.js"],"names":["table","proxy_table","proxy_view","bindall","Client","constructor","_initialized","_worker","initialized","value","transferable","msg_id","handlers","messages","unsubscribe","cmd","handler","key","Object","keys","resolve","post","msg","reject","keep_alive","id","send","push","initialize_profile_thread","Error","open_table","name","open_view","_handle","e","document","window","undefined","event","createEvent","initEvent","dispatchEvent","msgs","m","hasOwnProperty","data","error","options","terminate"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {table, proxy_table} from \"./table_api.js\";\nimport {proxy_view} from \"./view_api.js\";\nimport {bindall} from \"../utils.js\";\n\n/**\n * Perspective's worker API handles and processes asynchronous messages,\n * interfacing with the Perspective host class.  Child classes must implement\n * the `send()` interface, which defines how messages are dispatched in\n * different contexts.  `handlers` is a dictionary of resolve/reject callbacks\n * for each method the worker receives.\n *\n * @export\n */\nexport class Client {\n    constructor() {\n        this._initialized = false;\n        this._worker = {\n            initialized: {value: false},\n            transferable: false,\n            msg_id: 0,\n            handlers: {},\n            messages: []\n        };\n        bindall(this);\n    }\n\n    /**\n     * Remove a listener for a Perspective-generated event.\n     */\n    unsubscribe(cmd, handler) {\n        for (let key of Object.keys(this._worker.handlers)) {\n            if (this._worker.handlers[key].resolve === handler) {\n                delete this._worker.handlers[key];\n            }\n        }\n    }\n\n    /**\n     * Process an asynchronous message.\n     */\n    post(msg, resolve, reject, keep_alive = false) {\n        if (resolve || reject) {\n            this._worker.handlers[++this._worker.msg_id] = {resolve, reject, keep_alive};\n        }\n        msg.id = this._worker.msg_id;\n        if (this._worker.initialized.value) {\n            this.send(msg);\n        } else {\n            this._worker.messages.push(() => this.send(msg));\n        }\n    }\n\n    initialize_profile_thread() {\n        if (this._worker.initialized.value) {\n            this.send({id: -1, cmd: \"init_profile_thread\"});\n        } else {\n            this._worker.messages.push(() => this.send({id: -1, cmd: \"init_profile_thread\"}));\n        }\n    }\n\n    /**\n     * Must be implemented in order to transport commands to the server.\n     */\n    send() {\n        throw new Error(\"send() not implemented\");\n    }\n\n    /**\n     * Given the name of a table that is hosted on the server (e.g. using\n     * `perspective-python` or `perspective` in NodeJS), return a `table`\n     * instance that sends all operations and instructions to the `table` on the\n     * server.\n     *\n     * @param {string} name\n     */\n    open_table(name) {\n        return new proxy_table(this, name);\n    }\n\n    open_view(name) {\n        return new proxy_view(this, name);\n    }\n\n    /**\n     * Handle a command from Perspective. If the Client is not initialized,\n     * initialize it and dispatch the `perspective-ready` event.\n     *\n     * Otherwise, reject or resolve the incoming command.\n     */\n    _handle(e) {\n        if (!this._worker.initialized.value) {\n            if (!this._initialized && typeof document !== \"undefined\" && document && typeof window !== undefined && window) {\n                try {\n                    const event = document.createEvent(\"Event\");\n                    event.initEvent(\"perspective-ready\", false, true);\n                    window.dispatchEvent(event);\n                } catch (e) {}\n                this._initialized = true;\n            }\n\n            const msgs = this._worker.messages;\n            this._worker.initialized.value = true;\n            this._worker.messages = [];\n\n            if (msgs) {\n                for (const m in msgs) {\n                    if (msgs.hasOwnProperty(m)) {\n                        msgs[m]();\n                    }\n                }\n            }\n        }\n        if (e.data.id) {\n            var handler = this._worker.handlers[e.data.id];\n            if (handler) {\n                if (e.data.error) {\n                    handler.reject(e.data.error);\n                } else {\n                    handler.resolve(e.data.data);\n                }\n                if (!handler.keep_alive) {\n                    delete this._worker.handlers[e.data.id];\n                }\n            }\n        }\n    }\n\n    table(data, options) {\n        return new table(this, data, options || {});\n    }\n\n    terminate() {\n        this._worker.terminate();\n        this._worker = undefined;\n    }\n}\n"],"file":"client.js"}