{"version":3,"sources":["../../../src/js/api/table_api.js"],"names":["unsubscribe","subscribe","async_queue","view","bindall","table","worker","data","options","_worker","name","Math","random","_name","to_arrow","msg","cmd","args","post","then","arrow","on_update","update","mode","prototype","type","proxy_table","config","compute","schema","computed_schema","get_computation_input_types","get_computed_functions","is_valid_filter","size","columns","clear","replace","delete","on_delete","remove","remove_delete","Promise","resolve","reject","method","execute","f","toString"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {unsubscribe, subscribe, async_queue} from \"./dispatch.js\";\nimport {view} from \"./view_api.js\";\nimport {bindall} from \"../utils.js\";\n\n/**\n * Construct a proxy for the table object by creating a \"table\" message and\n * sending it through the worker.\n *\n * @param {*} worker\n * @param {*} data\n * @param {*} options\n */\nexport function table(worker, data, options) {\n    this._worker = worker;\n    let name = options.name || Math.random() + \"\";\n    this._name = name;\n    bindall(this);\n    if (data.to_arrow) {\n        var msg = {\n            cmd: \"table\",\n            name: name,\n            args: [],\n            options: options || {}\n        };\n        this._worker.post(msg);\n        data.to_arrow().then(arrow => {\n            var msg = {\n                cmd: \"table\",\n                name: name,\n                args: [arrow],\n                options: options || {}\n            };\n            this._worker.post(msg);\n            data.on_update(this.update, {mode: \"row\"});\n        });\n    } else {\n        var msg = {\n            cmd: \"table\",\n            name: name,\n            args: [data],\n            options: options || {}\n        };\n        this._worker.post(msg);\n    }\n}\n\ntable.prototype.type = \"table\";\n\n/**\n * Create a reference to a Perspective table at `worker` for use by remote\n * clients.\n *\n * @param {worker} worker the Web Worker at which the table is located.\n * @param {String} name a unique name for the table.\n */\nexport function proxy_table(worker, name) {\n    this._worker = worker;\n    this._name = name;\n}\n\nproxy_table.prototype = table.prototype;\n\n// Dispatch table methods that create new objects to the worker\ntable.prototype.view = function(config) {\n    return new view(this._worker, this._name, config);\n};\n\n// Dispatch table methods that do not create new objects (getters, setters etc.)\n// to the queue for processing.\n\ntable.prototype.compute = async_queue(\"compute\", \"table_method\");\n\ntable.prototype.schema = async_queue(\"schema\", \"table_method\");\n\ntable.prototype.computed_schema = async_queue(\"computed_schema\", \"table_method\");\n\ntable.prototype.get_computation_input_types = async_queue(\"get_computation_input_types\", \"table_method\");\n\ntable.prototype.get_computed_functions = async_queue(\"get_computed_functions\", \"table_method\");\n\ntable.prototype.is_valid_filter = async_queue(\"is_valid_filter\", \"table_method\");\n\ntable.prototype.size = async_queue(\"size\", \"table_method\");\n\ntable.prototype.columns = async_queue(\"columns\", \"table_method\");\n\ntable.prototype.clear = async_queue(\"clear\", \"table_method\");\n\ntable.prototype.replace = async_queue(\"replace\", \"table_method\");\n\ntable.prototype.delete = async_queue(\"delete\", \"table_method\");\n\ntable.prototype.on_delete = subscribe(\"on_delete\", \"table_method\", true);\n\ntable.prototype.remove = async_queue(\"remove\", \"table_method\");\n\ntable.prototype.remove_delete = unsubscribe(\"remove_delete\", \"table_method\", true);\n\ntable.prototype.update = function(data) {\n    return new Promise((resolve, reject) => {\n        var msg = {\n            name: this._name,\n            cmd: \"table_method\",\n            method: \"update\",\n            args: [data]\n        };\n        this._worker.post(msg, resolve, reject, false);\n    });\n};\n\ntable.prototype.execute = function(f) {\n    var msg = {\n        cmd: \"table_execute\",\n        name: this._name,\n        f: f.toString()\n    };\n    this._worker.post(msg);\n};\n"],"file":"table_api.js"}