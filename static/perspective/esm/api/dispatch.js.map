{"version":3,"sources":["../../../src/js/api/dispatch.js"],"names":["__CALLBACK_CACHE__","WeakMap","__CALLBACK_INDEX__","unsubscribe","method","cmd","resolve","reject","args","Array","prototype","slice","call","arguments","length","i","splice","callback_id","get","delete","msg","name","_name","subscribe","_worker","post","set","async_queue","Promise","bind"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst __CALLBACK_CACHE__ = new WeakMap();\nlet __CALLBACK_INDEX__ = 0;\n\n/**\n * Unbind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function unsubscribe(method, cmd) {\n    return function() {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        const callback_id = __CALLBACK_CACHE__.get(resolve);\n        __CALLBACK_CACHE__.delete(resolve);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id\n        };\n        this._worker.post(msg, resolve, reject);\n        this._worker.unsubscribe(cmd, resolve);\n    };\n}\n\n/**\n * Bind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function subscribe(method, cmd) {\n    return function() {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        __CALLBACK_INDEX__++;\n        __CALLBACK_CACHE__.set(resolve, __CALLBACK_INDEX__);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id: __CALLBACK_INDEX__\n        };\n        this._worker.post(msg, resolve, reject, true);\n    };\n}\n\n/**\n * Add a method call to the queue, preparing it for execution.\n *\n * Returns a bound function that calls the desired method on the server.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function async_queue(method, cmd) {\n    return function() {\n        var args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        return new Promise(\n            function(resolve, reject) {\n                var msg = {\n                    cmd: cmd || \"view_method\",\n                    name: this._name,\n                    method: method,\n                    args: args,\n                    subscribe: false\n                };\n                this._worker.post(msg, resolve, reject);\n            }.bind(this)\n        );\n    };\n}\n"],"file":"dispatch.js"}