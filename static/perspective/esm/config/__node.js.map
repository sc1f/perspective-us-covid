{"version":3,"sources":["../../../src/js/config/__node.js"],"names":["NAMES","module","exports","default","get_config_file","REQUIRE","__non_webpack_require__","require","path","fs","root","curr","process","cwd","split","sep","length","name","candidate","join","existsSync","endsWith","json","JSON","parse","readFileSync","perspective","mod","pop"],"mappings":";;AAAA;;;;;;;;AASA,MAAMA,KAAK,GAAG,CAAC,uBAAD,EAA0B,yBAA1B,EAAqD,cAArD,CAAd;;AAEAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,SAASC,eAAT,GAA2B;AAChD;AACA,QAAMC,OAAO,GAAG,OAAOC,uBAAP,KAAmC,WAAnC,GAAiDA,uBAAjD,GAA2EL,MAAM,CAACM,OAAlG;AACA,QAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;AACA,QAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;AACA,QAAM,CAACK,IAAD,EAAO,GAAGC,IAAV,IAAkBC,OAAO,CAACC,GAAR,GAAcC,KAAd,CAAoBN,IAAI,CAACO,GAAzB,CAAxB;;AACA,SAAOJ,IAAI,CAACK,MAAL,GAAc,CAArB,EAAwB;AACpB,SAAK,MAAMC,IAAX,IAAmBjB,KAAnB,EAA0B;AACtB,YAAMkB,SAAS,GAAI,GAAER,IAAK,GAAEF,IAAI,CAACO,GAAI,GAAEP,IAAI,CAACW,IAAL,CAAU,GAAGR,IAAb,EAAmBM,IAAnB,CAAyB,EAAhE;;AACA,UAAIR,EAAE,CAACW,UAAH,CAAcF,SAAd,CAAJ,EAA8B;AAC1B,YAAID,IAAI,CAACI,QAAL,CAAc,MAAd,CAAJ,EAA2B;AACvB,gBAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWf,EAAE,CAACgB,YAAH,CAAgBP,SAAhB,CAAX,CAAb;;AACA,cAAID,IAAI,KAAK,cAAb,EAA6B;AACzB,gBAAIK,IAAI,CAACI,WAAT,EAAsB;AAClB,qBAAOJ,IAAI,CAACI,WAAZ;AACH;AACJ,WAJD,MAIO;AACH,mBAAOJ,IAAP;AACH;AACJ,SATD,MASO;AACH,gBAAMK,GAAG,GAAGtB,OAAO,CAACa,SAAD,CAAnB;AACA,iBAAOS,GAAG,CAACxB,OAAJ,IAAewB,GAAtB;AACH;AACJ;AACJ;;AACDhB,IAAAA,IAAI,CAACiB,GAAL;AACH;AACJ,CA3BD","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst NAMES = [\"perspective.config.js\", \"perspective.config.json\", \"package.json\"];\n\nmodule.exports.default = function get_config_file() {\n    // eslint-disable-next-line no-undef\n    const REQUIRE = typeof __non_webpack_require__ !== \"undefined\" ? __non_webpack_require__ : module.require;\n    const path = REQUIRE(\"path\");\n    const fs = REQUIRE(\"fs\");\n    const [root, ...curr] = process.cwd().split(path.sep);\n    while (curr.length > 0) {\n        for (const name of NAMES) {\n            const candidate = `${root}${path.sep}${path.join(...curr, name)}`;\n            if (fs.existsSync(candidate)) {\n                if (name.endsWith(\"json\")) {\n                    const json = JSON.parse(fs.readFileSync(candidate));\n                    if (name === \"package.json\") {\n                        if (json.perspective) {\n                            return json.perspective;\n                        }\n                    } else {\n                        return json;\n                    }\n                } else {\n                    const mod = REQUIRE(candidate);\n                    return mod.default || mod;\n                }\n            }\n        }\n        curr.pop();\n    }\n};\n"],"file":"__node.js"}