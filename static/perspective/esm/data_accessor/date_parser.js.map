{"version":3,"sources":["../../../src/js/data_accessor/date_parser.js"],"names":["moment","DATE_PARSE_CANDIDATES","ISO_8601","RFC_2822","is_valid_date","x","isValid","DateParser","constructor","date_types","date_candidates","slice","date_exclusions","parse","input","indexOf","val","type","getMonth","length","candidate","push","splice","toDate","Date","Error"],"mappings":";;AAAA;;;;;;;;AASA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACD,MAAM,CAACE,QAAR,EAAkBF,MAAM,CAACG,QAAzB,EAAmC,4BAAnC,EAAiE,YAAjE,EAA+E,YAA/E,EAA6F,UAA7F,EAAyG,QAAzG,EAAmH,aAAnH,EAAkI,cAAlI,CAA9B;AAEP;;;;;;;;AAOA,OAAO,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;AAC7B,SAAOL,MAAM,CAACK,CAAD,EAAIJ,qBAAJ,EAA2B,IAA3B,CAAN,CAAuCK,OAAvC,EAAP;AACH;AAED;;;;;;;AAMA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,eAAL,GAAuBT,qBAAqB,CAACU,KAAtB,EAAvB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACH;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACT,QAAI,KAAKF,eAAL,CAAqBG,OAArB,CAA6BD,KAA7B,IAAsC,CAAC,CAA3C,EAA8C;AAC1C,aAAO,IAAP;AACH,KAFD,MAEO;AACH,UAAIE,GAAG,GAAGF,KAAV;AACA,YAAMG,IAAI,GAAG,OAAOD,GAApB;;AACA,UAAIA,GAAG,CAACE,QAAR,EAAkB;AACd,eAAOF,GAAP;AACH,OAFD,MAEO,IAAIC,IAAI,KAAK,QAAb,EAAuB;AAC1BD,QAAAA,GAAG,GAAGhB,MAAM,CAACc,KAAD,EAAQ,KAAKL,UAAb,EAAyB,IAAzB,CAAZ;;AACA,YAAI,CAACO,GAAG,CAACV,OAAJ,EAAD,IAAkB,KAAKG,UAAL,CAAgBU,MAAhB,KAA2B,CAAjD,EAAoD;AAChD,eAAK,IAAIC,SAAT,IAAsB,KAAKV,eAA3B,EAA4C;AACxCM,YAAAA,GAAG,GAAGhB,MAAM,CAACc,KAAD,EAAQM,SAAR,EAAmB,IAAnB,CAAZ;;AACA,gBAAIJ,GAAG,CAACV,OAAJ,EAAJ,EAAmB;AACf,mBAAKG,UAAL,CAAgBY,IAAhB,CAAqBD,SAArB;AACA,mBAAKV,eAAL,CAAqBY,MAArB,CAA4B,KAAKZ,eAAL,CAAqBK,OAArB,CAA6BK,SAA7B,CAA5B,EAAqE,CAArE;AACA,qBAAOJ,GAAG,CAACO,MAAJ,EAAP;AACH;AACJ;;AACD,eAAKX,eAAL,CAAqBS,IAArB,CAA0BP,KAA1B;AACA,iBAAO,IAAP;AACH;;AACD,eAAOE,GAAG,CAACO,MAAJ,EAAP;AACH,OAfM,MAeA,IAAIN,IAAI,KAAK,QAAb,EAAuB;AAC1B,eAAO,IAAIO,IAAJ,CAASR,GAAT,CAAP;AACH;;AACD,YAAM,IAAIS,KAAJ,CAAW,oBAAmBT,GAAI,EAAlC,CAAN;AACH;AACJ;;AAnCmB","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport moment from \"moment\";\n\nexport const DATE_PARSE_CANDIDATES = [moment.ISO_8601, moment.RFC_2822, \"YYYY-MM-DD\\\\DHH:mm:ss.SSSS\", \"MM-DD-YYYY\", \"MM/DD/YYYY\", \"M/D/YYYY\", \"M/D/YY\", \"DD MMM YYYY\", \"HH:mm:ss.SSS\"];\n\n/**\n *\n *\n * @export\n * @param {string} x\n * @returns\n */\nexport function is_valid_date(x) {\n    return moment(x, DATE_PARSE_CANDIDATES, true).isValid();\n}\n\n/**\n *\n *\n * @export\n * @class DateParser\n */\nexport class DateParser {\n    constructor() {\n        this.date_types = [];\n        this.date_candidates = DATE_PARSE_CANDIDATES.slice();\n        this.date_exclusions = [];\n    }\n\n    parse(input) {\n        if (this.date_exclusions.indexOf(input) > -1) {\n            return null;\n        } else {\n            let val = input;\n            const type = typeof val;\n            if (val.getMonth) {\n                return val;\n            } else if (type === \"string\") {\n                val = moment(input, this.date_types, true);\n                if (!val.isValid() || this.date_types.length === 0) {\n                    for (let candidate of this.date_candidates) {\n                        val = moment(input, candidate, true);\n                        if (val.isValid()) {\n                            this.date_types.push(candidate);\n                            this.date_candidates.splice(this.date_candidates.indexOf(candidate), 1);\n                            return val.toDate();\n                        }\n                    }\n                    this.date_exclusions.push(input);\n                    return null;\n                }\n                return val.toDate();\n            } else if (type === \"number\") {\n                return new Date(val);\n            }\n            throw new Error(`Unparseable date ${val}`);\n        }\n    }\n}\n"],"file":"date_parser.js"}