{"version":3,"sources":["../../../src/js/api/dispatch.js"],"names":["__CALLBACK_CACHE__","__CALLBACK_INDEX__","reject","args","Array","arguments","i","resolve","callback_id","msg","cmd","name","method","subscribe"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst __CALLBACK_CACHE__ = new WeakMap();\nlet __CALLBACK_INDEX__ = 0;\n\n/**\n * Unbind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function unsubscribe(method, cmd) {\n    return function() {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        const callback_id = __CALLBACK_CACHE__.get(resolve);\n        __CALLBACK_CACHE__.delete(resolve);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id\n        };\n        this._worker.post(msg, resolve, reject);\n        this._worker.unsubscribe(cmd, resolve);\n    };\n}\n\n/**\n * Bind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function subscribe(method, cmd) {\n    return function() {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        __CALLBACK_INDEX__++;\n        __CALLBACK_CACHE__.set(resolve, __CALLBACK_INDEX__);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id: __CALLBACK_INDEX__\n        };\n        this._worker.post(msg, resolve, reject, true);\n    };\n}\n\n/**\n * Add a method call to the queue, preparing it for execution.\n *\n * Returns a bound function that calls the desired method on the server.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function async_queue(method, cmd) {\n    return function() {\n        var args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        return new Promise(\n            function(resolve, reject) {\n                var msg = {\n                    cmd: cmd || \"view_method\",\n                    name: this._name,\n                    method: method,\n                    args: args,\n                    subscribe: false\n                };\n                this._worker.post(msg, resolve, reject);\n            }.bind(this)\n        );\n    };\n}\n"],"file":"dispatch.js"}