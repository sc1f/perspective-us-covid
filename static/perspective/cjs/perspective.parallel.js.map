{"version":3,"sources":["../../src/js/perspective.parallel.js"],"names":["WebSocketClient","require","INLINE_WARNING","override","_fetch","resolve","wasmXHR","worker","wasm","console","constructor","override_config","msg","cmd","config","get_config","Promise","_worker","send","terminate","_detect_transferable","ab","WORKER_SINGLETON","getInstance","__WORKER__","config_str","JSON","__CONFIG__","document","mod","x","websocket","url","window","shared_worker","Object","defaults"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport * as defaults from \"./config/constants.js\";\r\nimport {get_config} from \"./config\";\r\nimport {Client} from \"./api/client.js\";\r\nconst {WebSocketClient} = require(\"./websocket\");\r\n\r\nimport wasm_worker from \"./perspective.wasm.js\";\r\nimport wasm from \"./psp.async.wasm.js\";\r\nimport {override_config} from \"../../dist/esm/config/index.js\";\r\n\r\n// eslint-disable-next-line max-len\r\nconst INLINE_WARNING = `Perspective has been compiled in INLINE mode.  While Perspective's runtime performance is not affected, you may see smaller assets size and faster engine initial load time using \"@finos/perspective-webpack-plugin\" to build your application.\r\n\r\nhttps://perspective.finos.org/docs/md/installation.html#-an-important-note-about-hosting`;\r\n\r\n/**\r\n * Singleton WASM file download cache.\r\n */\r\nconst override = new (class {\r\n    _fetch(url) {\r\n        return new Promise(resolve => {\r\n            let wasmXHR = new XMLHttpRequest();\r\n            wasmXHR.open(\"GET\", url, true);\r\n            wasmXHR.responseType = \"arraybuffer\";\r\n            wasmXHR.onload = () => {\r\n                resolve(wasmXHR.response);\r\n            };\r\n            wasmXHR.send(null);\r\n        });\r\n    }\r\n\r\n    worker() {\r\n        return wasm_worker();\r\n    }\r\n\r\n    async wasm() {\r\n        if (wasm instanceof ArrayBuffer) {\r\n            console.warn(INLINE_WARNING);\r\n            this._wasm = wasm;\r\n        } else {\r\n            this._wasm = await this._fetch(wasm);\r\n        }\r\n        return this._wasm;\r\n    }\r\n})();\r\n\r\n/**\r\n * WebWorker extends Perspective's `worker` class and defines interactions using\r\n * the WebWorker API.\r\n *\r\n * This class serves as the client API for transporting messages to/from Web\r\n * Workers.\r\n */\r\nclass WebWorkerClient extends Client {\r\n    constructor(config) {\r\n        if (config) {\r\n            override_config(config);\r\n        }\r\n        super();\r\n        this.register();\r\n    }\r\n\r\n    /**\r\n     * When the worker is created, load either the ASM or WASM bundle depending\r\n     * on WebAssembly compatibility.  Don't use transferrable so multiple\r\n     * workers can be instantiated.\r\n     */\r\n    async register() {\r\n        let _worker;\r\n        const msg = {cmd: \"init\", config: get_config()};\r\n        if (typeof WebAssembly === \"undefined\") {\r\n            throw new Error(\"WebAssembly not supported. Support for ASM.JS has been removed as of 0.3.1.\");\r\n        } else {\r\n            [_worker, msg.buffer] = await Promise.all([override.worker(), override.wasm()]);\r\n        }\r\n        for (var key in this._worker) {\r\n            _worker[key] = this._worker[key];\r\n        }\r\n        this._worker = _worker;\r\n        this._worker.addEventListener(\"message\", this._handle.bind(this));\r\n        this._worker.postMessage(msg);\r\n        this._detect_transferable();\r\n    }\r\n\r\n    /**\r\n     * Send a message from the worker, using transferables if necessary.\r\n     *\r\n     * @param {*} msg\r\n     */\r\n    send(msg) {\r\n        if (this._worker.transferable && msg.args && msg.args[0] instanceof ArrayBuffer) {\r\n            this._worker.postMessage(msg, msg.args);\r\n        } else {\r\n            this._worker.postMessage(msg);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n        this._worker.terminate();\r\n        this._worker = undefined;\r\n    }\r\n\r\n    _detect_transferable() {\r\n        var ab = new ArrayBuffer(1);\r\n        this._worker.postMessage(ab, [ab]);\r\n        this._worker.transferable = ab.byteLength === 0;\r\n        if (!this._worker.transferable) {\r\n            console.warn(\"Transferable support not detected\");\r\n        } else {\r\n            console.log(\"Transferable support detected\");\r\n        }\r\n    }\r\n}\r\n\r\n/******************************************************************************\r\n *\r\n * Web Worker Singleton\r\n *\r\n */\r\n\r\nconst WORKER_SINGLETON = (function() {\r\n    let __WORKER__, __CONFIG__;\r\n    return {\r\n        getInstance: function(config) {\r\n            if (__WORKER__ === undefined) {\r\n                __WORKER__ = new WebWorkerClient(config);\r\n            }\r\n            const config_str = JSON.stringify(config);\r\n            if (__CONFIG__ && config_str !== __CONFIG__) {\r\n                throw new Error(`Confiuration object for shared_worker() has changed - this is probably a bug in your application.`);\r\n            }\r\n            __CONFIG__ = config_str;\r\n            return __WORKER__;\r\n        }\r\n    };\r\n})();\r\n\r\n/**\r\n * If Perspective is loaded with the `preload` attribute, pre-initialize the\r\n * worker so it is available at page render.\r\n */\r\nif (document.currentScript && document.currentScript.hasAttribute(\"preload\")) {\r\n    WORKER_SINGLETON.getInstance();\r\n}\r\n\r\nconst mod = {\r\n    override: x => override.set(x),\r\n\r\n    /**\r\n     * Create a new WebWorkerClient instance. s\r\n     * @param {*} [config] An optional perspective config object override\r\n     */\r\n    worker(config) {\r\n        return new WebWorkerClient(config);\r\n    },\r\n\r\n    /**\r\n     * Create a new WebSocketClient instance. The `url` parameter is provided,\r\n     * load the worker at `url` using a WebSocket. s\r\n     * @param {*} url Defaults to `window.location.origin`\r\n     * @param {*} [config] An optional perspective config object override\r\n     */\r\n    websocket(url = window.location.origin.replace(\"http\", \"ws\")) {\r\n        return new WebSocketClient(new WebSocket(url));\r\n    },\r\n\r\n    shared_worker(config) {\r\n        return WORKER_SINGLETON.getInstance(config);\r\n    }\r\n};\r\n\r\nfor (let prop of Object.keys(defaults)) {\r\n    mod[prop] = defaults[prop];\r\n}\r\n\r\nexport default mod;\r\n"],"file":"perspective.parallel.js"}