{"version":3,"sources":["../../../src/js/config/settings.js"],"names":["module","types","float","filter_operator","aggregate","format","style","minimumFractionDigits","maximumFractionDigits","string","integer","boolean","datetime","week","year","month","day","hour","minute","second","null_value","date"],"mappings":"AAAA;;;;;;;;;AASA;;;AAGAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA,GAAyB;AACrB;;;;;AAKAC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AACH;;;;AAIAC,MAAAA,eAAe,EALZ,IAAA;;AAOH;;;;AAIAC,MAAAA,SAAS,EAXN,KAAA;;AAaH;;;;;AAKAC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EADD,SAAA;AAEJC,QAAAA,qBAAqB,EAFjB,CAAA;AAGJC,QAAAA,qBAAqB,EAAE;AAHnB;AAlBL,KADJ;AAyBHC,IAAAA,MAAM,EAAE;AACJN,MAAAA,eAAe,EADX,IAAA;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAzBL;AA6BHM,IAAAA,OAAO,EAAE;AACLP,MAAAA,eAAe,EADV,IAAA;AAELC,MAAAA,SAAS,EAFJ,KAAA;AAGLC,MAAAA,MAAM,EAAE;AAHH,KA7BN;AAkCHM,IAAAA,OAAO,EAAE;AACLR,MAAAA,eAAe,EADV,IAAA;AAELC,MAAAA,SAAS,EAAE;AAFN,KAlCN;AAsCHQ,IAAAA,QAAQ,EAAE;AACNT,MAAAA,eAAe,EADT,IAAA;AAENC,MAAAA,SAAS,EAFH,OAAA;AAGNC,MAAAA,MAAM,EAAE;AACJQ,QAAAA,IAAI,EADA,SAAA;AAEJC,QAAAA,IAAI,EAFA,SAAA;AAGJC,QAAAA,KAAK,EAHD,SAAA;AAIJC,QAAAA,GAAG,EAJC,SAAA;AAKJC,QAAAA,IAAI,EALA,SAAA;AAMJC,QAAAA,MAAM,EANF,SAAA;AAOJC,QAAAA,MAAM,EAAE;AAPJ,OAHF;AAYNC,MAAAA,UAAU,EAAE,CAAC;AAZP,KAtCP;AAoDHC,IAAAA,IAAI,EAAE;AACFlB,MAAAA,eAAe,EADb,IAAA;AAEFC,MAAAA,SAAS,EAFP,OAAA;AAGFC,MAAAA,MAAM,EAAE;AACJQ,QAAAA,IAAI,EADA,SAAA;AAEJC,QAAAA,IAAI,EAFA,SAAA;AAGJC,QAAAA,KAAK,EAHD,SAAA;AAIJC,QAAAA,GAAG,EAAE;AAJD,OAHN;AASFI,MAAAA,UAAU,EAAE,CAAC;AATX;AApDH;AANc,CAAzBpB","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * The default settings which populate `perspective.config.js`.\n */\nmodule.exports.default = {\n    /**\n     * `types` are the type-specific configuration options.  Each key is the\n     * name of a perspective type; their values are configuration objects for\n     * that type.\n     */\n    types: {\n        float: {\n            /**\n             * Which filter operator should be the default when a column of this\n             * type is pivotted.\n             */\n            filter_operator: \"==\",\n\n            /**\n             * Which aggregate should be the default when a column of this type\n             * is pivotted.\n             */\n            aggregate: \"sum\",\n\n            /**\n             * The format object for this type.  Can be either an\n             * `toLocaleString()` `options` object for this type (or supertype),\n             * or a function which returns the formatted string for this type.\n             */\n            format: {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            }\n        },\n        string: {\n            filter_operator: \"==\",\n            aggregate: \"count\"\n        },\n        integer: {\n            filter_operator: \"==\",\n            aggregate: \"sum\",\n            format: {}\n        },\n        boolean: {\n            filter_operator: \"==\",\n            aggregate: \"count\"\n        },\n        datetime: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\"\n            },\n            null_value: -1\n        },\n        date: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\"\n            },\n            null_value: -1\n        }\n    }\n};\n"],"file":"settings.js"}