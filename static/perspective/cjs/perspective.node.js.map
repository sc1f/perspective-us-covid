{"version":3,"sources":["../../src/js/perspective.node.js"],"names":["Client","require","Server","WebSocketClient","perspective","fs","http","WebSocket","process","path","load_perspective","LOCAL_PATH","buffer","SYNC_SERVER","init","wasmBinary","wasmJSMethod","core","post","SYNC_CLIENT","data","msg","send","id","cmd","module","DEFAULT_ASSETS","CONTENT_TYPES","error","reject","resolve","response","url","request","extname","contentType","filePath","rootDir","content","read_promise","console","host_psp","paths","assets","x","constructor","on_start","port","perspective_assets","noServer","perMessageDeflate","ws","sock","close","websocket"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nconst {Client} = require(\"./api/client.js\");\r\nconst {Server} = require(\"./api/server.js\");\r\nconst {WebSocketManager, WebSocketClient} = require(\"./websocket\");\r\n\r\nconst perspective = require(\"./perspective.js\").default;\r\n\r\nconst fs = require(\"fs\");\r\nconst http = require(\"http\");\r\nconst WebSocket = require(\"ws\");\r\nconst process = require(\"process\");\r\n\r\nconst path = require(\"path\");\r\n\r\nconst load_perspective = require(\"./psp.async.js\").default;\r\n\r\n// eslint-disable-next-line no-undef\r\n\r\nconst LOCAL_PATH = path.join(process.cwd(), \"node_modules\");\r\nconst buffer = require(\"./psp.async.wasm.js\").default;\r\n\r\nconst SYNC_SERVER = new (class extends Server {\r\n    init(msg) {\r\n        load_perspective({\r\n            wasmBinary: buffer,\r\n            wasmJSMethod: \"native-wasm\"\r\n        }).then(core => {\r\n            this.perspective = perspective(core);\r\n            super.init(msg);\r\n        });\r\n    }\r\n\r\n    post(msg) {\r\n        SYNC_CLIENT._handle({data: msg});\r\n    }\r\n})();\r\n\r\nconst SYNC_CLIENT = new (class extends Client {\r\n    send(msg) {\r\n        SYNC_SERVER.process(msg);\r\n    }\r\n})();\r\n\r\nSYNC_CLIENT.send({id: -1, cmd: \"init\"});\r\n\r\nmodule.exports = SYNC_CLIENT;\r\nmodule.exports.sync_module = () => SYNC_SERVER.perspective;\r\n\r\nconst DEFAULT_ASSETS = [\r\n    \"@finos/perspective/dist/umd\",\r\n    \"@finos/perspective-bench/dist\",\r\n    \"@finos/perspective-viewer/dist/umd\",\r\n    \"@finos/perspective-viewer-highcharts/dist/umd\",\r\n    \"@finos/perspective-viewer-hypergrid/dist/umd\",\r\n    \"@finos/perspective-viewer-datagrid/dist/umd\",\r\n    \"@finos/perspective-viewer-d3fc/dist/umd\",\r\n    \"@finos/perspective-workspace/dist/umd\"\r\n];\r\n\r\nconst CONTENT_TYPES = {\r\n    \".js\": \"text/javascript\",\r\n    \".css\": \"text/css\",\r\n    \".json\": \"application/json\",\r\n    \".arrow\": \"arraybuffer\",\r\n    \".wasm\": \"application/wasm\"\r\n};\r\n\r\nfunction read_promise(filePath) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(filePath, function(error, content) {\r\n            if (error && error.code !== \"ENOENT\") {\r\n                reject(error);\r\n            } else {\r\n                resolve(content);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Host a Perspective server that hosts data, code files, etc.\r\n */\r\nfunction perspective_assets(assets, host_psp) {\r\n    return async function(request, response) {\r\n        response.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        response.setHeader(\"Access-Control-Request-Method\", \"*\");\r\n        response.setHeader(\"Access-Control-Allow-Methods\", \"OPTIONS,GET\");\r\n        response.setHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n        let url = request.url.split(/[\\?\\#]/)[0];\r\n        if (url === \"/\") {\r\n            url = \"/index.html\";\r\n        }\r\n        let extname = path.extname(url);\r\n        let contentType = CONTENT_TYPES[extname] || \"text/html\";\r\n        try {\r\n            for (let rootDir of assets) {\r\n                let filePath = rootDir + url;\r\n                let content = await read_promise(filePath);\r\n                if (typeof content !== \"undefined\") {\r\n                    console.log(`200 ${url}`);\r\n                    response.writeHead(200, {\"Content-Type\": contentType});\r\n                    response.end(content, extname === \".arrow\" ? \"user-defined\" : \"utf-8\");\r\n                    return;\r\n                }\r\n            }\r\n            if (host_psp || typeof host_psp === \"undefined\") {\r\n                for (let rootDir of DEFAULT_ASSETS) {\r\n                    try {\r\n                        let paths = require.resolve.paths(rootDir + url);\r\n                        paths = [...paths, ...assets.map(x => path.join(x, \"node_modules\")), LOCAL_PATH];\r\n                        let filePath = require.resolve(rootDir + url, {paths});\r\n                        let content = await read_promise(filePath);\r\n                        if (typeof content !== \"undefined\") {\r\n                            console.log(`200 ${url}`);\r\n                            response.writeHead(200, {\"Content-Type\": contentType});\r\n                            response.end(content, extname === \".arrow\" ? \"user-defined\" : \"utf-8\");\r\n                            return;\r\n                        }\r\n                    } catch (e) {}\r\n                }\r\n            }\r\n            if (url.indexOf(\"favicon.ico\") > -1) {\r\n                response.writeHead(200);\r\n                response.end(\"\", \"utf-8\");\r\n            } else {\r\n                console.error(`404 ${url}`);\r\n                response.writeHead(404);\r\n                response.end(\"\", \"utf-8\");\r\n            }\r\n        } catch (error) {\r\n            if (error.code !== \"ENOENT\") {\r\n                console.error(`500 ${url}`);\r\n                response.writeHead(500);\r\n                response.end(\"\", \"utf-8\");\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nclass WebSocketServer extends WebSocketManager {\r\n    constructor({assets, host_psp, port, on_start} = {}) {\r\n        super();\r\n        port = typeof port === \"undefined\" ? 8080 : port;\r\n        assets = assets || [\"./\"];\r\n\r\n        // Serve Perspective files through HTTP\r\n        this._server = http.createServer(perspective_assets(assets, host_psp));\r\n\r\n        // Serve Worker API through WebSockets\r\n        this._wss = new WebSocket.Server({noServer: true, perMessageDeflate: true});\r\n\r\n        // When the server starts, define how to handle messages\r\n        this._wss.on(\"connection\", ws => this.add_connection(ws));\r\n\r\n        this._server.on(\"upgrade\", (request, socket, head) => {\r\n            console.log(\"200    *** websocket upgrade ***\");\r\n            this._wss.handleUpgrade(request, socket, head, sock => this._wss.emit(\"connection\", sock, request));\r\n        });\r\n\r\n        this._server.listen(port, () => {\r\n            console.log(`Listening on port ${this._server.address().port}`);\r\n            if (on_start) {\r\n                on_start();\r\n            }\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this._server.close();\r\n    }\r\n}\r\n\r\nconst websocket = url => {\r\n    return new WebSocketClient(new WebSocket(url));\r\n};\r\n\r\nmodule.exports.websocket = websocket;\r\nmodule.exports.perspective_assets = perspective_assets;\r\nmodule.exports.WebSocketServer = WebSocketServer;\r\nmodule.exports.WebSocketManager = WebSocketManager;\r\n"],"file":"perspective.node.js"}