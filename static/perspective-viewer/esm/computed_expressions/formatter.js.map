{"version":3,"sources":["../../../src/js/computed_expressions/formatter.js"],"names":["COMPUTED_FUNCTION_FORMATTERS","x","y","invert","log","exp","pow2","sqrt","abs","bin10","bin100","bin1000","bin10th","bin100th","bin1000th","uppercase","lowercase","length","is","concat_space","concat_comma","hour_of_day","day_of_week","month_of_year","second_bucket","minute_bucket","hour_bucket","day_bucket","week_bucket","month_bucket","year_bucket"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n// TODO: these have been renamed compared to old computed columns, make sure\n// names are consistent throughout.\nexport const COMPUTED_FUNCTION_FORMATTERS = {\n    \"+\": (x, y) => `(${x} + ${y})`,\n    \"-\": (x, y) => `(${x} - ${y})`,\n    \"*\": (x, y) => `(${x} * ${y})`,\n    \"/\": (x, y) => `(${x} / ${y})`,\n    \"%\": (x, y) => `(${x} %% ${y})`,\n    \"==\": (x, y) => `(${x} == ${y})`,\n    \"!=\": (x, y) => `(${x} != ${y})`,\n    \">\": (x, y) => `(${x} > ${y})`,\n    \"<\": (x, y) => `(${x} < ${y})`,\n    \"^\": (x, y) => `(${x} ^ ${y})`,\n    invert: x => `(1 / ${x})`,\n    log: x => `log(${x})`,\n    exp: x => `exp(${x})`,\n    pow2: x => `(${x} ^ 2)`,\n    sqrt: x => `sqrt(${x})`,\n    abs: x => `abs(${x})`,\n    bin10: x => `bin10(${x})`,\n    bin100: x => `bin100(${x})`,\n    bin1000: x => `bin1000(${x})`,\n    bin10th: x => `bin10th(${x})`,\n    bin100th: x => `bin100th(${x})`,\n    bin1000th: x => `bin1000th(${x})`,\n    uppercase: x => `uppercase(${x})`,\n    lowercase: x => `lowercase(${x})`,\n    length: x => `length(${x})`,\n    is: (x, y) => `(${x} is ${y})`,\n    concat_space: (x, y) => `concat_space(${x}, ${y})`,\n    concat_comma: (x, y) => `concat_comma(${x}, ${y})`,\n    hour_of_day: x => `hour_of_day(${x})`,\n    day_of_week: x => `day_of_week(${x})`,\n    month_of_year: x => `month_of_year(${x})`,\n    second_bucket: x => `second_bucket(${x})`,\n    minute_bucket: x => `minute_bucket(${x})`,\n    hour_bucket: x => `hour_bucket(${x})`,\n    day_bucket: x => `day_bucket(${x})`,\n    week_bucket: x => `week_bucket(${x})`,\n    month_bucket: x => `month_bucket(${x})`,\n    year_bucket: x => `year_bucket(${x})`\n};\n"],"file":"formatter.js"}