{"version":3,"sources":["../../../src/js/viewer/state_element.js"],"names":["renderers","StateElement","_plugin","current_renderers","getInstance","view","getAttribute","Object","keys","setAttribute","_get_view_dom_columns","selector","callback","columns","Array","prototype","slice","call","shadowRoot","querySelectorAll","map","filter","x","_get_view_all_columns","_get_view_active_columns","_get_view_active_valid_columns","classList","contains","_get_view_inactive_columns","_get_view_all_column_names","_get_view_active_column_names","_get_view_all_valid_column_names","_get_view_active_valid_column_names","_get_view_active_valid_column_count","length","_get_view_columns","active","col","_get_view_aggregates","s","op","JSON","parse","e","console","error","column","_get_view_row_pivots","_get_view_column_pivots","_get_view_filter_nodes","_get_view_filters","operator","operand","_get_view_sorts","order","_get_view_computed_columns","_get_view_parsed_computed_columns","_get_visible_column_count","get_aggregate_attribute","aggs","found","Set","new_aggs","add","_aggregate_defaults","has","push"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2018, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {renderers} from \"./renderers.js\";\n\nexport class StateElement extends HTMLElement {\n    get _plugin() {\n        let current_renderers = renderers.getInstance();\n        let view = this.getAttribute(\"plugin\");\n        if (!view) {\n            view = Object.keys(current_renderers)[0];\n            this.setAttribute(\"plugin\", view);\n        }\n        return current_renderers[view] || current_renderers[Object.keys(current_renderers)[0]];\n    }\n\n    // deprecate\n    _get_view_dom_columns(selector, callback) {\n        selector = selector || \"#active_columns perspective-row\";\n        let columns = Array.prototype.slice.call(this.shadowRoot.querySelectorAll(selector));\n        if (!callback) {\n            return columns;\n        }\n        return columns.map(callback).filter(x => x);\n    }\n\n    _get_view_all_columns() {\n        return Array.prototype.slice.call(this.shadowRoot.querySelectorAll(\"#inactive_columns perspective-row\"));\n    }\n\n    _get_view_active_columns() {\n        return Array.prototype.slice.call(this.shadowRoot.querySelectorAll(\"#active_columns perspective-row\"));\n    }\n\n    _get_view_active_valid_columns() {\n        return Array.prototype.slice.call(this.shadowRoot.querySelectorAll(\"#active_columns perspective-row\")).filter(x => !x.classList.contains(\"null-column\"));\n    }\n\n    _get_view_inactive_columns() {\n        return Array.prototype.slice.call(this.shadowRoot.querySelectorAll(\"#inactive_columns perspective-row\"));\n    }\n\n    _get_view_all_column_names() {\n        return this._get_view_all_columns().map(x => x.getAttribute(\"name\"));\n    }\n\n    _get_view_active_column_names() {\n        return this._get_view_active_columns().map(x => x.getAttribute(\"name\"));\n    }\n\n    _get_view_all_valid_column_names() {\n        return this._get_view_all_column_names().filter(x => x);\n    }\n\n    _get_view_active_valid_column_names() {\n        return this._get_view_active_column_names().filter(x => x);\n    }\n\n    _get_view_active_valid_column_count() {\n        return this._get_view_active_valid_column_names().length;\n    }\n\n    // deprecate\n    _get_view_columns({active = true} = {}) {\n        let selector;\n        if (active) {\n            selector = \"#active_columns perspective-row\";\n        } else {\n            selector = \"#inactive_columns perspective-row\";\n        }\n        return this._get_view_dom_columns(selector, col => {\n            return col.getAttribute(\"name\");\n        });\n    }\n\n    _get_view_aggregates(selector) {\n        selector = selector || \"#active_columns perspective-row\";\n        return this._get_view_dom_columns(selector, s => {\n            let op = s.getAttribute(\"aggregate\");\n            if (op[0] === \"[\") {\n                try {\n                    op = JSON.parse(op);\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n            const column = s.getAttribute(\"name\");\n            return column && {op, column};\n        });\n    }\n\n    _get_view_row_pivots() {\n        return this._get_view_dom_columns(\"#row_pivots perspective-row\", col => {\n            return col.getAttribute(\"name\");\n        });\n    }\n\n    _get_view_column_pivots() {\n        return this._get_view_dom_columns(\"#column_pivots perspective-row\", col => {\n            return col.getAttribute(\"name\");\n        });\n    }\n\n    _get_view_filter_nodes() {\n        return this._get_view_dom_columns(\"#filters perspective-row\");\n    }\n\n    _get_view_filters() {\n        return this._get_view_dom_columns(\"#filters perspective-row\", col => {\n            let {operator, operand} = JSON.parse(col.getAttribute(\"filter\"));\n            return [col.getAttribute(\"name\"), operator, operand];\n        });\n    }\n\n    _get_view_sorts() {\n        return this._get_view_dom_columns(\"#sort perspective-row\", col => {\n            let order = col.getAttribute(\"sort-order\") || \"asc\";\n            return [col.getAttribute(\"name\"), order];\n        });\n    }\n\n    _get_view_computed_columns() {\n        return JSON.parse(this.getAttribute(\"computed-columns\")) || [];\n    }\n\n    _get_view_parsed_computed_columns() {\n        return JSON.parse(this.getAttribute(\"parsed-computed-columns\")) || [];\n    }\n\n    _get_visible_column_count() {\n        return this._get_view_active_columns().length;\n    }\n\n    get_aggregate_attribute() {\n        const aggs = JSON.parse(this.getAttribute(\"aggregates\")) || {};\n        const found = new Set();\n        const new_aggs = Object.keys(aggs).map(col => {\n            found.add(col);\n            return {column: col, op: aggs[col]};\n        });\n        if (this._aggregate_defaults) {\n            for (const column of Object.keys(this._aggregate_defaults)) {\n                if (!found.has(column)) {\n                    new_aggs.push({\n                        column,\n                        op: this._aggregate_defaults[column]\n                    });\n                }\n            }\n        }\n        return new_aggs;\n    }\n}\n"],"file":"state_element.js"}