{"version":3,"sources":["../../../src/js/viewer/perspective_element.js"],"names":["debounce","isEqual","html","render","perspective","get_type_config","CancelTask","StateElement","expression_to_computed_column_config","numberWithCommas","x","toString","replace","TYPE_ORDER","integer","string","float","boolean","datetime","date","column_sorter","schema","a","b","s1","s2","r","toLowerCase","get_aggregate_defaults","columns","computed_schema","aggregates","col","type","aggregate","get_aggregates_with_defaults","aggregate_attribute","found","Set","column","type_config","add","op","TYPE_AGGREGATES","indexOf","push","console","warn","has","_total_template","args","y","total","Math","floor","_nowrap_template","text","_warning","strings","flatMap","str","idx","filter","PerspectiveElement","_validate_parsed_computed_columns","computed_columns","length","validated","computed","_load_table","table","shadowRoot","querySelector","classList","resolve","_set_updating","_clear_state","_table","cols","Promise","all","_initial_col_order","slice","parsed_computed_columns","_get_view_parsed_computed_columns","computed_expressions","_get_view_computed_columns","expression","concat","computed_column_names","map","hasAttribute","setAttribute","JSON","stringify","sort","get_aggregate_attribute","shown","parse","getAttribute","shown_is_invalid","_aggregate_defaults","_clear_columns","name","find","includes","undefined","row","_new_row","_inactive_columns","appendChild","_plugin","initial","names","active_row","_active_columns","parentElement","remove","_show_column_container","compute","_show_side_panel_actions","filters","_debounce_update","force_update","e","reset","get_maxes","max_cols","max_rows","num_columns","_view","schema_columns","Object","keys","max_columns","column_group_diff","column_limit","max_cells","ceil","_warn_render_size_exceeded","_show_warnings","num_rows","count","columns_are_truncated","rows_are_truncated","_plugin_information","warning","_plugin_information_message","_calculate_throttle_timeout","timeout","throttle","__render_times","reduce","min","parseInt","isNaN","removeAttribute","max","_view_on_update","limit_points","_debounced","setTimeout","timer","_render_time","_task","cancel","task","updater","update","create","cancelled","call","_datavis","err","error","dispatchEvent","Event","_validate_filters","node","_get_view_filter_nodes","operandNode","getElementById","exclamation","operator","operand","is_valid_filter","title","style","borderColor","hidden","_is_config_changed","config","plugin_name","_previous_config","_previous_plugin_name","_new_view","ignore_size_check","_check_responsive_layout","row_pivots","_get_view_row_pivots","column_pivots","_get_view_column_pivots","view_aggregates","_get_view_aggregates","_get_view_sorts","s","obj","remove_update","_view_updater","delete","view","on_update","_render_count","_check_loaded_table","t","performance","now","unshift","_restyle_plugin","styleElement","clear_table","remove_delete","_owner_viewer","toggleAttribute","_updating_promise","_resolve","_register_debounce_instance","_update","then","_get_worker","_worker","shared_worker"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2018, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport debounce from \"lodash/debounce\";\nimport isEqual from \"lodash/isEqual\";\nimport {html, render} from \"lit-html\";\n\nimport perspective from \"@finos/perspective\";\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\nimport {CancelTask} from \"./cancel_task.js\";\n\nimport {StateElement} from \"./state_element.js\";\nimport {expression_to_computed_column_config} from \"../computed_expressions/visitor\";\n\n/******************************************************************************\n *\n *  Helpers\n *\n */\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nlet TYPE_ORDER = {integer: 2, string: 0, float: 3, boolean: 4, datetime: 1, date: 1};\n\nconst column_sorter = schema => (a, b) => {\n    const s1 = TYPE_ORDER[schema[a]];\n    const s2 = TYPE_ORDER[schema[b]];\n    let r = 0;\n    if (s1 == s2) {\n        r = a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n    } else {\n        r = s1 < s2 ? -1 : 1;\n    }\n    return r;\n};\n\nfunction get_aggregate_defaults(columns, schema, computed_schema) {\n    const aggregates = {};\n    for (const col of columns) {\n        let type = schema[col];\n        if (!type) {\n            type = computed_schema[col];\n        }\n        aggregates[col] = get_type_config(type).aggregate;\n    }\n    return aggregates;\n}\n\nfunction get_aggregates_with_defaults(aggregate_attribute, columns, schema, computed_schema) {\n    const found = new Set();\n    const aggregates = [];\n    for (const col of aggregate_attribute) {\n        let type = schema[col.column];\n        if (!type) {\n            type = computed_schema[col.column];\n        }\n        const type_config = get_type_config(type);\n        found.add(col.column);\n        if (type_config.type || type) {\n            if (col.op === \"\" || perspective.TYPE_AGGREGATES[type_config.type || type].indexOf(col.op) === -1) {\n                col.op = type_config.aggregate;\n            }\n            aggregates.push(col);\n        } else {\n            console.warn(`No column \"${col.column}\" found (specified in aggregates attribute).`);\n        }\n    }\n\n    // Add columns detected from dataset.\n    for (const col of columns) {\n        if (!found.has(col)) {\n            let type = schema[col];\n            if (!type) {\n                type = computed_schema[col.column];\n            }\n            aggregates.push({\n                column: col,\n                op: get_type_config(type).aggregate\n            });\n        }\n    }\n\n    return aggregates;\n}\n\nconst _total_template = args => {\n    if (args) {\n        const x = numberWithCommas(args[0]);\n        const y = numberWithCommas(args[1]);\n        const total = Math.floor((args[0] / args[1]) * 100);\n        return html`\n            <span title=\"${x} / ${y}\" class=\"plugin_information--overflow-hint\">&nbsp;<span class=\"plugin_information--overflow-hint-percent\">${total}%</span>&nbsp;</span>\n        `;\n    }\n};\n\nconst _nowrap_template = text => {\n    if (text !== \"\") {\n        return html`\n            <span style=\"white-space:nowrap\">${text}</span>\n        `;\n    }\n};\n\n/**\n * Render warning template tagged literal.\n * @param {*} strings\n * @param  {...[n, m]} args tuples of rationals to be formatted.\n */\nconst _warning = (strings, ...args) => strings.flatMap((str, idx) => [_nowrap_template(str), _total_template(args[idx])]).filter(x => x);\n\n/******************************************************************************\n *\n * PerspectiveElement\n *\n */\n\nexport class PerspectiveElement extends StateElement {\n    /**\n     * Given an array of computed column definitions, check the table's\n     * computed schema and make sure all types and column names are valid.\n     * If any column names are invalid, they are removed from the output\n     * array of computed column definitions.\n     *\n     * @param {Array{Object}} computed_columns an Array of computed column\n     * definitions\n     * @param {Object{String}} computed_schema a computed column schema\n     * generated from the table\n     *\n     * @returns {Array{Object}} a validated Array of computed column definitions\n     */\n    _validate_parsed_computed_columns(computed_columns, computed_schema) {\n        if (!computed_columns || computed_columns.length === 0) return [];\n        const validated = [];\n\n        for (const computed of computed_columns) {\n            if (computed_schema[computed.column]) {\n                validated.push(computed);\n            }\n        }\n\n        return validated;\n    }\n\n    /**\n     * Given a {@link module:perspective~table}, load it into the\n     * {@link module:perspective_viewer~PerspectiveViewer} and set the viewer's\n     * state. If the `computed-columns` attribute is set on the viewer, this\n     * method attempts to validate the computed columns with the `Table` and\n     * reconcile state.\n     *\n     * @param {*} table\n     * @param {*} computed\n     */\n    async _load_table(table) {\n        this.shadowRoot.querySelector(\"#app\").classList.add(\"hide_message\");\n        const resolve = this._set_updating();\n\n        this._clear_state();\n        this._table = table;\n\n        let [cols, schema] = await Promise.all([table.columns(), table.schema(true)]);\n\n        // Initial col order never contains computed columns\n        this._initial_col_order = cols.slice();\n\n        // Already validated through the attribute API\n        let parsed_computed_columns = this._get_view_parsed_computed_columns();\n\n        if (parsed_computed_columns.length === 0) {\n            // Fallback for race condition on workspace - need to parse\n            // computed expressions, and assume that `parsed-computed-columns`\n            // will be set when the setAttribute callback fires\n            // *after* the table has been loaded.\n            const computed_expressions = this._get_view_computed_columns();\n            for (const expression of computed_expressions) {\n                if (typeof expression === \"string\") {\n                    parsed_computed_columns = parsed_computed_columns.concat(expression_to_computed_column_config(expression));\n                } else {\n                    parsed_computed_columns.push(expression);\n                }\n            }\n        }\n\n        const computed_column_names = parsed_computed_columns.map(x => x.column);\n        const computed_schema = await table.computed_schema(parsed_computed_columns);\n\n        cols = cols.concat(computed_column_names);\n\n        if (!this.hasAttribute(\"columns\")) {\n            this.setAttribute(\"columns\", JSON.stringify(this._initial_col_order));\n        }\n\n        cols.sort(column_sorter(schema));\n\n        // Update aggregates\n        const aggregate_attribute = this.get_aggregate_attribute();\n        const aggregates = get_aggregates_with_defaults(aggregate_attribute, cols, schema, computed_schema);\n\n        let shown = JSON.parse(this.getAttribute(\"columns\")); //.filter(x => all_cols.indexOf(x) > -1);\n\n        // At this point, cols contains both the table columns and the\n        // validated computed columns, so this should only filter on columns\n        // that don't exist in either.\n        const shown_is_invalid = shown.filter(x => cols.indexOf(x) > -1).length === 0;\n\n        if (shown_is_invalid) {\n            shown = this._initial_col_order;\n        }\n\n        this._aggregate_defaults = get_aggregate_defaults(cols, schema, computed_schema);\n\n        // Clear the columns in the DOM before adding new ones\n        this._clear_columns();\n\n        for (const name of cols) {\n            let aggregate = aggregates.find(a => a.column === name).op;\n            const computed = computed_column_names.includes(name) ? name : undefined;\n            let type = schema[name];\n            if (!type) {\n                type = computed_schema[name];\n            }\n            const row = this._new_row(name, type, aggregate, null, null, computed);\n            this._inactive_columns.appendChild(row);\n            if (shown.includes(name)) {\n                row.classList.add(\"active\");\n            }\n        }\n\n        while (shown.length < this._plugin.initial?.names?.length) {\n            shown.push(null);\n        }\n\n        for (const x of shown) {\n            const computed = computed_column_names.includes(x) ? x : undefined;\n            let type = schema[name];\n            if (!type) {\n                type = computed_schema[name];\n            }\n            const active_row = this._new_row(x, type, undefined, undefined, undefined, computed);\n            this._active_columns.appendChild(active_row);\n        }\n\n        if (cols.length === shown.filter(x => cols.indexOf(x) > -1).length) {\n            this._inactive_columns.parentElement.classList.add(\"collapse\");\n        } else {\n            this._inactive_columns.parentElement.classList.remove(\"collapse\");\n        }\n\n        this._show_column_container();\n\n        if ((await this._table.compute()) === true) {\n            this._show_side_panel_actions();\n        }\n\n        // Filters need type information to populate e.g. the operator dropdown,\n        // so reset them.\n        if (this.hasAttribute(\"filters\")) {\n            this.filters = this.getAttribute(\"filters\");\n        }\n\n        try {\n            await this._debounce_update({force_update: true});\n        } catch (e) {\n            console.warn(\"Initial view failed, resetting UI state\");\n            await this.reset();\n            throw e;\n        }\n\n        resolve();\n    }\n\n    async get_maxes() {\n        let max_cols, max_rows;\n        const [schema, num_columns] = await Promise.all([this._view.schema(), this._view.num_columns()]);\n        const schema_columns = Object.keys(schema || {}).length || 1;\n\n        if (typeof this._plugin.max_columns !== \"undefined\") {\n            const column_group_diff = this._plugin.max_columns % schema_columns;\n            const column_limit = this._plugin.max_columns + column_group_diff;\n            max_cols = column_limit < num_columns ? column_limit : undefined;\n        }\n\n        if (typeof this._plugin.max_cells !== \"undefined\") {\n            max_rows = Math.ceil(max_cols ? this._plugin.max_cells / max_cols : this._plugin.max_cells / (num_columns || 1));\n        }\n\n        return {max_cols, max_rows};\n    }\n\n    async _warn_render_size_exceeded(max_cols, max_rows) {\n        if (this._show_warnings && (max_cols || max_rows)) {\n            const num_columns = await this._view.num_columns();\n            const num_rows = await this._view.num_rows();\n            const count = num_columns * num_rows;\n            const columns_are_truncated = max_cols && max_cols < num_columns;\n            const rows_are_truncated = max_rows && max_rows < num_rows;\n            if (columns_are_truncated && rows_are_truncated) {\n                this._plugin_information.classList.remove(\"hidden\");\n                const warning = _warning`Rendering ${[max_cols, num_columns]} of columns and ${[num_columns * max_rows, count]} of points.`;\n                render(warning, this._plugin_information_message);\n                return true;\n            } else if (columns_are_truncated) {\n                this._plugin_information.classList.remove(\"hidden\");\n                const warning = _warning`Rendering ${[max_cols, num_columns]} of columns.`;\n                render(warning, this._plugin_information_message);\n                return true;\n            } else if (rows_are_truncated) {\n                this._plugin_information.classList.remove(\"hidden\");\n                const warning = _warning`Rendering ${[num_columns * max_rows, count]} of points.`;\n                render(warning, this._plugin_information_message);\n                return true;\n            } else {\n                this._plugin_information.classList.add(\"hidden\");\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the optimal timeout in milliseconds for render events,\n     * calculated by 5 frame moving average of this component's render\n     * framerate, or explicit override attribute `\"throttle\"`.\n     *\n     * @private\n     * @returns\n     * @memberof PerspectiveElement\n     */\n    _calculate_throttle_timeout() {\n        let timeout;\n        const throttle = this.getAttribute(\"throttle\");\n        if (throttle === undefined || throttle === \"null\" || !this.hasAttribute(\"throttle\")) {\n            if (!this.__render_times || this.__render_times.length < 5) {\n                return 0;\n            }\n            timeout = this.__render_times.reduce((x, y) => x + y, 0) / this.__render_times.length;\n            timeout = Math.min(5000, timeout);\n        } else {\n            timeout = parseInt(throttle);\n            if (isNaN(timeout) || timeout < 0) {\n                console.warn(`Bad throttle attribute value \"${throttle}\".  Can be (non-negative integer) milliseconds.`);\n                this.removeAttribute(\"throttle\");\n                return 0;\n            }\n        }\n        return Math.max(0, timeout);\n    }\n\n    _view_on_update(limit_points) {\n        if (!this._debounced) {\n            this._debounced = setTimeout(async () => {\n                this._debounced = undefined;\n                const timer = this._render_time();\n                if (this._task && !this._task.initial) {\n                    this._task.cancel();\n                }\n                const task = (this._task = new CancelTask());\n                const updater = this._plugin.update || this._plugin.create;\n                try {\n                    if (limit_points) {\n                        const {max_cols, max_rows} = await this.get_maxes();\n                        if (!task.cancelled) {\n                            await this._warn_render_size_exceeded(max_cols, max_rows);\n                            await updater.call(this, this._datavis, this._view, task, max_cols, max_rows);\n                        }\n                    } else {\n                        await updater.call(this, this._datavis, this._view, task);\n                    }\n                    timer();\n                    task.cancel();\n                } catch (err) {\n                    console.error(\"Error rendering plugin.\", err);\n                } finally {\n                    this.dispatchEvent(new Event(\"perspective-view-update\"));\n                }\n            }, this._calculate_throttle_timeout());\n        }\n    }\n\n    async _validate_filters() {\n        const filters = [];\n        for (const node of this._get_view_filter_nodes()) {\n            const operandNode = node.shadowRoot.getElementById(\"filter_operand\");\n            const exclamation = node.shadowRoot.getElementById(\"row_exclamation\");\n            const {operator, operand} = JSON.parse(node.getAttribute(\"filter\"));\n            const filter = [node.getAttribute(\"name\"), operator, operand];\n            if (await this._table.is_valid_filter(filter)) {\n                filters.push(filter);\n                node.title = \"\";\n                operandNode.style.borderColor = \"\";\n                exclamation.hidden = true;\n            } else {\n                node.title = \"Invalid Filter\";\n                operandNode.style.borderColor = \"red\";\n                exclamation.hidden = false;\n            }\n        }\n\n        return filters;\n    }\n\n    _is_config_changed(config) {\n        const plugin_name = this.getAttribute(\"plugin\");\n        if (isEqual(config, this._previous_config) && plugin_name === this._previous_plugin_name) {\n            return false;\n        } else {\n            this._previous_config = config;\n            this._previous_plugin_name = plugin_name;\n            return true;\n        }\n    }\n\n    async _new_view({force_update = false, ignore_size_check = false, limit_points = true} = {}) {\n        if (!this._table) return;\n        this._check_responsive_layout();\n        const row_pivots = this._get_view_row_pivots();\n        const column_pivots = this._get_view_column_pivots();\n        const filters = await this._validate_filters();\n        const view_aggregates = this._get_view_aggregates();\n        if (view_aggregates.length === 0) return;\n        const sort = this._get_view_sorts();\n\n        let columns = view_aggregates.map(x => x.column);\n        let aggregates = {};\n        for (const a of view_aggregates) {\n            aggregates[a.column] = a.op;\n        }\n\n        for (const s of sort) {\n            const name = s[0];\n            if (columns.indexOf(name) === -1 && !(column_pivots.indexOf(s) > -1 || row_pivots.indexOf(s) > -1)) {\n                const all = this.get_aggregate_attribute();\n                const {column, op} = all.reduce((obj, y) => (y.column === name ? y : obj));\n                aggregates[column] = op;\n            }\n        }\n\n        // Computed Columns will have been parsed by this point in the\n        // setAttribute callback.\n        const computed_columns = this._get_view_parsed_computed_columns();\n\n        const config = {\n            filter: filters,\n            row_pivots: row_pivots,\n            column_pivots: column_pivots,\n            aggregates: aggregates,\n            columns: columns,\n            sort: sort,\n            computed_columns: computed_columns\n        };\n\n        if (this._view) {\n            this._view.remove_update(this._view_updater);\n            this._view.delete();\n            this._view = undefined;\n        }\n\n        try {\n            this._view = this._table.view(config);\n            this._view_updater = () => this._view_on_update(limit_points);\n            this._view.on_update(this._view_updater);\n        } catch (e) {\n            this._view.delete();\n            throw e;\n        }\n\n        const timer = this._render_time();\n        this._render_count = (this._render_count || 0) + 1;\n        if (this._task) {\n            this._task.cancel();\n        }\n\n        const task = (this._task = new CancelTask(() => this._render_count--, true));\n\n        try {\n            const {max_cols, max_rows} = await this.get_maxes();\n            if (!ignore_size_check) {\n                await this._warn_render_size_exceeded(max_cols, max_rows);\n            }\n            if (limit_points) {\n                await this._plugin.create.call(this, this._datavis, this._view, task, max_cols, max_rows, force_update);\n            } else {\n                await this._plugin.create.call(this, this._datavis, this._view, task, undefined, undefined, force_update);\n            }\n        } catch (err) {\n            console.warn(err);\n        } finally {\n            if (!this.__render_times) {\n                this.__render_times = [];\n                this.dispatchEvent(new Event(\"perspective-view-update\"));\n            }\n            timer();\n            task.cancel();\n            if (this._render_count === 0) {\n                this.removeAttribute(\"updating\");\n                this.dispatchEvent(new Event(\"perspective-update-complete\"));\n            }\n        }\n    }\n\n    _check_loaded_table() {\n        if (this._table) {\n            const table = this._table;\n            delete this._table;\n            this._load_table(table);\n        }\n    }\n\n    _render_time() {\n        const t = performance.now();\n        return () => {\n            this.__render_times.unshift(performance.now() - t);\n            this.__render_times = this.__render_times.slice(0, 5);\n        };\n    }\n\n    _restyle_plugin() {\n        if (this._plugin.styleElement) {\n            const task = (this._task = new CancelTask());\n            this._plugin.styleElement.call(this, this._datavis, this._view, task);\n        }\n    }\n\n    _clear_state(clear_table = true) {\n        if (this._task) {\n            this._task.cancel();\n        }\n        const all = [];\n        if (this._view) {\n            const view = this._view;\n            this._view = undefined;\n            all.push(view.delete());\n            view.remove_update(this._view_updater);\n            view.remove_delete();\n        }\n        if (this._table && clear_table) {\n            const table = this._table;\n            this._table = undefined;\n            if (table._owner_viewer && table._owner_viewer === this) {\n                all.push(table.delete());\n            }\n        }\n        return Promise.all(all);\n    }\n\n    _set_updating() {\n        this.toggleAttribute(\"updating\", true);\n        let resolve;\n        this._updating_promise = new Promise(_resolve => {\n            resolve = _resolve;\n        });\n        return resolve;\n    }\n\n    _register_debounce_instance() {\n        const _update = debounce((resolve, ignore_size_check, force_update, limit_points) => {\n            this._new_view({ignore_size_check, force_update, limit_points}).then(resolve);\n        }, 0);\n\n        this._debounce_update = async ({force_update = false, ignore_size_check = false, limit_points = true} = {}) => {\n            if (this._table) {\n                let resolve = this._set_updating();\n                await new Promise(resolve => _update(resolve, ignore_size_check, force_update, limit_points));\n                resolve();\n            }\n        };\n    }\n\n    _get_worker() {\n        if (this._table) {\n            return this._table._worker;\n        }\n        return perspective.shared_worker();\n    }\n}\n"],"file":"perspective_element.js"}