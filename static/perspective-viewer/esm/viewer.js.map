{"version":3,"sources":["../../src/js/viewer.js"],"names":["bindTemplate","json_attribute","array_attribute","copy_to_clipboard","throttlePromise","renderers","register_debug_plugin","template","view_style","default_style","ActionElement","expression_to_computed_column_config","PERSISTENT_ATTRIBUTES","PerspectiveViewer","constructor","_register_debounce_instance","_show_config","_show_warnings","__render_times","_resize_handler","notifyResize","bind","window","addEventListener","connectedCallback","Object","keys","getInstance","length","toggleAttribute","_register_ids","_register_callbacks","_register_view_options","_register_data_attribute","toggleConfig","_check_loaded_table","sort","undefined","hasAttribute","removeAttribute","inner","_sort","querySelector","_update_column_list","s","computed_names","dir","Array","isArray","computed","includes","_new_row","node","getAttribute","dispatchEvent","Event","_debounce_update","columns","show","_initial_col_order","setAttribute","JSON","stringify","slice","_update_column_view","computed_columns","resolve","_set_updating","_computed_expression_editor","style","display","_close_expression_editor","parsed","_get_view_parsed_computed_columns","_reset_computed_column_view","parsed_computed_columns","column","concat","push","computed_schema","_table","validated","_validate_parsed_computed_columns","diff","i","console","warn","old_columns","to_remove","_diff_computed_column_view","_update_computed_column_view","aggregates","lis","_get_view_dom_columns","map","x","agg","filters","_updating_filter","_filters","filter","fterms","operator","operand","name","plugin","v","_vis_selector","options","value","innerHTML","plugin_names","indexOf","guess_plugin","find","error","_vis_selector_changed","_set_row_styles","_set_column_defaults","pivots","_column_pivots","pivot","_row_pivots","editable","force_update","throttle","_calculate_throttle_timeout","selectable","worker","_get_worker","table","view","_view","load","data","Promise","trim","e","type","_owner_viewer","isConnected","_load_table","update","immediate","resized","_check_responsive_layout","document","hidden","offsetParent","_plugin","resize","call","clone","widget","_inner_drop_target","restore","save","delete","delete_table","_clear_state","removeEventListener","restyleElement","_restyle_plugin","obj","cols","Set","key","attributes","attr","has","parse","col","plugin_config","config","hasOwnProperty","val","flush","setTimeout","_updating_promise","clear","replace","_load","reset","_hide_context_menu","download","flat","csv","to_csv","element","createElement","binStr","len","arr","Uint8Array","charCodeAt","blob","Blob","URL","createObjectURL","body","appendChild","click","removeChild","copy","then","catch","err","count","f","_toggle_config"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport \"@webcomponents/webcomponentsjs\";\r\nimport \"./polyfill.js\";\r\n\r\nimport {bindTemplate, json_attribute, array_attribute, copy_to_clipboard, throttlePromise} from \"./utils.js\";\r\nimport {renderers, register_debug_plugin} from \"./viewer/renderers.js\";\r\nimport \"./row.js\";\r\nimport \"./computed_expression_editor.js\";\r\n\r\nimport template from \"../html/viewer.html\";\r\n\r\nimport view_style from \"../less/viewer.less\";\r\nimport default_style from \"../less/default.less\";\r\n\r\nimport {ActionElement} from \"./viewer/action_element.js\";\r\nimport {expression_to_computed_column_config} from \"./computed_expressions/visitor.js\";\r\n\r\n/**\r\n * Module for the `<perspective-viewer>` custom element.\r\n *\r\n * This module has no exports, but importing it has a side\r\n * effect: the {@link module:perspective_viewer~PerspectiveViewer} class is\r\n * registered as a custom element, after which it can be used as a standard DOM\r\n * element.\r\n *\r\n * The documentation in this module defines the instance structure of a\r\n * `<perspective-viewer>` DOM object instantiated typically, through HTML or any\r\n * relevent DOM method e.g. `document.createElement(\"perspective-viewer\")` or\r\n * `document.getElementsByTagName(\"perspective-viewer\")`.\r\n *\r\n * @module perspective-viewer\r\n */\r\n\r\nconst PERSISTENT_ATTRIBUTES = [\"selectable\", \"editable\", \"plugin\", \"computed-columns\", \"row-pivots\", \"column-pivots\", \"aggregates\", \"filters\", \"sort\", \"columns\"];\r\n\r\n/**\r\n * The HTMLElement class for `<perspective-viewer>` custom element.\r\n *\r\n * This class is not exported, so this constructor cannot be invoked in the\r\n * typical manner; instead, instances of the class are created through the\r\n * Custom Elements DOM API.\r\n *\r\n * Properties of an instance of this class, such as\r\n * {@link module:perspective_viewer~PerspectiveViewer#columns}, are reflected on\r\n * the DOM element as Attributes, and should be accessed as such - e.g.\r\n * `instance.setAttribute(\"columns\", JSON.stringify([\"a\", \"b\"]))`.\r\n *\r\n * @class PerspectiveViewer\r\n * @extends {HTMLElement}\r\n * @example\r\n * // Create a new `<perspective-viewer>`\r\n * const elem = document.createElement(\"perspective-viewer\");\r\n * elem.setAttribute(\"columns\", JSON.stringify([\"a\", \"b\"]));\r\n * document.body.appendChild(elem);\r\n *\r\n */\r\n@bindTemplate(template, view_style, default_style) // eslint-disable-next-line no-unused-vars\r\nclass PerspectiveViewer extends ActionElement {\r\n    constructor() {\r\n        super();\r\n        this._register_debounce_instance();\r\n        this._show_config = true;\r\n        this._show_warnings = true;\r\n        this.__render_times = [];\r\n        this._resize_handler = this.notifyResize.bind(this);\r\n        window.addEventListener(\"resize\", this._resize_handler);\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (Object.keys(renderers.getInstance()).length === 0) {\r\n            register_debug_plugin();\r\n        }\r\n\r\n        this.toggleAttribute(\"settings\", true);\r\n\r\n        this._register_ids();\r\n        this._register_callbacks();\r\n        this._register_view_options();\r\n        this._register_data_attribute();\r\n        this.toggleConfig();\r\n        this._check_loaded_table();\r\n    }\r\n\r\n    /**\r\n     * Sets this `perspective.table.view`'s `sort` property, an array of column\r\n     * names.\r\n     *\r\n     * @kind member\r\n     * @type {array<string>} Array of arrays tuples of column name and\r\n     * direction, where the possible values are \"asc\", \"desc\", \"asc abs\", \"desc\r\n     * abs\" and \"none\".\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     * @example <caption>via Javascript DOM</caption>\r\n     * let elem = document.getElementById('my_viewer');\r\n     * elem.setAttribute('sort', JSON.stringify([[\"x\",\"desc\"]));\r\n     * @example <caption>via HTML</caption>\r\n     * <perspective-viewer sort='[[\"x\",\"desc\"]]'></perspective-viewer>\r\n     */\r\n    @array_attribute\r\n    sort(sort) {\r\n        if (sort === null || sort === undefined || sort.length === 0) {\r\n            if (this.hasAttribute(\"sort\")) {\r\n                this.removeAttribute(\"sort\");\r\n            }\r\n            sort = [];\r\n        }\r\n        var inner = this._sort.querySelector(\"ul\");\r\n        this._update_column_list(\r\n            sort,\r\n            inner,\r\n            (s, computed_names) => {\r\n                let dir = \"asc\";\r\n                if (Array.isArray(s)) {\r\n                    dir = s[1];\r\n                    s = s[0];\r\n                }\r\n                let computed = undefined;\r\n                if (computed_names.includes(s)) {\r\n                    computed = s;\r\n                }\r\n                return this._new_row(s, false, false, false, dir, computed);\r\n            },\r\n            (sort, node) => {\r\n                if (Array.isArray(sort)) {\r\n                    return node.getAttribute(\"name\") === sort[0] && node.getAttribute(\"sort-order\") === sort[1];\r\n                }\r\n                return node.getAttribute(\"name\") === sort;\r\n            }\r\n        );\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * The set of visible columns.\r\n     *\r\n     * @kind member\r\n     * @param {array} columns An array of strings, the names of visible columns.\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     * @example <caption>via Javascript DOM</caption>\r\n     * let elem = document.getElementById('my_viewer');\r\n     * elem.setAttribute('columns', JSON.stringify([\"x\", \"y'\"]));\r\n     * @example <caption>via HTML</caption>\r\n     * <perspective-viewer columns='[\"x\", \"y\"]'></perspective-viewer>\r\n     */\r\n    @array_attribute\r\n    columns(show) {\r\n        if (show === null || show === undefined || show.length === 0) {\r\n            if (this.hasAttribute(\"columns\")) {\r\n                if (this._initial_col_order) {\r\n                    this.setAttribute(\"columns\", JSON.stringify(this._initial_col_order));\r\n                } else {\r\n                    this.removeAttribute(\"columns\");\r\n                }\r\n            }\r\n            show = (this._initial_col_order || []).slice();\r\n        }\r\n        this._update_column_view(show, true);\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /* eslint-disable max-len */\r\n\r\n    /**\r\n     * The set of visible columns.\r\n     *\r\n     * @kind member\r\n     * @param {array} computed-columns An array of computed column objects\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     * @example <caption>via Javascript DOM</caption>\r\n     * let elem = document.getElementById('my_viewer');\r\n     * elem.setAttribute('computed-columns', JSON.stringify([{name: \"x+y\", computed_function_name: \"+\", inputs: [\"x\", \"y\"]}]));\r\n     * @example <caption>via HTML</caption>\r\n     * <perspective-viewer computed-columns=\"[{name:'x+y',computed_function_name:'+',inputs:['x','y']}]\"\"></perspective-viewer>\r\n     */\r\n    @array_attribute\r\n    \"computed-columns\"(computed_columns) {\r\n        const resolve = this._set_updating();\r\n\r\n        (async () => {\r\n            if (this._computed_expression_editor.style.display !== \"none\") {\r\n                this._computed_expression_editor._close_expression_editor();\r\n            }\r\n            if (computed_columns === null || computed_columns === undefined || computed_columns.length === 0) {\r\n                // Remove computed columns from the DOM, and reset the config\r\n                // to exclude all computed columns.\r\n                if (this.hasAttribute(\"computed-columns\")) {\r\n                    this.removeAttribute(\"computed-columns\");\r\n                    const parsed = this._get_view_parsed_computed_columns();\r\n                    this._reset_computed_column_view(parsed);\r\n                    this.removeAttribute(\"parsed-computed-columns\");\r\n                    resolve();\r\n                    return;\r\n                }\r\n                computed_columns = [];\r\n            }\r\n\r\n            let parsed_computed_columns = [];\r\n\r\n            for (const column of computed_columns) {\r\n                if (typeof column === \"string\") {\r\n                    // Either validated through the UI, or will be validated\r\n                    // here. TODO: rearchitect so we don't triple parse each\r\n                    // expression.\r\n                    parsed_computed_columns = parsed_computed_columns.concat(expression_to_computed_column_config(column));\r\n                } else {\r\n                    parsed_computed_columns.push(column);\r\n                }\r\n            }\r\n\r\n            // Attempt to validate the parsed computed columns against the Table\r\n            let computed_schema = {};\r\n\r\n            if (this._table) {\r\n                computed_schema = await this._table.computed_schema(parsed_computed_columns);\r\n                const validated = await this._validate_parsed_computed_columns(parsed_computed_columns, computed_schema);\r\n                if (validated.length !== parsed_computed_columns.length) {\r\n                    // Generate a diff error message with the invalid columns\r\n                    const diff = [];\r\n                    for (let i = 0; i < parsed_computed_columns.length; i++) {\r\n                        if (i > validated.length - 1) {\r\n                            diff.push(parsed_computed_columns[i]);\r\n                        } else {\r\n                            if (parsed_computed_columns[i].column !== validated[i].column) {\r\n                                diff.push(parsed_computed_columns[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    console.warn(\"Could not apply these computed columns:\", JSON.stringify(diff));\r\n                }\r\n                parsed_computed_columns = validated;\r\n            }\r\n\r\n            // Need to refresh the UI so that previous computed columns used in\r\n            // pivots, columns, etc. get cleared\r\n            const old_columns = this._get_view_parsed_computed_columns();\r\n            const to_remove = this._diff_computed_column_view(old_columns, parsed_computed_columns);\r\n            this._reset_computed_column_view(to_remove);\r\n\r\n            // Always store a copy of the parsed computed columns for\r\n            // validation of column names, etc.\r\n            this.setAttribute(\"parsed-computed-columns\", JSON.stringify(parsed_computed_columns));\r\n\r\n            this._update_computed_column_view(computed_schema);\r\n            this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n            await this._debounce_update();\r\n            resolve();\r\n        })();\r\n    }\r\n\r\n    /* eslint-enable max-len */\r\n\r\n    /**\r\n     * The set of column aggregate configurations.\r\n     *\r\n     * @kind member\r\n     * @param {object} aggregates A dictionary whose keys are column names, and\r\n     * values are valid aggregations. The `aggregates` attribute works as an\r\n     * override; in lieu of a key for a column supplied by the developers, a\r\n     * default will be selected and reflected to the attribute based on the\r\n     * column's type.  See {@link perspective/src/js/defaults.js}\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     * @example <caption>via Javascript DOM</caption>\r\n     * let elem = document.getElementById('my_viewer');\r\n     * elem.setAttribute('aggregates', JSON.stringify({x: \"distinct count\"}));\r\n     * @example <caption>via HTML</caption>\r\n     * <perspective-viewer aggregates='{\"x\": \"distinct count\"}'>\r\n     * </perspective-viewer>\r\n     */\r\n    @json_attribute\r\n    aggregates(show) {\r\n        if (show === null || show === undefined || Object.keys(show).length === 0) {\r\n            if (this.hasAttribute(\"aggregates\")) {\r\n                this.removeAttribute(\"aggregates\");\r\n            }\r\n            show = {};\r\n        }\r\n\r\n        let lis = this._get_view_dom_columns();\r\n        lis.map(x => {\r\n            let agg = show[x.getAttribute(\"name\")];\r\n            if (agg) {\r\n                x.setAttribute(\"aggregate\", Array.isArray(agg) ? JSON.stringify(agg) : agg);\r\n            }\r\n        });\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * The set of column filter configurations.\r\n     *\r\n     * @kind member\r\n     * @type {array} filters An array of filter config objects. A filter config\r\n     * object is an array of three elements: * The column name. * The filter\r\n     * operation as a string. See\r\n     * {@link perspective/src/js/config/constants.js} * The filter argument, as\r\n     * a string, float or Array<string> as the filter operation demands.\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     * @example <caption>via Javascript DOM</caption>\r\n     * let filters = [\r\n     *     [\"x\", \"<\", 3],\r\n     *     [\"y\", \"contains\", \"abc\"]\r\n     * ];\r\n     * let elem = document.getElementById('my_viewer');\r\n     * elem.setAttribute('filters', JSON.stringify(filters));\r\n     * @example <caption>via HTML</caption>\r\n     * <perspective-viewer filters='[[\"x\", \"<\", 3], [\"y\", \"contains\", \"abc\"]]'>\r\n     * </perspective-viewer>\r\n     */\r\n    @array_attribute\r\n    filters(filters) {\r\n        if (filters === null || filters === undefined || filters.length === 0) {\r\n            if (this.hasAttribute(\"filters\")) {\r\n                this.removeAttribute(\"filters\");\r\n            }\r\n            filters = [];\r\n        }\r\n        if (!this._updating_filter) {\r\n            var inner = this._filters.querySelector(\"ul\");\r\n            this._update_column_list(\r\n                filters,\r\n                inner,\r\n                (filter, computed_names) => {\r\n                    const fterms = JSON.stringify({\r\n                        operator: filter[1],\r\n                        operand: filter[2]\r\n                    });\r\n                    const name = filter[0];\r\n                    let computed = undefined;\r\n                    if (computed_names.includes(name)) {\r\n                        computed = name;\r\n                    }\r\n                    return this._new_row(name, undefined, undefined, fterms, undefined, computed);\r\n                },\r\n                (filter, node) =>\r\n                    node.getAttribute(\"name\") === filter[0] &&\r\n                    node.getAttribute(\"filter\") ===\r\n                        JSON.stringify({\r\n                            operator: filter[1],\r\n                            operand: filter[2]\r\n                        })\r\n            );\r\n        }\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * Sets the currently selected plugin, via its `name` field, and removes\r\n     * any children the previous plugin may have left behind in the light DOM.\r\n     *\r\n     * @type {string}\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     */\r\n    set plugin(v) {\r\n        if (v === \"null\" || v === null || v === undefined) {\r\n            this.setAttribute(\"plugin\", this._vis_selector.options[0].value);\r\n            return;\r\n        }\r\n        this.innerHTML = \"\";\r\n        const plugin_names = Object.keys(renderers.getInstance());\r\n        if (this.hasAttribute(\"plugin\")) {\r\n            let plugin = this.getAttribute(\"plugin\");\r\n            if (plugin_names.indexOf(plugin) === -1) {\r\n                const guess_plugin = plugin_names.find(x => x.indexOf(plugin) > -1);\r\n                if (guess_plugin) {\r\n                    console.warn(`Unknown plugin \"${plugin}\", using \"${guess_plugin}\"`);\r\n                    this.setAttribute(\"plugin\", guess_plugin);\r\n                } else {\r\n                    console.error(`Unknown plugin \"${plugin}\"`);\r\n                    this.setAttribute(\"plugin\", this._vis_selector.options[0].value);\r\n                }\r\n            } else {\r\n                if (this._vis_selector.value !== plugin) {\r\n                    this._vis_selector.value = plugin;\r\n                    this._vis_selector_changed();\r\n                }\r\n                this._set_row_styles();\r\n                this._set_column_defaults();\r\n                this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n            }\r\n        } else {\r\n            this.setAttribute(\"plugin\", this._vis_selector.options[0].value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets this `perspective.table.view`'s `column_pivots` property.\r\n     *\r\n     * @kind member\r\n     * @type {Array<String>} Array of column names\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     */\r\n    @array_attribute\r\n    \"column-pivots\"(pivots) {\r\n        if (pivots === null || pivots === undefined || pivots.length === 0) {\r\n            if (this.hasAttribute(\"column-pivots\")) {\r\n                this.removeAttribute(\"column-pivots\");\r\n            }\r\n            pivots = [];\r\n        }\r\n\r\n        const inner = this._column_pivots.querySelector(\"ul\");\r\n        this._update_column_list(pivots, inner, (pivot, computed_names) => {\r\n            let computed = undefined;\r\n            if (computed_names.includes(pivot)) {\r\n                computed = pivot;\r\n            }\r\n            return this._new_row(pivot, undefined, undefined, undefined, undefined, computed);\r\n        });\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * Sets this `perspective.table.view`'s `row_pivots` property.\r\n     *\r\n     * @kind member\r\n     * @type {array<string>} Array of column names\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     */\r\n    @array_attribute\r\n    \"row-pivots\"(pivots) {\r\n        if (pivots === null || pivots === undefined || pivots.length === 0) {\r\n            if (this.hasAttribute(\"row-pivots\")) {\r\n                this.removeAttribute(\"row-pivots\");\r\n            }\r\n            pivots = [];\r\n        }\r\n\r\n        const inner = this._row_pivots.querySelector(\"ul\");\r\n        this._update_column_list(pivots, inner, (pivot, computed_names) => {\r\n            let computed = undefined;\r\n            if (computed_names.includes(pivot)) {\r\n                computed = pivot;\r\n            }\r\n            return this._new_row(pivot, undefined, undefined, undefined, undefined, computed);\r\n        });\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * Determines whether this viewer is editable or not (though it is\r\n     * ultimately up to the plugin as to whether editing is implemented).\r\n     *\r\n     * @kind member\r\n     * @type {boolean} Is this viewer editable?\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     */\r\n    set editable(x) {\r\n        if (x === \"null\") {\r\n            if (this.hasAttribute(\"editable\")) {\r\n                this.removeAttribute(\"editable\");\r\n            }\r\n        } else {\r\n            this.toggleAttribute(\"editable\", true);\r\n        }\r\n        this._debounce_update({force_update: true});\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n    }\r\n\r\n    /**\r\n     * Determines the render throttling behavior. Can be an integer, for\r\n     * millisecond window to throttle render event; or, if `undefined`,\r\n     * will try to determine the optimal throttle time from this component's\r\n     * render framerate.\r\n     *\r\n     * @kind member\r\n     * @type {integer|string} The throttle rate - milliseconds (integer), or the\r\n     * enum \"adaptive\" for a dynamic throttle based on render time.\r\n     * @example\r\n     * <!-- Only draws at most 1 frame/sec. -->\r\n     * <perspective-viewer throttle=\"1000\"></perspective-viewer>\r\n     */\r\n    set throttle(x) {\r\n        if (x === \"null\") {\r\n            if (this.hasAttribute(\"throttle\")) {\r\n                this.removeAttribute(\"throttle\");\r\n            }\r\n        }\r\n        // Returns the throttle time, but also perform validaiton - we only want\r\n        // the latter here.\r\n        this._calculate_throttle_timeout();\r\n    }\r\n\r\n    /*\r\n     * Determines whether row selections is enabled on this viewer (though it is\r\n     * ultimately up to the plugin as to whether selectable is implemented).\r\n     *\r\n     * @kind member\r\n     * @type {boolean} Is this viewer editable?\r\n     * @fires PerspectiveViewer#perspective-config-update\r\n     */\r\n    set selectable(x) {\r\n        if (x === \"null\") {\r\n            if (this.hasAttribute(\"selectable\")) {\r\n                this.removeAttribute(\"selectable\");\r\n            }\r\n        } else {\r\n            this.toggleAttribute(\"selectable\", true);\r\n        }\r\n        this._debounce_update({force_update: true});\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n    }\r\n\r\n    /**\r\n     * This element's `perspective` worker instance. This property is not\r\n     * reflected as an HTML attribute, and is readonly; it can be effectively\r\n     * set however by calling the `load() method with a `perspective.table`\r\n     * instance from the preferred worker.\r\n     *\r\n     * @readonly\r\n     * @example\r\n     * let elem = document.getElementById('my_viewer');\r\n     * let table = elem.worker.table([{x:1, y:2}]);\r\n     * elem.load(table);\r\n     */\r\n    get worker() {\r\n        return this._get_worker();\r\n    }\r\n\r\n    /**\r\n     * This element's `perspective.table` instance.\r\n     *\r\n     * @readonly\r\n     */\r\n    get table() {\r\n        return this._table;\r\n    }\r\n\r\n    /**\r\n     * This element's `perspective.table.view` instance. The instance itself\r\n     * will change after every `PerspectiveViewer#perspective-config-update`\r\n     * event.\r\n     *\r\n     * @readonly\r\n     */\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    /**\r\n     * Load data. If `load` or `update` have already been called on this\r\n     * element, its internal `perspective.table` will also be deleted.\r\n     *\r\n     * @async\r\n     * @param {any} data The data to load.  Works with the same input types\r\n     * supported by `perspective.table`.\r\n     * @returns {Promise<void>} A promise which resolves once the data is loaded\r\n     * and a `perspective.view` has been created.\r\n     * @fires module:perspective_viewer~PerspectiveViewer#perspective-click\r\n     * PerspectiveViewer#perspective-view-update\r\n     * ]);\r\n     * @example <caption>Load CSV</caption>\r\n     * const my_viewer = document.getElementById('#my_viewer');\r\n     * my_viewer.load(\"x,y\\n1,a\\n2,b\");\r\n     * @example <caption>Load perspective.table</caption>\r\n     * const my_viewer = document.getElementById('#my_viewer');\r\n     * const tbl = perspective.table(\"x,y\\n1,a\\n2,b\");\r\n     * my_viewer.load(tbl);\r\n     * @example <caption>Load Promise<perspective.table></caption>\r\n     * const my_viewer = document.getElementById('#my_viewer');\r\n     * const tbl = async () => perspective.table(\"x,y\\n1,a\\n2,b\");\r\n     * my_viewer.load(tbl);\r\n     */\r\n    async load(data, options) {\r\n        let table;\r\n        if (data instanceof Promise) {\r\n            table = await data;\r\n        } else {\r\n            try {\r\n                data = data.trim();\r\n            } catch (e) {}\r\n            if (data.type === \"table\") {\r\n                table = data;\r\n            } else {\r\n                table = this.worker.table(data, options);\r\n                table._owner_viewer = this;\r\n            }\r\n        }\r\n        if (this.isConnected) {\r\n            await this._load_table(table);\r\n        } else {\r\n            this._table = table;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates this element's `perspective.table` with new data.\r\n     *\r\n     * @param {any} data The data to load.  Works with the same input types\r\n     * supported by `perspective.table.update`.\r\n     * @fires PerspectiveViewer#perspective-view-update\r\n     * @example\r\n     * const my_viewer = document.getElementById('#my_viewer');\r\n     * my_viewer.update([\r\n     *     {x: 1, y: 'a'},\r\n     *     {x: 2, y: 'b'}\r\n     * ]);\r\n     */\r\n    update(data) {\r\n        if (this._table === undefined) {\r\n            this.load(data);\r\n        } else {\r\n            this._table.update(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine whether to reflow the viewer and redraw.\r\n     *\r\n     */\r\n    @throttlePromise\r\n    async notifyResize(immediate) {\r\n        const resized = await this._check_responsive_layout();\r\n        if (!resized && !document.hidden && this.offsetParent) {\r\n            await this._plugin.resize.call(this, immediate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Duplicate an existing `<perspective-element>`, including data and view\r\n     * settings.  The underlying `perspective.table` will be shared between both\r\n     * elements\r\n     *\r\n     * @param {any} widget A `<perspective-viewer>` instance to clone.\r\n     */\r\n    clone(widget) {\r\n        if (this._inner_drop_target) {\r\n            this._inner_drop_target.innerHTML = widget._inner_drop_target.innerHTML;\r\n        }\r\n\r\n        this._load_table(widget.table);\r\n        this.restore(widget.save());\r\n    }\r\n\r\n    /**\r\n     * Deletes this element's data and clears it's internal state (but not its\r\n     * user state).  This (or the underlying `perspective.table`'s equivalent\r\n     * method) must be called in order for its memory to be reclaimed.\r\n     *\r\n     * @param {boolean} delete_table Should a delete call also be made to the\r\n     * underlying `table()`.\r\n     * @returns {Promise<boolean>} Whether or not this call resulted in the\r\n     * underlying `perspective.table` actually being deleted.\r\n     */\r\n    delete(delete_table = true) {\r\n        let x = this._clear_state(delete_table);\r\n        if (this._plugin.delete) {\r\n            this._plugin.delete.call(this);\r\n        }\r\n        window.removeEventListener(\"load\", this._resize_handler);\r\n        window.removeEventListener(\"resize\", this._resize_handler);\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Restyles the elements and to pick up any style changes\r\n     */\r\n    restyleElement() {\r\n        this._restyle_plugin();\r\n    }\r\n\r\n    /**\r\n     * Serialize this element's attribute/interaction state.\r\n     *\r\n     * @returns {object} a serialized element.\r\n     */\r\n    save() {\r\n        let obj = {};\r\n        const cols = new Set(PERSISTENT_ATTRIBUTES);\r\n        for (let key = 0; key < this.attributes.length; key++) {\r\n            let attr = this.attributes[key];\r\n            if (cols.has(attr.name)) {\r\n                if (attr.value === \"\") {\r\n                    obj[attr.name] = true;\r\n                } else if (attr.name !== \"plugin\" && attr.value !== undefined && attr.value !== null) {\r\n                    obj[attr.name] = JSON.parse(attr.value);\r\n                } else {\r\n                    obj[attr.name] = attr.value;\r\n                }\r\n                cols.delete(attr.name);\r\n            }\r\n        }\r\n        for (const col of cols) {\r\n            obj[col] = null;\r\n        }\r\n        if (this._plugin.save) {\r\n            obj.plugin_config = this._plugin.save.call(this);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Restore this element to a state as generated by a reciprocal call to\r\n     * `save` or `serialize`.\r\n     *\r\n     * @param {object|string} config returned by `save` or `serialize`.\r\n     * @returns {Promise<void>} A promise which resolves when the changes have\r\n     * been applied.\r\n     */\r\n    async restore(config) {\r\n        if (typeof config === \"string\") {\r\n            config = JSON.parse(config);\r\n        }\r\n        for (const key of PERSISTENT_ATTRIBUTES) {\r\n            if (config.hasOwnProperty(key)) {\r\n                let val = config[key];\r\n                if (val === true) {\r\n                    this.toggleAttribute(key, true);\r\n                } else if (val !== undefined && val !== null && val !== false) {\r\n                    if (typeof val !== \"string\") {\r\n                        val = JSON.stringify(val);\r\n                    }\r\n                    this.setAttribute(key, val);\r\n                } else {\r\n                    this.removeAttribute(key);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._plugin.restore && config.plugin_config) {\r\n            this._plugin.restore.call(this, config.plugin_config);\r\n        }\r\n        await this._debounce_update();\r\n    }\r\n\r\n    /**\r\n     * Flush any pending attribute modifications to this element.\r\n     *\r\n     * @returns {Promise<void>} A promise which resolves when the current\r\n     * attribute state has been applied.\r\n     */\r\n    async flush() {\r\n        await new Promise(setTimeout);\r\n        while (this.hasAttribute(\"updating\")) {\r\n            await this._updating_promise;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the rows in the current {@link table}.\r\n     */\r\n    clear() {\r\n        this._table?.clear();\r\n    }\r\n\r\n    /**\r\n     * Replaces all rows in the current {@link table}.\r\n     */\r\n    replace(data) {\r\n        this._table ? this._table.replace(data) : this._load(data);\r\n    }\r\n\r\n    /**\r\n     * Reset's this element's view state and attributes to default.  Does not\r\n     * delete this element's `perspective.table` or otherwise modify the data\r\n     * state.\r\n     */\r\n    reset() {\r\n        this.removeAttribute(\"row-pivots\");\r\n        this.removeAttribute(\"column-pivots\");\r\n        this.removeAttribute(\"filters\");\r\n        this.removeAttribute(\"sort\");\r\n        if (this._initial_col_order) {\r\n            this.setAttribute(\"columns\", JSON.stringify(this._initial_col_order));\r\n        } else {\r\n            this.removeAttribute(\"columns\");\r\n        }\r\n        this.setAttribute(\"plugin\", Object.keys(renderers.getInstance())[0]);\r\n        this.dispatchEvent(new Event(\"perspective-config-update\"));\r\n        this._hide_context_menu();\r\n    }\r\n\r\n    /**\r\n     * Download this element's data as a CSV file.\r\n     *\r\n     * @param {boolean} [flat=false] Whether to use the element's current view\r\n     * config, or to use a default \"flat\" view.\r\n     * @memberof PerspectiveViewer\r\n     */\r\n    async download(flat = false) {\r\n        const view = flat ? this._table.view() : this._view;\r\n        const csv = await view.to_csv();\r\n        const element = document.createElement(\"a\");\r\n        const binStr = csv;\r\n        const len = binStr.length;\r\n        const arr = new Uint8Array(len);\r\n        for (let i = 0; i < len; i++) {\r\n            arr[i] = binStr.charCodeAt(i);\r\n        }\r\n        const blob = new Blob([arr]);\r\n        element.setAttribute(\"href\", URL.createObjectURL(blob));\r\n        element.setAttribute(\"download\", \"perspective.csv\");\r\n        element.style.display = \"none\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n        this._hide_context_menu();\r\n    }\r\n\r\n    /**\r\n     * Copies this element's view data (as a CSV) to the clipboard.  This method\r\n     * must be called from an event handler, subject to the browser's\r\n     * restrictions on clipboard access.  See\r\n     * {@link https://www.w3.org/TR/clipboard-apis/#allow-read-clipboard}.\r\n     */\r\n    copy(flat = false) {\r\n        let data;\r\n        const view = flat ? this._table.view() : this._view;\r\n        view.to_csv()\r\n            .then(csv => {\r\n                data = csv;\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                data = \"\";\r\n            });\r\n        let count = 0;\r\n        let f = () => {\r\n            if (typeof data !== \"undefined\") {\r\n                copy_to_clipboard(data);\r\n            } else if (count < 200) {\r\n                count++;\r\n                setTimeout(f, 50);\r\n            } else {\r\n                console.warn(\"Timeout expired - copy to clipboard cancelled.\");\r\n            }\r\n        };\r\n        f();\r\n        this._hide_context_menu();\r\n    }\r\n\r\n    /**\r\n     * Opens/closes the element's config menu.\r\n     *\r\n     * @async\r\n     */\r\n    async toggleConfig() {\r\n        await this._toggle_config();\r\n    }\r\n}\r\n\r\n/**\r\n * `perspective-click` is fired whenever underlying `view`'s grid or chart are\r\n * clicked providing a detail that includes a `config`, `column_names` and\r\n * `row`.\r\n *\r\n * @event module:perspective_viewer~PerspectiveViewer#perspective-click\r\n * @type {object}\r\n * @property {array} column_names - Includes a list of column names.\r\n * @property {object} config - Contains a property `filters` that can be applied\r\n * to a `<perspective-viewer>` through the use of `restore()` updating it to\r\n * show the filtered subset of data..\r\n * @property {array} row - Includes the data row.\r\n */\r\n\r\n/**\r\n * `perspective-config-update` is fired whenever an configuration attribute has\r\n * been modified, by the user or otherwise.\r\n *\r\n * @event module:perspective_viewer~PerspectiveViewer#perspective-config-update\r\n * @type {string}\r\n */\r\n\r\n/**\r\n * `perspective-view-update` is fired whenever underlying `view`'s data has\r\n * updated, including every invocation of `load` and `update`.\r\n *\r\n * @event module:perspective_viewer~PerspectiveViewer#perspective-view-update\r\n * @type {string}\r\n */\r\n"],"file":"viewer.js"}