{"version":3,"sources":["../../src/js/custom_styles.js"],"names":["get_type_config","get_types","get_style","elem","name","value","window","ShadyCSS","getComputedStyleValue","getComputedStyle","getPropertyValue","trim","undefined","get_measure","parseInt","get_font","title","length","font_size","font_family","copy_defined","source","dest","f","key","Object","keys","val","Array","isArray","candidate","style","calc_rec","result","type","types","iter","props","parent","get_type_deps","unshift","STYLE_PROPERTIES","Symbol","PropsBuilder","constructor","_staged_props","_staged_fonts","_staged_measures","add_measures","push","_initialized","add_styles","add_fonts","clear_properties","get_properties"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {get_type_config, get_types} from \"@finos/perspective/dist/esm/config\";\n\nexport function get_style(elem, name) {\n    let value;\n    if (window.ShadyCSS) {\n        value = window.ShadyCSS.getComputedStyleValue(elem, name);\n    } else {\n        value = getComputedStyle(elem).getPropertyValue(name);\n    }\n    if (value.trim() === \"\") {\n        return undefined;\n    }\n    return value;\n}\n\nfunction get_measure(elem, name) {\n    let value;\n    if (window.ShadyCSS) {\n        value = window.ShadyCSS.getComputedStyleValue(elem, name);\n    } else {\n        value = getComputedStyle(elem).getPropertyValue(name);\n    }\n    if (value.trim() === \"\") {\n        return undefined;\n    }\n    return parseInt(value);\n}\n\nfunction get_font(elem, title) {\n    if (title.length > 0) {\n        title += \"--\";\n    }\n    const font_size = get_style(elem, `${title}font-size`);\n    const font_family = get_style(elem, `${title}font-family`);\n\n    // FIXME this sucks but it is difficult to partially apply fonts in\n    // Hypergrid's API Fonts will not be picked up unless both font-size and\n    // font-family are defined for a specific scope.\n    if (!font_size || !font_family) {\n        return undefined;\n    }\n    return `${font_size} ${font_family}`;\n}\n\nfunction copy_defined(source, dest, f) {\n    for (const key of Object.keys(source)) {\n        const val = source[key];\n        if (Array.isArray(val) && f) {\n            for (const candidate of val) {\n                const style = f(candidate);\n                if (style !== undefined) {\n                    dest[key] = style;\n                    break;\n                }\n            }\n        } else if (typeof val === \"string\" && f) {\n            const style = f(val);\n            if (style !== undefined) {\n                dest[key] = style;\n            }\n        } else if (typeof val === \"object\") {\n            dest[key] = dest[key] || {};\n            copy_defined(val, dest[key], f);\n        } else {\n            dest[key] = val;\n        }\n    }\n}\n\nfunction calc_rec(result, type, elem, types, iter, f) {\n    result[type] = result[type] || {};\n    for (const props of iter) {\n        copy_defined(props, result[type], name => f(elem, name));\n        for (const parent of types[type]) {\n            copy_defined(props, result[type], name => f(elem, `--${parent}${name}`));\n        }\n    }\n}\n\nfunction get_type_deps() {\n    const types = {\"\": []};\n    for (const type of get_types()) {\n        types[type] = [];\n        let parent = type;\n        while (parent && parent.length) {\n            types[type].unshift(parent);\n            parent = get_type_config(parent).type;\n        }\n    }\n    return types;\n}\n\nconst STYLE_PROPERTIES = Symbol(\"Perspective Style Properties\");\n\nexport class PropsBuilder {\n    constructor() {\n        this._staged_props = [];\n        this._staged_fonts = [];\n        this._staged_measures = [];\n    }\n\n    add_measures(props) {\n        this._staged_measures.push(props);\n        this._initialized = false;\n    }\n\n    add_styles(props) {\n        this._staged_props.push(props);\n        this._initialized = false;\n    }\n\n    add_fonts(props) {\n        this._staged_fonts.push(props);\n        this._initialized = false;\n    }\n\n    clear_properties(elem) {\n        delete elem[STYLE_PROPERTIES];\n    }\n\n    get_properties(elem) {\n        if (!elem[STYLE_PROPERTIES]) {\n            const types = get_type_deps();\n            const result = (elem[STYLE_PROPERTIES] = {});\n            calc_rec(result, \"\", elem, types, this._staged_measures, get_measure);\n            calc_rec(result, \"\", elem, types, this._staged_props, get_style);\n            calc_rec(result, \"\", elem, types, this._staged_fonts, get_font);\n            for (const type of get_types()) {\n                calc_rec(result, type, elem, types, this._staged_measures, get_measure);\n                calc_rec(result, type, elem, types, this._staged_props, get_style);\n                calc_rec(result, type, elem, types, this._staged_fonts, get_font);\n            }\n        }\n        return elem[STYLE_PROPERTIES];\n    }\n}\n"],"file":"custom_styles.js"}