{"version":3,"sources":["webpack:///packages/perspective-viewer-highcharts/webpack/universalModuleDefinition","webpack:///packages/perspective-viewer-highcharts/webpack/bootstrap","webpack:///packages/perspective-viewer-highcharts/external \"highcharts\"","webpack:///packages/perspective-viewer-highcharts/external \"@finos/perspective/dist/esm/config\"","webpack:///packages/perspective-viewer-highcharts/external \"core-js/modules/web.dom-collections.iterator\"","webpack:///packages/perspective-viewer-highcharts/dist/less/highcharts.less","webpack:///packages/perspective-viewer-highcharts/dist/html/highcharts.html","webpack:///packages/perspective-viewer-highcharts/external \"highcharts-more\"","webpack:///packages/perspective-viewer-highcharts/external \"highcharts/modules/heatmap\"","webpack:///packages/perspective-viewer-highcharts/external \"highcharts/modules/boost\"","webpack:///packages/perspective-viewer-highcharts/external \"highcharts/modules/treemap\"","webpack:///packages/perspective-viewer-highcharts/external \"highcharts/modules/sunburst\"","webpack:///packages/perspective-viewer-highcharts/external \"highcharts-grouped-categories\"","webpack:///packages/perspective-viewer-highcharts/external \"gradient-parser\"","webpack:///packages/perspective-viewer-highcharts/external \"@finos/perspective-viewer/dist/esm/utils\"","webpack:///packages/perspective-viewer-highcharts/external \"detectie\"","webpack:///packages/perspective-viewer-highcharts/external \"@finos/perspective-viewer/dist/esm/utils.js\"","webpack:///node_modules/css-loader/lib/css-base.js","webpack:///packages/perspective-viewer-highcharts/external \"core-js/modules/es.string.replace\"","webpack:///../src/js/highcharts/externals.js","webpack:///../src/js/highcharts/color_axis.js","webpack:///../src/js/highcharts/series.js","webpack:///../src/js/highcharts/tooltip.js","webpack:///../src/js/highcharts/config.js","webpack:///../src/js/highcharts/draw.js","webpack:///../src/js/highcharts/highcharts.js","webpack:///src/js/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__12__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__16__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","push","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","Highcharts","highcharts","axisProto","Axis","protoAxisRender","render","highchartsMore","heatmap","treemap","sunburst","grouped_categories","boost","COLORS_10","COLORS_20","setOptions","colors","H","wrap","seriesTypes","scatter","translate","apply","Array","slice","arguments","chart","userOptions","type","translateColors","merge","extendClass","plotOptions","getOptions","colorSeriesMixin","optionalAxis","colorKey","coloredColumn","column","axisTypes","coloredScatter","coloredBubble","bubble","positions","series","nullColor","options","colorAxis","each","data","point","color","undefined","toColor","isGrouped","labelsGridPath","originalTickLength","tickLength","labelsGrid","attr","visibility","axis","visible","hasVisibleSeries","hasData","grid","tickWidth","renderer","path","strokeWidth","stroke","tickColor","add","axisGroup","addClass","labelGroup","walk","arr","fn","children","categoriesTree","group","tick","startAt","leaves","min","max","label","hide","destroyed","_get_gradient","gradient","ShadyCSS","getComputedStyleValue","getComputedStyle","getPropertyValue","parsed","gparser","colorStops","x","Number","parseFloat","_get_gradients","gradients","restyle","color_axis","config","colorRange","positive","negative","full","assign","stops","reversed","startOnTick","endOnTick","legend","floating","enabled","COLUMN_SEPARATOR_STRING","row_to_series","sname","gname","sidx","is_group","stack","connectNulls","column_to_series","replace_null","str","TreeAxisIterator","constructor","depth","json","top","categories","add_label","parent","lidx","cidx","iterator","row","__ROW_PATH__","ChartAxis","columns","fill_axis","RowIterator","rows","keys","filter","prop","is_stacked","substr","lastIndexOf","index","self","indexOf","ColumnIterator","pivot_length","column_names","filtered_data","TickClean","dict","names","clean","val","isNaN","MakeTick","schema","xaxis_clean","yaxis_clean","color_clean","make","y","color_index","marker","lineColor","fillColor","Math","colorValue","z","make_col","cols","col_names","num_cols","row_path","color_range","is_line","ticks","size","tooltip_index","tooltip","make_xy_column_data","aggs","pivots","col_pivots","data_cols","Infinity","make_tick","groups","clean_row_path","real_index","col","column_levels","split","group_name","make_xyz_data","js","ytree_type","rows2","make_y_heatmap_data","reverse","ytop","ylabels","maxdepth","ylabel","cat","make_tree_axis","j","cmax","abs","TreeIterator","make_tree_data","row_pivots","aggregates","leaf_only","rp","idx","leaf","configs","levels","title","layoutAlgorithm","allowDrillToNode","alternateStartingDirection","make_configs","level","borderWidth","dataLabels","allowOverlap","style","opacity","fontSize","textOutline","make_levels","all","colorvals","make_color","collate_single_value","raw_value","formatted_value","format_value","get_axis_type","collate_multiple_values","titles","values","output","get_pivot_values","unshift","axis_title","value_exists","Date","toLocaleString","get_type_config","format","num","parseInt","set_boost","types","useGPUTranslations","usePreAllocated","boostThreshold","turboThreshold","set_tick_size","new_radius","floor","clientWidth","clientHeight","radius","set_both_axis","tree_type","set_category_axis","opts","text","labels","overflow","set_axis","year","month","day","hour","minute","autoRotation","padding","default_config","hover_type","that","_config","pivot_titles","column_pivots","inverted","animation","zoomType","resetZoomButton","position","align","navigation","buttonOptions","credits","verticalAlign","layout","itemStyle","fontWeight","area","stacking","line","states","hover","brightness","borderColor","lineWidth","lineWidthPlus","events","click","async","row_pivots_values","column_pivot_values","console","log","category","row_filters","column_filters","filters","f","start_row","end_row","stack_name","column_name","replace","is_empty","_view","to_json","dispatchEvent","CustomEvent","bubbles","composed","detail","backgroundColor","followPointer","valueDecimals","formatter","highcharts_tooltip","then","tooltip_text","context","axis_titles","row_pivots_titles","column_pivot_titles","has_row_pivots","has_column_pivots","row_pivots_text","column_pivot_text","axis_type","has_x_values","has_y_values","has_z_values","has_w_values","extra_text","x_text","y_text","z_text","w_text","default_value","catch","err","error","positioner","labelWidth","labelHeight","tooltipX","tooltipY","plotX","plotWidth","plotLeft","plotY","plotHeight","plotTop","PRIVATE","get_or_create_element","div","perspective_highcharts_element","document","createElement","body","contains","innerHTML","appendChild","draw","set_config","el","view","task","end_col","get_config","cancelled","real_columns","parse","getAttribute","tschema","Promise","_table","element","xaxis_name","xaxis_type","yaxis_name","yaxis_type","xtree_type","num_aggregates","to_columns","leaves_only","xtop","charts","prev","make_xy_data","make_y_data","yAxis","hasAttribute","delete","bindTemplate","template","super","_charts","connectedCallback","_container","shadowRoot","querySelector","callee","target","renderTo","destroy","e","warn","conf","update","xAxis","className","every","remove","resize","detectIE","setTimeout","reflow","tagName","removeChild","delete_chart","MAX_CELL_COUNT","MAX_COLUMN_COUNT","PLUGINS","x_bar","initial","count","selectMode","max_cells","max_columns","y_bar","y_line","y_scatter","y_area","xy_line","xy_scatter","styleElement","plugins","plugin","registerPlugin","register"],"mappings":"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","file":"perspective-viewer-highcharts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"@finos/perspective/dist/esm/config\"), require(\"core-js/modules/web.dom-collections.iterator\"), require(\"highcharts-more\"), require(\"highcharts/modules/heatmap\"), require(\"highcharts/modules/boost\"), require(\"highcharts/modules/treemap\"), require(\"highcharts/modules/sunburst\"), require(\"highcharts-grouped-categories\"), require(\"gradient-parser\"), require(\"@finos/perspective-viewer/dist/esm/utils\"), require(\"detectie\"), require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"core-js/modules/es.string.replace\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"highcharts\", \"@finos/perspective/dist/esm/config\", \"core-js/modules/web.dom-collections.iterator\", \"highcharts-more\", \"highcharts/modules/heatmap\", \"highcharts/modules/boost\", \"highcharts/modules/treemap\", \"highcharts/modules/sunburst\", \"highcharts-grouped-categories\", \"gradient-parser\", \"@finos/perspective-viewer/dist/esm/utils\", \"detectie\", \"@finos/perspective-viewer/dist/esm/utils.js\", \"core-js/modules/es.string.replace\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"perspective-viewer-highcharts\"] = factory(require(\"highcharts\"), require(\"@finos/perspective/dist/esm/config\"), require(\"core-js/modules/web.dom-collections.iterator\"), require(\"highcharts-more\"), require(\"highcharts/modules/heatmap\"), require(\"highcharts/modules/boost\"), require(\"highcharts/modules/treemap\"), require(\"highcharts/modules/sunburst\"), require(\"highcharts-grouped-categories\"), require(\"gradient-parser\"), require(\"@finos/perspective-viewer/dist/esm/utils\"), require(\"detectie\"), require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"core-js/modules/es.string.replace\"));\n\telse\n\t\troot[\"perspective-viewer-highcharts\"] = factory(root[\"highcharts\"], root[\"@finos/perspective/dist/esm/config\"], root[\"core-js/modules/web.dom-collections.iterator\"], root[\"highcharts-more\"], root[\"highcharts/modules/heatmap\"], root[\"highcharts/modules/boost\"], root[\"highcharts/modules/treemap\"], root[\"highcharts/modules/sunburst\"], root[\"highcharts-grouped-categories\"], root[\"gradient-parser\"], root[\"@finos/perspective-viewer/dist/esm/utils\"], root[\"detectie\"], root[\"@finos/perspective-viewer/dist/esm/utils.js\"], root[\"core-js/modules/es.string.replace\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__12__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__16__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{background-color:var(--plugin--background,#fff)}:host #container{position:absolute;width:calc(100% - 30px);height:calc(100% - 30px);display:grid;margin:15px;justify-content:stretch;grid-template-rows:repeat(auto-fit,minmax(400px,1fr));grid-template-columns:repeat(auto-fit,minmax(400px,1fr));overflow-y:auto}:host .chart{position:relative;width:100%;height:100%;min-width:0;min-height:0}:host .chart:last-child:first-child{position:absolute;top:0;left:0;right:0;bottom:0}:host text,:host tspan{font-family:var(--interface--font-family,Arial,sans-serif);fill:var(--highcharts-label--fill,#666)!important}:host .highcharts-null-point{fill:none}:host .highcharts-background{display:none}:host .highcharts-label-box.highcharts-tooltip-box:not([isShadow]){fill:var(--highcharts-tooltip--background,#fff)}:host .highcharts-yaxis-grid path.highcharts-grid-line{stroke:var(--highcharts-grid-line--stroke,#e6e6e6)}:host .highcharts-sunburst-series path,:host .highcharts-treemap-series rect{stroke:var(--plugin--background,#fff)}:host rect,:host svg image{opacity:var(--highcharts-rect--opacity,.5)}:host circle,:host path{opacity:var(--highcharts-circle--opacity,.8)}\", \"\"]);\n\n// exports\n","module.exports = \"<template id=\\\"perspective-highcharts\\\">\\n    <div id=\\\"container\\\">\\n\\n    </div>\\n</template>\";","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport highcharts from \"highcharts\";\nimport highchartsMore from \"highcharts-more\";\nimport heatmap from \"highcharts/modules/heatmap\";\nimport boost from \"highcharts/modules/boost\";\nimport treemap from \"highcharts/modules/treemap\";\nimport sunburst from \"highcharts/modules/sunburst\";\nimport grouped_categories from \"highcharts-grouped-categories\";\n\nconst Highcharts = highcharts;\n\n// cache prototypes\nlet axisProto = Highcharts.Axis.prototype,\n    // cache original methods\n    protoAxisRender = axisProto.render,\n    UNDEFINED = void 0;\n\nhighchartsMore(highcharts);\nheatmap(highcharts);\ntreemap(highcharts);\nsunburst(highcharts);\ngrouped_categories(highcharts);\nboost(highcharts);\n\nexport const COLORS_10 = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nexport const COLORS_20 = [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n];\n\nHighcharts.setOptions({\n    colors: COLORS_20\n});\n\n(function(H) {\n    H.wrap(H.seriesTypes.scatter.prototype, \"translate\", function(translate) {\n        translate.apply(this, Array.prototype.slice.call(arguments, 1));\n        if (this.chart.userOptions.chart.type.slice(0, 7) === \"colored\") {\n            this.translateColors.call(this);\n        }\n    });\n    var seriesTypes = H.seriesTypes,\n        merge = H.merge,\n        extendClass = H.extendClass,\n        defaultOptions = H.getOptions(),\n        plotOptions = defaultOptions.plotOptions;\n    var colorSeriesMixin = {\n        optionalAxis: \"colorAxis\",\n        colorKey: \"colorValue\",\n        translateColors: seriesTypes.heatmap && seriesTypes.heatmap.prototype.translateColors\n    };\n    plotOptions.coloredColumn = merge(plotOptions.column, {});\n    seriesTypes.coloredColumn = extendClass(\n        seriesTypes.column,\n        merge(colorSeriesMixin, {\n            type: \"coloredColumn\",\n            axisTypes: [\"xAxis\", \"yAxis\", \"colorAxis\"]\n        })\n    );\n    plotOptions.coloredScatter = merge(plotOptions.scatter, {});\n    seriesTypes.coloredScatter = extendClass(\n        seriesTypes.scatter,\n        merge(colorSeriesMixin, {\n            type: \"coloredScatter\",\n            axisTypes: [\"xAxis\", \"yAxis\", \"colorAxis\"]\n        })\n    );\n    plotOptions.coloredBubble = merge(plotOptions.bubble, {});\n    seriesTypes.coloredBubble = extendClass(\n        seriesTypes.bubble,\n        merge(colorSeriesMixin, {\n            type: \"coloredBubble\",\n            axisTypes: [\"xAxis\", \"yAxis\", \"colorAxis\"]\n        })\n    );\n\n    // draw points and add setting colors\n    H.wrap(H.seriesTypes.sunburst.prototype, \"translate\", function(p, positions) {\n        p.call(this, positions);\n        this.translateColors();\n    });\n\n    // copy method from heatmap for color mixin\n    H.seriesTypes.sunburst.prototype.translateColors = function() {\n        var series = this,\n            nullColor = this.options.nullColor,\n            colorAxis = this.colorAxis,\n            colorKey = this.colorKey;\n\n        H.each(this.data, function(point) {\n            var value = point[colorKey],\n                color;\n\n            color =\n                point.options.color ||\n                (!point.value // LINE CHANGED\n                    ? nullColor\n                    : colorAxis && value !== undefined\n                    ? colorAxis.toColor(value, point)\n                    : point.color || series.color);\n\n            if (color) {\n                point.color = color;\n            }\n        });\n    };\n\n    // use \"colorValue\" to calculate color\n    H.seriesTypes.sunburst.prototype.colorKey = \"colorValue\";\n\n    // Pushes part of grid to path\n    function walk(arr, key, fn) {\n        var l = arr.length,\n            children;\n\n        while (l--) {\n            children = arr[l][key];\n\n            if (children) {\n                walk(children, key, fn);\n            }\n            fn(arr[l]);\n        }\n    }\n    axisProto.render = function() {\n        // clear grid path\n        if (this.isGrouped) {\n            this.labelsGridPath = [];\n        }\n\n        // cache original tick length\n        if (this.originalTickLength === UNDEFINED) {\n            this.originalTickLength = this.options.tickLength;\n        }\n\n        // use default tickLength for not-grouped axis\n        // and generate grid on grouped axes,\n        // use tiny number to force highcharts to hide tick\n        this.options.tickLength = this.isGrouped ? 0.001 : this.originalTickLength;\n\n        protoAxisRender.call(this);\n\n        if (!this.isGrouped) {\n            if (this.labelsGrid) {\n                this.labelsGrid.attr({\n                    visibility: \"hidden\"\n                });\n            }\n            return false;\n        }\n\n        var axis = this,\n            options = axis.options,\n            visible = axis.hasVisibleSeries || axis.hasData,\n            grid = axis.labelsGrid,\n            d = axis.labelsGridPath,\n            tickWidth = axis.tickWidth;\n\n        // render grid path for the first time\n        if (!grid) {\n            grid = axis.labelsGrid = axis.chart.renderer\n                .path()\n                .attr({\n                    // #58: use tickWidth/tickColor instead of\n                    // lineWidth/lineColor:\n                    strokeWidth: tickWidth, // < 4.0.3\n                    \"stroke-width\": tickWidth, // 4.0.3+ #30\n                    stroke: options.tickColor || \"\" // for styled mode (tickColor === undefined)\n                })\n                .add(axis.axisGroup);\n            // for styled mode - add class\n            if (!options.tickColor) {\n                grid.addClass(\"highcharts-tick\");\n            }\n        }\n\n        // draw grid path\n        grid.attr({\n            d: d,\n            visibility: visible ? \"visible\" : \"hidden\"\n        });\n\n        axis.labelGroup.attr({\n            visibility: visible ? \"visible\" : \"hidden\"\n        });\n\n        walk(axis.categoriesTree, \"categories\", function(group) {\n            var tick = group.tick;\n\n            if (!tick) {\n                return false;\n            }\n            if (tick.startAt + tick.leaves - 1 < axis.min || tick.startAt > axis.max) {\n                tick.label.hide();\n                tick.destroyed = 0;\n            } else {\n                tick.label.attr({\n                    visibility: visible ? \"visible\" : \"hidden\"\n                });\n            }\n            return true;\n        });\n        return true;\n    };\n})(Highcharts);\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as gparser from \"gradient-parser\";\n\nfunction _get_gradient(type) {\n    let gradient;\n    if (window.ShadyCSS) {\n        gradient = window.ShadyCSS.getComputedStyleValue(this, `--highcharts-${type}--gradient`);\n    } else {\n        gradient = getComputedStyle(this).getPropertyValue(`--highcharts-${type}--gradient`);\n    }\n\n    const parsed = gparser.parse(gradient)[0].colorStops;\n    return parsed.map((x, i) => {\n        let color;\n        if (x.type === \"rgb\") {\n            color = `rgb(${x.value.join(\",\")})`;\n        } else {\n            color = `#${x.value}`;\n        }\n        return [Number.parseFloat(x.length ? x.length.value / 100 : `${i / (parsed.length - 1)}`), color];\n    });\n}\n\nconst _get_gradients = (() => {\n    let gradients;\n    return function(restyle) {\n        if (restyle || gradients === undefined) {\n            gradients = {};\n            for (let type of [\"positive\", \"negative\", \"full\"]) {\n                gradients[type] = _get_gradient.bind(this)(type);\n            }\n        }\n        return gradients;\n    };\n})();\n\nexport function color_axis(config, colorRange, restyle) {\n    let gradient,\n        {positive, negative, full} = _get_gradients.bind(this)(restyle);\n    if (colorRange[0] >= 0) {\n        gradient = positive;\n    } else if (colorRange[1] <= 0) {\n        gradient = negative;\n    } else {\n        gradient = full;\n    }\n    Object.assign(config, {\n        colorAxis: {\n            min: colorRange[0],\n            max: colorRange[1],\n            stops: gradient,\n            reversed: false,\n            startOnTick: false,\n            endOnTick: false\n        }\n    });\n    config.legend.reversed = true;\n    config.legend.floating = false;\n    config.legend.enabled = true;\n}\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst COLUMN_SEPARATOR_STRING = \"|\";\n\nfunction row_to_series(series, sname, gname) {\n    let s;\n    let sidx = 0;\n    // TODO: figure out what this does\n    for (sidx; sidx < series.length; sidx++) {\n        let is_group = typeof gname === \"undefined\" || series[sidx].stack === gname;\n        if (series[sidx].name == sname && is_group) {\n            s = series[sidx];\n            break;\n        }\n    }\n    if (sidx == series.length) {\n        s = {\n            name: sname,\n            connectNulls: true,\n            data: []\n        };\n        if (gname) {\n            s.stack = gname;\n        }\n        series.push(s);\n    }\n    return s;\n}\n\nfunction column_to_series(data, sname, gname) {\n    let s = {\n        name: sname,\n        connectNulls: true,\n        data\n    };\n\n    if (gname) {\n        s.stack = gname;\n    }\n\n    return s;\n}\n\nfunction replace_null(str) {\n    if (str === null) {\n        return \"-\";\n    } else {\n        return str;\n    }\n}\n\n// Row-based axis generator\nclass TreeAxisIterator {\n    constructor(depth, json) {\n        this.depth = depth;\n        this.json = json;\n        this.top = {name: \"\", depth: 0, categories: []};\n    }\n\n    add_label(path) {\n        let label = {\n            name: path[path.length - 1],\n            depth: path.length,\n            categories: []\n        };\n\n        // Find the correct parent\n        var parent = this.top;\n        for (var lidx = 0; lidx < path.length - 1; lidx++) {\n            for (var cidx = 0; cidx < parent.categories.length; cidx++) {\n                if (parent.categories[cidx].name === path[lidx]) {\n                    parent = parent.categories[cidx];\n                    break;\n                }\n            }\n        }\n        parent.categories.push(label);\n        return label;\n    }\n\n    *[Symbol.iterator]() {\n        // Recursively map and generate axis labels\n        let label = this.top;\n        for (let row of this.json) {\n            let path = row.__ROW_PATH__ || [\"\"];\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n                yield row;\n            }\n        }\n    }\n}\n\nclass ChartAxis {\n    constructor(columns, depth) {\n        this.columns = columns;\n        this.depth = depth;\n        this.axis = {name: \"\", depth: 0, categories: []};\n        this.fill_axis();\n    }\n\n    add_label(path) {\n        let label = {\n            name: path[path.length - 1],\n            depth: path.length,\n            categories: []\n        };\n\n        // Find the correct parent\n        var parent = this.axis;\n        for (var lidx = 0; lidx < path.length - 1; lidx++) {\n            for (var cidx = 0; cidx < parent.categories.length; cidx++) {\n                if (parent.categories[cidx].name === path[lidx]) {\n                    parent = parent.categories[cidx];\n                    break;\n                }\n            }\n        }\n        parent.categories.push(label);\n        return label;\n    }\n\n    fill_axis() {\n        let label = this.axis;\n\n        if (this.columns.__ROW_PATH__ === undefined) {\n            return;\n        }\n\n        for (let path of this.columns.__ROW_PATH__) {\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n                continue;\n            }\n        }\n    }\n}\n\nclass RowIterator {\n    constructor(rows) {\n        this.rows = rows;\n    }\n\n    *[Symbol.iterator]() {\n        for (let row of this.rows) {\n            if (this.columns === undefined) {\n                this.columns = Object.keys(row).filter(prop => prop !== \"__ROW_PATH__\");\n                this.is_stacked =\n                    this.columns.map(value => value.substr(value.lastIndexOf(COLUMN_SEPARATOR_STRING) + 1, value.length)).filter((value, index, self) => self.indexOf(value) === index).length > 1;\n            }\n            yield row;\n        }\n    }\n}\n\nclass ColumnIterator {\n    constructor(columns, pivot_length) {\n        this.columns = columns;\n        this.column_names = Object.keys(this.columns).filter(prop => prop !== \"__ROW_PATH__\");\n        this.is_stacked =\n            this.column_names.map(value => value.substr(value.lastIndexOf(COLUMN_SEPARATOR_STRING) + 1, value.length)).filter((value, index, self) => self.indexOf(value) === index).length > 1;\n        this.pivot_length = pivot_length;\n    }\n\n    *[Symbol.iterator]() {\n        for (let name of this.column_names) {\n            let data = this.columns[name];\n            if (this.columns.__ROW_PATH__) {\n                let filtered_data = [];\n                for (let i = 0; i < data.length; i++) {\n                    if (this.columns.__ROW_PATH__[i].length === this.pivot_length) {\n                        filtered_data.push(data[i]);\n                    }\n                }\n                data = filtered_data;\n            }\n            yield {name, data};\n        }\n    }\n}\n\nexport function make_y_data(cols, pivots) {\n    let series = [];\n    let axis = new ChartAxis(cols, pivots.length);\n    let columns = new ColumnIterator(cols, pivots.length);\n    for (let col of columns) {\n        let sname = col.name.split(COLUMN_SEPARATOR_STRING);\n        let gname = sname[sname.length - 1];\n        if (columns.is_stacked) {\n            sname = sname.join(\", \") || gname;\n        } else {\n            sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n        }\n        let s = column_to_series(\n            col.data.map(val => (val === undefined || val === \"\" ? null : val)),\n            sname,\n            gname\n        );\n        series.push(s);\n    }\n\n    return [series, axis.axis];\n}\n\n// Preserve old behavior for heatmaps\nexport function make_y_heatmap_data(js, pivots) {\n    let rows = new TreeAxisIterator(pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    var series = [];\n\n    for (let row of rows2) {\n        for (let prop of rows2.columns) {\n            let sname = prop.split(COLUMN_SEPARATOR_STRING);\n            let gname = sname[sname.length - 1];\n            if (rows2.is_stacked) {\n                sname = sname.join(\", \") || gname;\n            } else {\n                sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n            }\n            let s = row_to_series(series, sname, gname);\n            let val = row[prop];\n            val = val === undefined || val === \"\" ? null : val;\n            s.data.push(val);\n        }\n    }\n    return [series, rows.top];\n}\n\n/******************************************************************************\n *\n * XY\n */\n\n// TODO: rewrite\nclass TickClean {\n    constructor(type) {\n        this.dict = {};\n        this.names = [];\n        this.type = type;\n    }\n\n    clean(val) {\n        if (this.type === \"string\") {\n            if (!(val in this.dict)) {\n                this.dict[val] = Object.keys(this.dict).length;\n                this.names.push(replace_null(val));\n            }\n            return this.dict[val];\n        } else if (val === undefined || val === \"\" || isNaN(val)) {\n            return null;\n        }\n        return val;\n    }\n}\n\nclass MakeTick {\n    constructor(schema, columns) {\n        this.schema = schema;\n        // TODO: rewrite\n        this.xaxis_clean = new TickClean(schema[columns[0]]);\n        this.yaxis_clean = new TickClean(schema[columns[1]]);\n        this.color_clean = new TickClean(schema[columns[2]]);\n    }\n\n    make(row, columns, colorRange) {\n        let tick = {};\n        tick.x = row[columns[0]];\n        if (tick.x === null && row[columns[1]] === null) {\n            return;\n        }\n        tick.x = this.xaxis_clean.clean(tick.x);\n        tick.y = 0;\n        if (columns.length > 1) {\n            tick.y = row[columns[1]];\n            tick.y = this.yaxis_clean.clean(tick.y);\n        }\n\n        // Color by\n        if (columns.length > 2) {\n            let color = row[columns[2]];\n            if (this.schema[columns[2]] === \"string\") {\n                let color_index = this.color_clean.clean(color);\n                tick.marker = {\n                    lineColor: color_index,\n                    fillColor: color_index\n                };\n            } else {\n                if (!isNaN(color)) {\n                    colorRange[0] = Math.min(colorRange[0], color);\n                    colorRange[1] = Math.max(colorRange[1], color);\n                }\n                tick.colorValue = color;\n            }\n        }\n        // size by\n        if (columns.length > 3) {\n            tick.z = isNaN(row[columns[3]]) ? 1 : row[columns[3]];\n        }\n        if (\"__ROW_PATH__\" in row) {\n            tick.name = row[\"__ROW_PATH__\"].join(\", \");\n        }\n        return tick;\n    }\n\n    make_col(cols, col_names, num_cols, pivot_length, row_path, color_range, is_line = false) {\n        let ticks = [];\n        let data = cols;\n\n        if (cols.length === 0) {\n            return ticks;\n        }\n\n        if (cols.length === undefined) {\n            // assign data to array in name order\n            data = [];\n            for (let name of col_names) {\n                data.push(cols[name]);\n            }\n        }\n\n        for (let i = 0; i < data[0].length; i++) {\n            if (data[0][i] === null || data[0][i] === undefined || data[0][i] === \"\") {\n                continue;\n            }\n\n            let tick = {};\n\n            if (row_path) {\n                if (row_path[i].length !== pivot_length) {\n                    continue;\n                }\n\n                tick.name = row_path[i].join(\", \");\n            }\n\n            // set x-axis\n            tick.x = this.xaxis_clean.clean(data[0][i]);\n\n            if (num_cols > 1) {\n                // set y-axis\n                tick.y = this.yaxis_clean.clean(data[1][i]);\n            }\n\n            if (col_names.length > 2 && col_names[2] !== null) {\n                // set color\n                let color = data[2][i];\n                if (this.schema[col_names[2]] === \"string\") {\n                    if (is_line) {\n                        // This is a line, use colorValue to pass tooltip\n                        tick.colorValue = color;\n                    } else {\n                        // This is a literal color, coerce to unique number;\n                        let color_index = this.color_clean.clean(color);\n                        tick.marker = {\n                            lineColor: color_index,\n                            fillColor: color_index\n                        };\n                        tick.colorValue = color_index;\n                    }\n                } else {\n                    if (!isNaN(color)) {\n                        color_range[0] = Math.min(color_range[0], color);\n                        color_range[1] = Math.max(color_range[1], color);\n                    }\n                    tick.colorValue = color;\n                }\n            }\n\n            if (col_names.length > 3 && col_names[3] !== null) {\n                // set size\n                let size = data[3][i];\n                tick.z = is_line ? size : isNaN(size) ? 1 : size;\n            }\n\n            let tooltip_index = 3;\n            while (typeof col_names[++tooltip_index] === \"string\") {\n                tick.tooltip = [] || tick.tooltip;\n                tick.tooltip.push(data[tooltip_index][i]);\n            }\n            ticks.push(tick);\n        }\n\n        return ticks;\n    }\n}\n\nexport function make_xy_column_data(cols, schema, aggs, pivots, col_pivots) {\n    const columns = new ColumnIterator(cols, pivots.length);\n    let series = [];\n    const data_cols = aggs.filter(x => x !== null);\n    let color_range = [Infinity, -Infinity];\n    let make_tick = new MakeTick(schema, columns.column_names);\n\n    let row_path = columns.columns.__ROW_PATH__;\n\n    if (col_pivots.length === 0) {\n        let ticks = make_tick.make_col(columns.columns, aggs, data_cols.length, columns.pivot_length, row_path, color_range, true);\n\n        let s = column_to_series(ticks, \" \");\n        series.push(s);\n    } else {\n        let groups = {};\n\n        if (row_path) {\n            // remove all total rows\n            let clean_row_path = [];\n\n            for (let i = 0; i < row_path.length; i++) {\n                if (row_path[i].length === columns.pivot_length) {\n                    clean_row_path.push(row_path[i]);\n                }\n            }\n\n            row_path = clean_row_path;\n        }\n\n        let real_index = 0;\n        for (let col of columns) {\n            let column_levels = col.name.split(COLUMN_SEPARATOR_STRING);\n            let group_name = column_levels.slice(0, column_levels.length - 1).join(\", \") || \" \";\n\n            if (groups[group_name] === undefined) {\n                groups[group_name] = [];\n            }\n\n            groups[group_name].push(col.data);\n            while (aggs[++real_index] === null) {\n                groups[group_name].push(null);\n            }\n\n            if (groups[group_name].length === aggs.length) {\n                // generate series as soon as we have enough data\n                let ticks = make_tick.make_col(groups[group_name], aggs, data_cols.length, columns.pivot_length, row_path, color_range);\n                real_index = 0;\n                let s = column_to_series(ticks, group_name);\n                series.push(s);\n            }\n        }\n    }\n\n    return [series, {categories: make_tick.xaxis_clean.names}, color_range, {categories: make_tick.yaxis_clean.names}];\n}\n\nexport function make_xy_data(js, schema, columns, pivots, col_pivots) {\n    let rows = new TreeAxisIterator(pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    let series = [];\n    let colorRange = [Infinity, -Infinity];\n    let make_tick = new MakeTick(schema, columns);\n    if (col_pivots.length === 0) {\n        let sname = \" \";\n        let s = row_to_series(series, sname);\n        for (let row of rows2) {\n            let tick = make_tick.make(row, columns, colorRange);\n            if (tick) {\n                s.data.push(tick);\n            }\n        }\n    } else {\n        let prev,\n            group = [],\n            s;\n        let cols = Object.keys(js[0]).filter(prop => prop !== \"__ROW_PATH__\");\n        for (let prop of cols) {\n            let column_levels = prop.split(COLUMN_SEPARATOR_STRING);\n            let group_name = column_levels.slice(0, column_levels.length - 1).join(\", \") || \" \";\n            if (prev === undefined) {\n                prev = group_name;\n            }\n            s = row_to_series(series, prev);\n            if (prev === group_name) {\n                group.push(prop);\n            } else {\n                for (let row of rows2) {\n                    let tick = make_tick.make(row, group, colorRange);\n                    if (tick) {\n                        s.data.push(tick);\n                    }\n                }\n                prev = group_name;\n                group = [prop];\n            }\n        }\n        for (let row of rows2) {\n            let tick = make_tick.make(row, group, colorRange);\n            if (tick) {\n                s.data.push(tick);\n            }\n        }\n    }\n\n    return [series, {categories: make_tick.xaxis_clean.names}, colorRange, {categories: make_tick.yaxis_clean.names}];\n}\n\n/******************************************************************************\n *\n * XYZ\n */\n\nfunction make_tree_axis(series) {\n    let ylabels = series.map(s => s.name.split(\",\"));\n    let ytop = {name: null, depth: 0, categories: []};\n    let maxdepth = ylabels[0].length;\n\n    for (let i = 0; i < ylabels.length; ++i) {\n        let ylabel = ylabels[i];\n        let parent = ytop;\n\n        for (let depth = 0; depth < ylabel.length; ++depth) {\n            let label = ylabel[depth];\n            if (depth === maxdepth - 1) {\n                parent.categories.push(label);\n            } else {\n                let l = parent.categories.length;\n                if (l > 0 && parent.categories[l - 1].name == label) {\n                    parent = parent.categories[l - 1];\n                } else {\n                    let cat = {name: label, depth: depth + 1, categories: []};\n                    parent.categories.push(cat);\n                    parent = cat;\n                }\n            }\n        }\n    }\n    return ytop;\n}\n\nexport function make_xyz_data(js, pivots, ytree_type) {\n    let [series, top] = make_y_heatmap_data(js, pivots);\n    if (ytree_type !== \"string\" && ytree_type !== undefined) {\n        series = series.reverse();\n    }\n    let colorRange = [Infinity, -Infinity];\n    let ytop = make_tree_axis(series);\n    let data = [];\n    for (let i = 0; i < series[0].data.length; ++i) {\n        for (let j = 0; j < series.length; ++j) {\n            let val = series[j].data[i];\n            data.push([i, j, val]);\n            colorRange[0] = Math.min(colorRange[0], val);\n            colorRange[1] = Math.max(colorRange[1], val);\n        }\n    }\n    if (colorRange[0] * colorRange[1] < 0) {\n        let cmax = Math.max(Math.abs(colorRange[0]), Math.abs(colorRange[1]));\n        colorRange = [-cmax, cmax];\n    }\n    series = data;\n    return [series, top, ytop, colorRange];\n}\n\n/******************************************************************************\n *\n * Tree\n */\n\nfunction make_color(aggregates, all, leaf_only) {\n    let colorRange;\n    if (aggregates.length >= 2) {\n        colorRange = [Infinity, -Infinity];\n        for (let series of all) {\n            let colorvals = series[\"data\"];\n            for (let i = 1; i < colorvals.length; ++i) {\n                if ((leaf_only && colorvals[i].leaf) || !leaf_only) {\n                    colorRange[0] = Math.min(colorRange[0], colorvals[i].colorValue);\n                    colorRange[1] = Math.max(colorRange[1], colorvals[i].colorValue);\n                }\n            }\n            if (colorRange[0] * colorRange[1] < 0) {\n                let cmax = Math.max(Math.abs(colorRange[0]), Math.abs(colorRange[1]));\n                colorRange = [-cmax, cmax];\n            }\n        }\n    }\n    return colorRange;\n}\n\nclass TreeIterator extends TreeAxisIterator {\n    *[Symbol.iterator]() {\n        let label = this.top;\n        for (let row of this.json) {\n            let path = row.__ROW_PATH__ || [\"\"];\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n            }\n            yield row;\n        }\n    }\n}\n\nfunction make_levels(row_pivots) {\n    let levels = [];\n    for (let i = 0; i < row_pivots.length; i++) {\n        levels.push({\n            level: i + 1,\n            borderWidth: (row_pivots.length - i) * 2,\n            dataLabels: {\n                enabled: true,\n                allowOverlap: true,\n                style: {\n                    opacity: [1, 0.3][i] || 0,\n                    fontSize: `${[14, 10][i] || 0}px`,\n                    textOutline: null\n                }\n            }\n        });\n    }\n    return levels;\n}\n\nfunction make_configs(series, levels) {\n    let configs = [];\n    for (let data of series) {\n        let title = data.name.split(COLUMN_SEPARATOR_STRING);\n        configs.push({\n            layoutAlgorithm: \"squarified\",\n            allowDrillToNode: true,\n            alternateStartingDirection: true,\n            data: data.data.slice(1),\n            levels: levels,\n            title: title,\n            stack: data.stack\n        });\n    }\n    return configs;\n}\n\nexport function make_tree_data(js, row_pivots, aggregates, leaf_only) {\n    let rows = new TreeIterator(row_pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    let series = [];\n\n    for (let row of rows2) {\n        let rp = row[\"__ROW_PATH__\"].map(x => (x === null ? \"-\" : x));\n        let id = rp.join(\", \");\n        let name = rp.slice(-1)[0];\n        let parent = rp.slice(0, -1).join(\", \");\n\n        for (let idx = 0; idx < rows2.columns.length; idx++) {\n            let prop = rows2.columns[idx];\n            let sname = prop.split(COLUMN_SEPARATOR_STRING);\n            let gname = sname[sname.length - 1];\n            sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n            if (idx % aggregates.length === 0) {\n                let s = row_to_series(series, sname, gname);\n                s.data.push({\n                    id: id,\n                    name: name,\n                    value: row[prop],\n                    colorValue: aggregates.length > 1 ? row[rows2.columns[idx + 1]] : undefined,\n                    parent: parent,\n                    leaf: row.__ROW_PATH__.length === row_pivots.length\n                });\n            }\n        }\n    }\n\n    let levels = make_levels(row_pivots);\n    let configs = make_configs(series, levels);\n    let colorRange = make_color(aggregates, series, leaf_only, row_pivots);\n    return [configs, rows.top, colorRange];\n}\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\n\nexport function format_tooltip(context, type, schema, axis_titles, pivot_titles) {\n    const row_pivots_titles = pivot_titles.row,\n        column_pivot_titles = pivot_titles.column;\n\n    const has_row_pivots = row_pivots_titles.length > 0,\n        has_column_pivots = column_pivot_titles.length > 0;\n\n    if (type === \"y\") {\n        // pivots cannot be type-mapped\n        let row_pivots_text = \"\",\n            column_pivot_text = \"\";\n\n        if (has_row_pivots) {\n            let row_pivots_values = get_pivot_values(context.key);\n            row_pivots_text = collate_multiple_values(row_pivots_titles, row_pivots_values);\n        }\n\n        if (has_column_pivots) {\n            let column_pivot_values = context.series.userOptions.name.split(\", \");\n            column_pivot_text = collate_multiple_values(column_pivot_titles, column_pivot_values);\n        }\n\n        const axis_title = context.series.userOptions.stack;\n        const axis_type = get_axis_type(axis_title, schema);\n\n        return `${row_pivots_text}\n                ${column_pivot_text}\n                <span>${axis_title}: </span><b>${format_value(context.y, axis_type)}</b>`;\n    } else if (type === \"xy\") {\n        const has_x_values = value_exists(axis_titles[0]),\n            has_y_values = value_exists(axis_titles[1]),\n            has_z_values = value_exists(axis_titles[2]),\n            has_w_values = value_exists(axis_titles[3]);\n\n        let row_pivots_text = \"\",\n            column_pivot_text = \"\",\n            extra_text = \"\",\n            x_text = \"\",\n            y_text = \"\",\n            z_text = \"\",\n            w_text = \"\";\n\n        // render tooltip based on axis + pivots\n        if (has_row_pivots) {\n            let row_pivots_values = context.key.split(\",\");\n            row_pivots_text = collate_multiple_values(row_pivots_titles, row_pivots_values);\n        }\n\n        if (has_column_pivots) {\n            let column_pivot_values = context.point.series.name.split(\",\");\n            column_pivot_text = collate_multiple_values(column_pivot_titles, column_pivot_values);\n        }\n\n        if (has_x_values) {\n            let x_axis_title = axis_titles[0],\n                raw_x_value = context.x;\n            x_text = collate_single_value(x_axis_title, raw_x_value, schema);\n        }\n\n        if (has_y_values) {\n            let y_axis_title = axis_titles[1],\n                raw_y_value = context.y;\n            y_text = collate_single_value(y_axis_title, raw_y_value, schema);\n        }\n\n        if (has_z_values) {\n            let z_axis_title = axis_titles[2],\n                raw_z_axis_value = context.point.colorValue;\n            z_text = collate_single_value(z_axis_title, raw_z_axis_value, schema);\n        }\n\n        if (has_w_values) {\n            let w_axis_title = axis_titles[3],\n                raw_w_axis_value = context.point.z;\n\n            w_text = collate_single_value(w_axis_title, raw_w_axis_value, schema);\n        }\n\n        if (context.point.tooltip && context.point.tooltip.length > 0) {\n            for (let i = 0; i < context.point.tooltip.length; i++) {\n                extra_text += collate_single_value(axis_titles[4 + i], context.point.tooltip[i], schema);\n            }\n        }\n\n        const tooltip_text = [row_pivots_text, column_pivot_text, x_text, y_text, z_text, w_text, extra_text];\n        return tooltip_text.join(\"\");\n    } else if (type === \"xyz\") {\n        return `<span>${format_value(context.point.value)}</span>`;\n    } else if (type === \"hierarchy\") {\n        return `<span>${context.point.id}: </span><b>${format_value(context.x)}</b>`;\n    }\n\n    let default_value;\n    context.x ? (default_value = context.x) : (default_value = context.y);\n\n    return default_value;\n}\n\nfunction collate_single_value(title, raw_value, schema) {\n    const type = get_axis_type(title, schema);\n    const formatted_value = format_value(raw_value, type);\n\n    /* columns in aggregate AND in sort need to show up, but\n     * columns not in aggregate but NOT in sort need to hide */\n    if (formatted_value === \"NaN\" || formatted_value === null || formatted_value === undefined) return \"\";\n\n    return `<span>${title}: <b>${formatted_value}</b></span><br/>`;\n}\n\nfunction collate_multiple_values(titles, values) {\n    if (values.length <= 0) return \"\";\n\n    let output = [];\n    for (let i = 0; i < titles.length; i++) {\n        output.push(`<span>${titles[i]}: <b>${values[i]}</b></span><br/>`);\n    }\n    return output.join(\"\");\n}\n\nexport function get_pivot_values(pivots) {\n    let values = [],\n        parent = pivots.parent;\n\n    values.unshift(pivots.name);\n\n    while (parent !== undefined) {\n        if (parent.name !== undefined) {\n            values.unshift(parent.name);\n        }\n        parent = parent.parent;\n    }\n\n    return values;\n}\n\nfunction get_axis_type(axis_title, schema) {\n    return schema[axis_title];\n}\n\nfunction value_exists(value) {\n    return value !== null && value !== undefined && value !== \" \";\n}\n\nfunction format_value(value, type) {\n    if (type === \"datetime\") {\n        return new Date(value).toLocaleString(\"en-us\", get_type_config(\"datetime\").format);\n    } else if (type === \"date\") {\n        return new Date(value).toLocaleString(\"en-us\", get_type_config(\"date\").format);\n    } else if (type === \"float\" || type === \"integer\") {\n        return format_number(value, type);\n    } else {\n        return value;\n    }\n}\n\nfunction format_number(num, format) {\n    if (format === \"float\") {\n        return Number.parseFloat(num).toLocaleString(get_type_config(\"float\").format);\n    } else {\n        return Number.parseInt(num).toLocaleString(get_type_config(\"float\").format);\n    }\n}\n","/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport * as tooltip from \"./tooltip\";\r\n\r\nexport function set_boost(config, series, ...types) {\r\n    const count = config.series[0].data ? config.series[0].data.length * config.series.length : config.series.length;\r\n    if (count > 5000) {\r\n        Object.assign(config, {\r\n            boost: {\r\n                useGPUTranslations: types.indexOf(\"datetime\") === -1 && types.indexOf(\"date\") === -1,\r\n                usePreAllocated: types.indexOf(\"datetime\") === -1 && types.indexOf(\"date\") === -1\r\n            }\r\n        });\r\n        config.plotOptions.series.boostThreshold = 1;\r\n        config.plotOptions.series.turboThreshold = 0;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function set_tick_size(config) {\r\n    let new_radius = Math.min(6, Math.max(3, Math.floor((this.clientWidth + this.clientHeight) / Math.max(300, config.series[0].data.length / 3))));\r\n    config.plotOptions.coloredScatter = {marker: {radius: new_radius}};\r\n    config.plotOptions.scatter = {marker: {radius: new_radius}};\r\n}\r\n\r\nexport function set_both_axis(config, axis, name, type, tree_type, top) {\r\n    if (type === \"string\") {\r\n        set_category_axis(config, axis, tree_type, top);\r\n    } else {\r\n        set_axis(config, axis, name, type);\r\n    }\r\n}\r\n\r\nexport function set_axis(config, axis, name, type) {\r\n    let opts = {\r\n        type: [\"datetime\", \"date\"].indexOf(type) > -1 ? \"datetime\" : undefined,\r\n        startOnTick: false,\r\n        endOnTick: false,\r\n        title: {\r\n            style: {color: \"#666666\", fontSize: \"14px\"},\r\n            text: name\r\n        }\r\n    };\r\n    if (axis === \"yAxis\") {\r\n        Object.assign(opts, {labels: {overflow: \"justify\"}});\r\n    }\r\n    Object.assign(config, {[axis]: opts});\r\n}\r\n\r\nexport function set_category_axis(config, axis, type, top) {\r\n    if (type === \"datetime\") {\r\n        Object.assign(config, {\r\n            [axis]: {\r\n                categories: top.categories.map(x => new Date(x).toLocaleString(\"en-us\", {year: \"numeric\", month: \"numeric\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\"})),\r\n                labels: {\r\n                    enabled: top.categories.length > 0,\r\n                    autoRotation: [-5]\r\n                }\r\n            }\r\n        });\r\n    } else if (type === \"date\") {\r\n        Object.assign(config, {\r\n            [axis]: {\r\n                categories: top.categories.map(x => new Date(x).toLocaleString(\"en-us\", {year: \"numeric\", month: \"numeric\", day: \"numeric\"})),\r\n                labels: {\r\n                    enabled: top.categories.length > 0,\r\n                    autoRotation: [-5]\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        let opts = {\r\n            categories: top.categories,\r\n            labels: {\r\n                enabled: top.categories.length > 0,\r\n                padding: 0,\r\n                autoRotation: [-10, -20, -30, -40, -50, -60, -70, -80, -90]\r\n            }\r\n        };\r\n        if (axis === \"yAxis\" && (!config.hasOwnProperty(\"boost\") || config.chart.type === \"heatmap\")) {\r\n            Object.assign(opts, {\r\n                title: null,\r\n                tickWidth: 1,\r\n                reversed: true\r\n            });\r\n        }\r\n        Object.assign(config, {[axis]: opts});\r\n    }\r\n}\r\n\r\nexport function default_config(aggregates, mode) {\r\n    let type = \"scatter\";\r\n    let hover_type = \"xy\";\r\n    if (mode === \"y_line\") {\r\n        hover_type = \"y\";\r\n        type = \"line\";\r\n    } else if (mode === \"y_area\") {\r\n        hover_type = \"y\";\r\n        type = \"area\";\r\n    } else if (mode === \"y_scatter\") {\r\n        hover_type = \"y\";\r\n        type = \"scatter\";\r\n    } else if (mode.indexOf(\"bar\") > -1) {\r\n        hover_type = \"y\";\r\n        type = \"column\";\r\n    } else if (mode == \"treemap\") {\r\n        hover_type = \"hierarchy\";\r\n        type = \"treemap\";\r\n    } else if (mode == \"sunburst\") {\r\n        hover_type = \"hierarchy\";\r\n        type = \"sunburst\";\r\n    } else if (mode === \"scatter\") {\r\n        hover_type = \"xy\";\r\n        if (aggregates.length <= 3 || aggregates[3] === null) {\r\n            type = \"scatter\";\r\n        } else {\r\n            type = \"bubble\";\r\n        }\r\n    } else if (mode === \"heatmap\") {\r\n        hover_type = \"xyz\";\r\n        type = \"heatmap\";\r\n    }\r\n\r\n    /* eslint-disable max-len */\r\n\r\n    // let new_radius = 0;\r\n    // if (mode === 'scatter') {\r\n    //     new_radius = Math.min(8, Math.max(4, Math.floor((this.clientWidth + this.clientHeight) / Math.max(300, series[0].data.length / 3))));\r\n    // }\r\n    //\r\n\r\n    // read this + define chart schema using _view()\r\n\r\n    /* eslint-enable max-len */\r\n\r\n    const that = this;\r\n    const config = this._config;\r\n    const pivot_titles = get_pivot_titles(config.row_pivots, config.column_pivots);\r\n\r\n    const is_empty = str => str.replace(/\\s/g, \"\") == \"\";\r\n\r\n    return {\r\n        chart: {\r\n            type: type,\r\n            inverted: mode.slice(0, 2) === \"x_\",\r\n            animation: false,\r\n            zoomType: mode === \"scatter\" ? \"xy\" : \"x\",\r\n            resetZoomButton: {\r\n                position: {\r\n                    align: \"left\"\r\n                }\r\n            }\r\n        },\r\n        navigation: {\r\n            buttonOptions: {\r\n                enabled: false\r\n            }\r\n        },\r\n        credits: {enabled: false},\r\n        title: {\r\n            text: null\r\n        },\r\n        legend: {\r\n            align: \"right\",\r\n            verticalAlign: \"top\",\r\n            y: 10,\r\n            layout: \"vertical\",\r\n            enabled: false,\r\n            itemStyle: {\r\n                fontWeight: \"normal\"\r\n            }\r\n        },\r\n        boost: {\r\n            enabled: false\r\n        },\r\n\r\n        plotOptions: {\r\n            area: {\r\n                stacking: \"normal\",\r\n                marker: {enabled: false, radius: 0}\r\n            },\r\n            line: {\r\n                marker: {enabled: false, radius: 0}\r\n            },\r\n            coloredScatter: {\r\n                // marker: {radius: new_radius},\r\n            },\r\n            scatter: {\r\n                // marker: {radius: new_radius},\r\n            },\r\n            column: {\r\n                stacking: \"normal\",\r\n                states: {\r\n                    hover: {\r\n                        // add ajax\r\n                        brightness: -0.1,\r\n                        borderColor: \"#000000\"\r\n                    }\r\n                }\r\n            },\r\n            heatmap: {\r\n                nullColor: \"rgba(0,0,0,0)\"\r\n            },\r\n            series: {\r\n                animation: false,\r\n                nullColor: \"rgba(0,0,0,0)\",\r\n                boostThreshold: 0,\r\n                turboThreshold: 60000,\r\n                borderWidth: 0,\r\n                connectNulls: true,\r\n                lineWidth: mode.indexOf(\"line\") === -1 ? 0 : 1.5,\r\n                states: {\r\n                    hover: {\r\n                        lineWidthPlus: 0\r\n                    }\r\n                },\r\n                point: {\r\n                    events: {\r\n                        click: async function() {\r\n                            let row_pivots_values = [];\r\n                            let column_pivot_values = [];\r\n                            if ((type === \"bubble\" && mode === \"scatter\") || (type === \"scatter\" && mode === \"scatter\") || (type === \"scatter\" && mode === \"line\")) {\r\n                                column_pivot_values = this.series.userOptions.name.split(\", \");\r\n                                row_pivots_values = this.name ? this.name.split(\", \") : [];\r\n                            } else if (type === \"column\" || type === \"line\" || type === \"scatter\" || type === \"area\") {\r\n                                column_pivot_values = this.series.userOptions.name.split(\", \");\r\n                                row_pivots_values = tooltip.get_pivot_values(this.category);\r\n                            } else {\r\n                                console.log(`Click dispatch for ${mode} ${type} not supported.`);\r\n                                return;\r\n                            }\r\n\r\n                            const row_filters = config.row_pivots.map((c, index) => [c, \"==\", row_pivots_values[index]]);\r\n                            const column_filters = config.column_pivots.map((c, index) => [c, \"==\", column_pivot_values[index]]);\r\n                            const filters = config.filter\r\n                                .concat(row_filters)\r\n                                .concat(column_filters)\r\n                                .filter(f => !!f[f.length - 1]);\r\n\r\n                            const start_row = this.index + 1;\r\n                            const end_row = start_row + 1;\r\n                            let column_names = [];\r\n                            if ((type === \"bubble\" && mode === \"scatter\") || (type === \"scatter\" && mode === \"scatter\") || (type === \"scatter\" && mode === \"line\")) {\r\n                                column_names = aggregates;\r\n                            } else {\r\n                                const stack_name = this.series.userOptions ? this.series.userOptions.stack : \"\";\r\n                                const column_name = column_pivot_values[column_pivot_values.length - 1];\r\n                                if (is_empty(column_name)) column_names.push(stack_name);\r\n                                else column_names.push(column_name);\r\n                            }\r\n\r\n                            const r = await that._view.to_json({start_row, end_row});\r\n                            that.dispatchEvent(\r\n                                new CustomEvent(\"perspective-click\", {\r\n                                    bubbles: true,\r\n                                    composed: true,\r\n                                    detail: {\r\n                                        column_names,\r\n                                        config: {filters},\r\n                                        row: r[0]\r\n                                    }\r\n                                })\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            animation: false,\r\n            backgroundColor: \"#FFFFFF\",\r\n            borderColor: \"#777777\",\r\n            followPointer: false,\r\n            valueDecimals: 2,\r\n            formatter: function(highcharts_tooltip) {\r\n                that._view\r\n                    .schema(false)\r\n                    .then(schema => {\r\n                        let tooltip_text = tooltip.format_tooltip(this, hover_type, schema, aggregates, pivot_titles);\r\n                        highcharts_tooltip.label.attr({\r\n                            text: tooltip_text\r\n                        });\r\n                    })\r\n                    .catch(err => console.error(err));\r\n\r\n                return \"Loading...\";\r\n            },\r\n            positioner: function(labelWidth, labelHeight, point) {\r\n                let chart = this.chart;\r\n                let tooltipX, tooltipY;\r\n\r\n                if (point.plotX + labelWidth > chart.plotWidth) {\r\n                    tooltipX = point.plotX + chart.plotLeft - labelWidth - 5;\r\n                } else {\r\n                    tooltipX = point.plotX + chart.plotLeft;\r\n                }\r\n\r\n                if (point.plotY + labelHeight > chart.plotHeight) {\r\n                    tooltipY = point.plotY + chart.plotTop - labelHeight;\r\n                } else {\r\n                    tooltipY = point.plotY + chart.plotTop;\r\n                }\r\n\r\n                return {\r\n                    x: tooltipX,\r\n                    y: tooltipY\r\n                };\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction get_pivot_titles(row_pivots, column_pivots) {\r\n    return {\r\n        row: row_pivots,\r\n        column: column_pivots\r\n    };\r\n}\r\n","/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport Highcharts from \"highcharts\";\r\n\r\nimport style from \"../../less/highcharts.less\";\r\nimport template from \"../../html/highcharts.html\";\r\n\r\nimport {COLORS_10, COLORS_20} from \"./externals.js\";\r\nimport {color_axis} from \"./color_axis.js\";\r\nimport {make_tree_data, make_y_data, make_xy_data, make_xyz_data, make_xy_column_data} from \"./series.js\";\r\nimport {set_boost, set_category_axis, set_both_axis, default_config, set_tick_size} from \"./config.js\";\r\nimport {bindTemplate} from \"@finos/perspective-viewer/dist/esm/utils\";\r\nimport detectIE from \"detectie\";\r\n\r\nexport const PRIVATE = Symbol(\"Highcharts private\");\r\n\r\nfunction get_or_create_element(div) {\r\n    let perspective_highcharts_element;\r\n    this[PRIVATE] = this[PRIVATE] || {};\r\n    if (!this[PRIVATE].chart) {\r\n        perspective_highcharts_element = this[PRIVATE].chart = document.createElement(\"perspective-highcharts\");\r\n    } else {\r\n        perspective_highcharts_element = this[PRIVATE].chart;\r\n    }\r\n\r\n    if (!document.body.contains(perspective_highcharts_element)) {\r\n        div.innerHTML = \"\";\r\n        div.appendChild(perspective_highcharts_element);\r\n    }\r\n    return perspective_highcharts_element;\r\n}\r\n\r\nexport const draw = (mode, set_config, restyle) =>\r\n    async function(el, view, task, end_col, end_row) {\r\n        if (set_config) {\r\n            this._config = await view.get_config();\r\n            if (task.cancelled) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const config = await view.get_config();\r\n\r\n        const row_pivots = config.row_pivots;\r\n        const col_pivots = config.column_pivots;\r\n        const columns = config.columns;\r\n        const real_columns = JSON.parse(this.getAttribute(\"columns\"));\r\n\r\n        const [schema, tschema] = await Promise.all([view.schema(false), this._table.schema(false)]);\r\n        let element;\r\n\r\n        if (task.cancelled) {\r\n            return;\r\n        }\r\n\r\n        let configs = [],\r\n            xaxis_name = columns.length > 0 ? columns[0] : undefined,\r\n            xaxis_type = schema[xaxis_name],\r\n            yaxis_name = columns.length > 1 ? columns[1] : undefined,\r\n            yaxis_type = schema[yaxis_name],\r\n            xtree_name = row_pivots.length > 0 ? row_pivots[row_pivots.length - 1] : undefined,\r\n            xtree_type = tschema[xtree_name],\r\n            ytree_name = col_pivots.length > 0 ? col_pivots[col_pivots.length - 1] : undefined,\r\n            ytree_type = tschema[ytree_name],\r\n            num_aggregates = columns.length;\r\n\r\n        try {\r\n            if (mode === \"scatter\") {\r\n                let cols;\r\n                if (end_col || end_row) {\r\n                    cols = await view.to_columns({end_col, end_row, leaves_only: true});\r\n                } else {\r\n                    cols = await view.to_columns();\r\n                }\r\n                const config = (configs[0] = default_config.call(this, real_columns, mode));\r\n                const [series, xtop, colorRange, ytop] = make_xy_column_data(cols, schema, real_columns, row_pivots, col_pivots);\r\n\r\n                config.legend.floating = series.length <= 20;\r\n                config.legend.enabled = col_pivots.length > 0;\r\n                config.series = series;\r\n                config.colors = series.length <= 10 ? COLORS_10 : COLORS_20;\r\n                if (colorRange[0] !== Infinity) {\r\n                    if (real_columns.length <= 3 || real_columns[3] === null) {\r\n                        config.chart.type = \"coloredScatter\";\r\n                    } else {\r\n                        config.chart.type = \"coloredBubble\";\r\n                    }\r\n                    color_axis.call(this, config, colorRange, restyle);\r\n                } else if (real_columns.length > 3 && real_columns[3] !== null) {\r\n                    config.chart.type = \"bubble\";\r\n                }\r\n\r\n                if (num_aggregates < 3) {\r\n                    set_boost(config, xaxis_type, yaxis_type);\r\n                }\r\n                set_both_axis(config, \"xAxis\", xaxis_name, xaxis_type, xaxis_type, xtop);\r\n                set_both_axis(config, \"yAxis\", yaxis_name, yaxis_type, yaxis_type, ytop);\r\n                set_tick_size.call(this, config);\r\n            } else if (mode === \"heatmap\") {\r\n                let js;\r\n                if (end_col || end_row) {\r\n                    js = await view.to_json({end_col, end_row, leaves_only: false});\r\n                } else {\r\n                    js = await view.to_json();\r\n                }\r\n                let config = (configs[0] = default_config.call(this, columns, mode));\r\n                let [series, top, ytop, colorRange] = make_xyz_data(js, row_pivots, ytree_type);\r\n                config.series = [\r\n                    {\r\n                        name: null,\r\n                        data: series,\r\n                        nullColor: \"none\"\r\n                    }\r\n                ];\r\n                config.legend.enabled = true;\r\n                config.legend.floating = false;\r\n\r\n                color_axis.call(this, config, colorRange, restyle);\r\n                set_boost(config, xaxis_type, yaxis_type);\r\n                set_category_axis(config, \"xAxis\", xtree_type, top);\r\n                set_category_axis(config, \"yAxis\", ytree_type, ytop);\r\n            } else if (mode === \"treemap\" || mode === \"sunburst\") {\r\n                let js;\r\n                if (end_col || end_row) {\r\n                    js = await view.to_json({end_col, end_row, leaves_only: false});\r\n                } else {\r\n                    js = await view.to_json();\r\n                }\r\n                let [charts, , colorRange] = make_tree_data(js, row_pivots, columns, mode === \"treemap\");\r\n                for (let series of charts) {\r\n                    let config = default_config.call(this, columns, mode);\r\n                    config.series = [series];\r\n                    if (charts.length > 1) {\r\n                        config.title.text = series.title;\r\n                    }\r\n                    config.plotOptions.series.borderWidth = 1;\r\n                    config.legend.floating = false;\r\n                    if (colorRange) {\r\n                        color_axis.call(this, config, colorRange, restyle);\r\n                    }\r\n                    configs.push(config);\r\n                }\r\n            } else if (mode === \"line\") {\r\n                let s;\r\n                let config = (configs[0] = default_config.call(this, columns, mode));\r\n\r\n                if (col_pivots.length === 0) {\r\n                    let cols;\r\n                    if (end_col || end_row) {\r\n                        cols = await view.to_columns({end_col, end_row, leaves_only: true});\r\n                    } else {\r\n                        cols = await view.to_columns();\r\n                    }\r\n                    s = await make_xy_column_data(cols, schema, columns, row_pivots, col_pivots);\r\n                } else {\r\n                    let js;\r\n                    if (end_col || end_row) {\r\n                        js = await view.to_json({end_col, end_row, leaves_only: false});\r\n                    } else {\r\n                        js = await view.to_json();\r\n                    }\r\n                    s = await make_xy_data(js, schema, columns, row_pivots, col_pivots);\r\n                }\r\n\r\n                const series = s[0];\r\n                const xtop = s[1];\r\n                const ytop = s[3];\r\n\r\n                const colors = series.length <= 10 ? COLORS_10 : COLORS_20;\r\n                config.legend.floating = series.length <= 20;\r\n                config.legend.enabled = col_pivots.length > 0;\r\n                config.series = series;\r\n                config.plotOptions.scatter.marker = {enabled: false, radius: 0};\r\n                config.colors = colors;\r\n                if (set_boost(config, xaxis_type, yaxis_type)) {\r\n                    delete config.chart[\"type\"];\r\n                }\r\n                set_both_axis(config, \"xAxis\", xaxis_name, xaxis_type, xaxis_type, xtop);\r\n                set_both_axis(config, \"yAxis\", yaxis_name, yaxis_type, yaxis_type, ytop);\r\n            } else {\r\n                let config = (configs[0] = default_config.call(this, columns, mode));\r\n                let cols;\r\n                if (end_col || end_row) {\r\n                    cols = await view.to_columns({end_col, end_row, leaves_only: false});\r\n                } else {\r\n                    cols = await view.to_columns();\r\n                }\r\n\r\n                let [series, top] = make_y_data(cols, row_pivots);\r\n                config.series = series;\r\n                config.colors = series.length <= 10 ? COLORS_10 : COLORS_20;\r\n                config.legend.enabled = col_pivots.length > 0 || series.length > 1;\r\n                config.legend.floating = series.length <= 20;\r\n                config.plotOptions.series.dataLabels = {\r\n                    allowOverlap: false,\r\n                    padding: 10\r\n                };\r\n                if (mode.indexOf(\"scatter\") > -1 || mode.indexOf(\"line\") > -1) {\r\n                    set_boost(config, xaxis_type, yaxis_type);\r\n                }\r\n                set_category_axis(config, \"xAxis\", xtree_type, top);\r\n                Object.assign(config, {\r\n                    yAxis: {\r\n                        startOnTick: false,\r\n                        endOnTick: false,\r\n                        title: {\r\n                            text: columns.join(\",  \"),\r\n                            style: {color: \"#666666\", fontSize: \"14px\"}\r\n                        },\r\n                        labels: {overflow: \"justify\"}\r\n                    }\r\n                });\r\n            }\r\n        } finally {\r\n            element = get_or_create_element.call(this, el);\r\n            if (restyle || this.hasAttribute(\"updating\")) {\r\n                element.delete();\r\n            }\r\n        }\r\n\r\n        element.render(mode, configs, this);\r\n    };\r\n\r\n@bindTemplate(template, style) // eslint-disable-next-line no-unused-vars\r\nclass HighchartsElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this._charts = [];\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._container = this.shadowRoot.querySelector(\"#container\");\r\n    }\r\n\r\n    render(mode, configs, callee) {\r\n        if (this._charts.length > 0 && this._charts.length === configs.length) {\r\n            let idx = 0;\r\n            for (let cidx = 0; cidx < this._charts.length; cidx++) {\r\n                const chart = this._charts[cidx];\r\n                let config = configs[idx++];\r\n                if (config.boost) {\r\n                    let target = chart.renderTo;\r\n                    try {\r\n                        chart.destroy();\r\n                    } catch (e) {\r\n                        console.warn(\"Scatter plot destroy() call failed - this is probably leaking memory\");\r\n                    }\r\n                    this._charts[cidx] = Highcharts.chart(target, config);\r\n                } else if (mode === \"scatter\") {\r\n                    let conf = {\r\n                        series: config.series,\r\n                        plotOptions: {}\r\n                    };\r\n                    set_tick_size.call(callee, conf);\r\n                    chart.update(conf);\r\n                } else {\r\n                    let opts = {series: config.series, xAxis: config.xAxis, yAxis: config.yAxis};\r\n                    chart.update(opts);\r\n                }\r\n            }\r\n        } else {\r\n            this.delete();\r\n            for (let config of configs) {\r\n                let chart = document.createElement(\"div\");\r\n                chart.className = \"chart\";\r\n                this._container.appendChild(chart);\r\n                this._charts.push(() => Highcharts.chart(chart, config));\r\n            }\r\n\r\n            for (let i = 0; i < this._charts.length; i++) {\r\n                this._charts[i] = this._charts[i]();\r\n            }\r\n        }\r\n\r\n        if (!this._charts.every(x => this._container.contains(x.renderTo))) {\r\n            this.remove();\r\n            this._charts.map(x => this._container.appendChild(x.renderTo));\r\n        }\r\n\r\n        // TODO resize bug in Highcharts?\r\n        if (configs.length > 1) {\r\n            this.resize();\r\n        }\r\n\r\n        if (detectIE()) {\r\n            setTimeout(() => this.resize());\r\n        }\r\n    }\r\n\r\n    resize() {\r\n        if (this._charts && this._charts.length > 0) {\r\n            this._charts.map(x => x.reflow());\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this._charts = [];\r\n        for (let e of Array.prototype.slice.call(this._container.children)) {\r\n            if (e.tagName === \"DIV\") {\r\n                this._container.removeChild(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    delete() {\r\n        for (let chart of this._charts) {\r\n            try {\r\n                chart.destroy();\r\n            } catch (e) {\r\n                console.warn(\"Scatter plot destroy() call failed - this is probably leaking memory\");\r\n            }\r\n        }\r\n        this.remove();\r\n    }\r\n}\r\n","/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport {draw, PRIVATE} from \"./draw.js\";\r\nimport {registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\n\r\nfunction resize() {\r\n    if (this[PRIVATE]) {\r\n        this[PRIVATE].chart.resize();\r\n    }\r\n}\r\n\r\nfunction delete_chart() {\r\n    if (this[PRIVATE]) {\r\n        this[PRIVATE].chart.delete();\r\n    }\r\n}\r\n\r\nconst MAX_CELL_COUNT = {\r\n    line: 25000,\r\n    area: 25000,\r\n    scatter: 100000,\r\n    bubble: 25000,\r\n    column: 25000,\r\n    treemap: 2500,\r\n    sunburst: 1000,\r\n    heatmap: 20000\r\n};\r\n\r\nconst MAX_COLUMN_COUNT = {\r\n    line: 100,\r\n    area: 100,\r\n    scatter: 100,\r\n    bubble: 100,\r\n    column: 100,\r\n    treemap: 24,\r\n    sunburst: 24,\r\n    heatmap: 24\r\n};\r\n\r\nconst PLUGINS = {\r\n    x_bar: {\r\n        name: \"X Bar Chart\",\r\n        create: draw(\"x_bar\", true),\r\n        update: draw(\"x_bar\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"column\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"column\"]\r\n    },\r\n\r\n    y_bar: {\r\n        name: \"Y Bar Chart\",\r\n        create: draw(\"y_bar\", true),\r\n        update: draw(\"y_bar\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"column\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"column\"]\r\n    },\r\n\r\n    y_line: {\r\n        name: \"Y Line Chart\",\r\n        create: draw(\"y_line\", true),\r\n        update: draw(\"y_line\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"line\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"line\"]\r\n    },\r\n\r\n    y_scatter: {\r\n        name: \"Y Scatter Chart\",\r\n        create: draw(\"y_scatter\", true),\r\n        update: draw(\"y_scatter\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"scatter\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"scatter\"]\r\n    },\r\n\r\n    y_area: {\r\n        name: \"Y Area Chart\",\r\n        create: draw(\"y_area\", true),\r\n        update: draw(\"y_area\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"area\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"area\"]\r\n    },\r\n\r\n    xy_line: {\r\n        name: \"X/Y Line Chart\",\r\n        create: draw(\"line\", true),\r\n        update: draw(\"line\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 2,\r\n            names: [\"X Axis\", \"Y Axis\", \"Tooltip\"]\r\n        },\r\n        selectMode: \"toggle\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"scatter\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"scatter\"]\r\n    },\r\n\r\n    xy_scatter: {\r\n        name: \"X/Y Scatter Chart\",\r\n        create: draw(\"scatter\", true),\r\n        update: draw(\"scatter\", false),\r\n        resize: resize,\r\n        styleElement: draw(\"scatter\", false, true),\r\n        initial: {\r\n            type: \"number\",\r\n            count: 2,\r\n            names: [\"X Axis\", \"Y Axis\", \"Color\", \"Size\", \"Tooltip\"]\r\n        },\r\n        selectMode: \"toggle\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"scatter\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"scatter\"]\r\n    },\r\n\r\n    treemap: {\r\n        name: \"Treemap\",\r\n        create: draw(\"treemap\", true),\r\n        update: draw(\"treemap\", false),\r\n        resize: resize,\r\n        styleElement: draw(\"treemap\", false, true),\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1,\r\n            names: [\"Size\", \"Color\"]\r\n        },\r\n        selectMode: \"toggle\",\r\n        delete: function() {},\r\n        max_cells: MAX_CELL_COUNT[\"treemap\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"treemap\"]\r\n    },\r\n\r\n    sunburst: {\r\n        name: \"Sunburst\",\r\n        create: draw(\"sunburst\", true),\r\n        update: draw(\"sunburst\", false),\r\n        styleElement: draw(\"sunburst\", false, true),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1,\r\n            names: [\"Size\", \"Color\"]\r\n        },\r\n        selectMode: \"toggle\",\r\n        delete: function() {},\r\n        max_cells: MAX_CELL_COUNT[\"sunburst\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"sunburst\"]\r\n    },\r\n\r\n    heatmap: {\r\n        name: \"Heatmap\",\r\n        create: draw(\"heatmap\", true),\r\n        update: draw(\"heatmap\", false),\r\n        resize: resize,\r\n        initial: {\r\n            type: \"number\",\r\n            count: 1\r\n        },\r\n        selectMode: \"select\",\r\n        delete: delete_chart,\r\n        max_cells: MAX_CELL_COUNT[\"heatmap\"],\r\n        max_columns: MAX_COLUMN_COUNT[\"heatmap\"]\r\n    }\r\n};\r\n\r\nexport default function(...plugins) {\r\n    plugins = plugins.length > 0 ? plugins : Object.keys(PLUGINS);\r\n    for (const plugin of plugins) {\r\n        registerPlugin(plugin, PLUGINS[plugin]);\r\n    }\r\n}\r\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport register from \"./highcharts/highcharts.js\";\nregister();\n"],"sourceRoot":""}