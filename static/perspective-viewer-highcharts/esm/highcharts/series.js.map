{"version":3,"sources":["../../../src/js/highcharts/series.js"],"names":["COLUMN_SEPARATOR_STRING","row_to_series","series","sname","gname","s","sidx","length","is_group","stack","name","connectNulls","data","push","column_to_series","replace_null","str","TreeAxisIterator","constructor","depth","json","top","categories","add_label","path","label","parent","lidx","cidx","Symbol","iterator","row","__ROW_PATH__","ChartAxis","columns","axis","fill_axis","undefined","RowIterator","rows","Object","keys","filter","prop","is_stacked","map","value","substr","lastIndexOf","index","self","indexOf","ColumnIterator","pivot_length","column_names","filtered_data","i","make_y_data","cols","pivots","col","split","join","slice","val","make_y_heatmap_data","js","rows2","TickClean","type","dict","names","clean","isNaN","MakeTick","schema","xaxis_clean","yaxis_clean","color_clean","make","colorRange","tick","x","y","color","color_index","marker","lineColor","fillColor","Math","min","max","colorValue","z","make_col","col_names","num_cols","row_path","color_range","is_line","ticks","size","tooltip_index","tooltip","make_xy_column_data","aggs","col_pivots","data_cols","Infinity","make_tick","groups","clean_row_path","real_index","column_levels","group_name","make_xy_data","prev","group","make_tree_axis","ylabels","ytop","maxdepth","ylabel","l","cat","make_xyz_data","ytree_type","reverse","j","cmax","abs","make_color","aggregates","all","leaf_only","colorvals","leaf","TreeIterator","make_levels","row_pivots","levels","level","borderWidth","dataLabels","enabled","allowOverlap","style","opacity","fontSize","textOutline","make_configs","configs","title","layoutAlgorithm","allowDrillToNode","alternateStartingDirection","make_tree_data","rp","id","idx"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst COLUMN_SEPARATOR_STRING = \"|\";\n\nfunction row_to_series(series, sname, gname) {\n    let s;\n    let sidx = 0;\n    // TODO: figure out what this does\n    for (sidx; sidx < series.length; sidx++) {\n        let is_group = typeof gname === \"undefined\" || series[sidx].stack === gname;\n        if (series[sidx].name == sname && is_group) {\n            s = series[sidx];\n            break;\n        }\n    }\n    if (sidx == series.length) {\n        s = {\n            name: sname,\n            connectNulls: true,\n            data: []\n        };\n        if (gname) {\n            s.stack = gname;\n        }\n        series.push(s);\n    }\n    return s;\n}\n\nfunction column_to_series(data, sname, gname) {\n    let s = {\n        name: sname,\n        connectNulls: true,\n        data\n    };\n\n    if (gname) {\n        s.stack = gname;\n    }\n\n    return s;\n}\n\nfunction replace_null(str) {\n    if (str === null) {\n        return \"-\";\n    } else {\n        return str;\n    }\n}\n\n// Row-based axis generator\nclass TreeAxisIterator {\n    constructor(depth, json) {\n        this.depth = depth;\n        this.json = json;\n        this.top = {name: \"\", depth: 0, categories: []};\n    }\n\n    add_label(path) {\n        let label = {\n            name: path[path.length - 1],\n            depth: path.length,\n            categories: []\n        };\n\n        // Find the correct parent\n        var parent = this.top;\n        for (var lidx = 0; lidx < path.length - 1; lidx++) {\n            for (var cidx = 0; cidx < parent.categories.length; cidx++) {\n                if (parent.categories[cidx].name === path[lidx]) {\n                    parent = parent.categories[cidx];\n                    break;\n                }\n            }\n        }\n        parent.categories.push(label);\n        return label;\n    }\n\n    *[Symbol.iterator]() {\n        // Recursively map and generate axis labels\n        let label = this.top;\n        for (let row of this.json) {\n            let path = row.__ROW_PATH__ || [\"\"];\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n                yield row;\n            }\n        }\n    }\n}\n\nclass ChartAxis {\n    constructor(columns, depth) {\n        this.columns = columns;\n        this.depth = depth;\n        this.axis = {name: \"\", depth: 0, categories: []};\n        this.fill_axis();\n    }\n\n    add_label(path) {\n        let label = {\n            name: path[path.length - 1],\n            depth: path.length,\n            categories: []\n        };\n\n        // Find the correct parent\n        var parent = this.axis;\n        for (var lidx = 0; lidx < path.length - 1; lidx++) {\n            for (var cidx = 0; cidx < parent.categories.length; cidx++) {\n                if (parent.categories[cidx].name === path[lidx]) {\n                    parent = parent.categories[cidx];\n                    break;\n                }\n            }\n        }\n        parent.categories.push(label);\n        return label;\n    }\n\n    fill_axis() {\n        let label = this.axis;\n\n        if (this.columns.__ROW_PATH__ === undefined) {\n            return;\n        }\n\n        for (let path of this.columns.__ROW_PATH__) {\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n                continue;\n            }\n        }\n    }\n}\n\nclass RowIterator {\n    constructor(rows) {\n        this.rows = rows;\n    }\n\n    *[Symbol.iterator]() {\n        for (let row of this.rows) {\n            if (this.columns === undefined) {\n                this.columns = Object.keys(row).filter(prop => prop !== \"__ROW_PATH__\");\n                this.is_stacked =\n                    this.columns.map(value => value.substr(value.lastIndexOf(COLUMN_SEPARATOR_STRING) + 1, value.length)).filter((value, index, self) => self.indexOf(value) === index).length > 1;\n            }\n            yield row;\n        }\n    }\n}\n\nclass ColumnIterator {\n    constructor(columns, pivot_length) {\n        this.columns = columns;\n        this.column_names = Object.keys(this.columns).filter(prop => prop !== \"__ROW_PATH__\");\n        this.is_stacked =\n            this.column_names.map(value => value.substr(value.lastIndexOf(COLUMN_SEPARATOR_STRING) + 1, value.length)).filter((value, index, self) => self.indexOf(value) === index).length > 1;\n        this.pivot_length = pivot_length;\n    }\n\n    *[Symbol.iterator]() {\n        for (let name of this.column_names) {\n            let data = this.columns[name];\n            if (this.columns.__ROW_PATH__) {\n                let filtered_data = [];\n                for (let i = 0; i < data.length; i++) {\n                    if (this.columns.__ROW_PATH__[i].length === this.pivot_length) {\n                        filtered_data.push(data[i]);\n                    }\n                }\n                data = filtered_data;\n            }\n            yield {name, data};\n        }\n    }\n}\n\nexport function make_y_data(cols, pivots) {\n    let series = [];\n    let axis = new ChartAxis(cols, pivots.length);\n    let columns = new ColumnIterator(cols, pivots.length);\n    for (let col of columns) {\n        let sname = col.name.split(COLUMN_SEPARATOR_STRING);\n        let gname = sname[sname.length - 1];\n        if (columns.is_stacked) {\n            sname = sname.join(\", \") || gname;\n        } else {\n            sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n        }\n        let s = column_to_series(\n            col.data.map(val => (val === undefined || val === \"\" ? null : val)),\n            sname,\n            gname\n        );\n        series.push(s);\n    }\n\n    return [series, axis.axis];\n}\n\n// Preserve old behavior for heatmaps\nexport function make_y_heatmap_data(js, pivots) {\n    let rows = new TreeAxisIterator(pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    var series = [];\n\n    for (let row of rows2) {\n        for (let prop of rows2.columns) {\n            let sname = prop.split(COLUMN_SEPARATOR_STRING);\n            let gname = sname[sname.length - 1];\n            if (rows2.is_stacked) {\n                sname = sname.join(\", \") || gname;\n            } else {\n                sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n            }\n            let s = row_to_series(series, sname, gname);\n            let val = row[prop];\n            val = val === undefined || val === \"\" ? null : val;\n            s.data.push(val);\n        }\n    }\n    return [series, rows.top];\n}\n\n/******************************************************************************\n *\n * XY\n */\n\n// TODO: rewrite\nclass TickClean {\n    constructor(type) {\n        this.dict = {};\n        this.names = [];\n        this.type = type;\n    }\n\n    clean(val) {\n        if (this.type === \"string\") {\n            if (!(val in this.dict)) {\n                this.dict[val] = Object.keys(this.dict).length;\n                this.names.push(replace_null(val));\n            }\n            return this.dict[val];\n        } else if (val === undefined || val === \"\" || isNaN(val)) {\n            return null;\n        }\n        return val;\n    }\n}\n\nclass MakeTick {\n    constructor(schema, columns) {\n        this.schema = schema;\n        // TODO: rewrite\n        this.xaxis_clean = new TickClean(schema[columns[0]]);\n        this.yaxis_clean = new TickClean(schema[columns[1]]);\n        this.color_clean = new TickClean(schema[columns[2]]);\n    }\n\n    make(row, columns, colorRange) {\n        let tick = {};\n        tick.x = row[columns[0]];\n        if (tick.x === null && row[columns[1]] === null) {\n            return;\n        }\n        tick.x = this.xaxis_clean.clean(tick.x);\n        tick.y = 0;\n        if (columns.length > 1) {\n            tick.y = row[columns[1]];\n            tick.y = this.yaxis_clean.clean(tick.y);\n        }\n\n        // Color by\n        if (columns.length > 2) {\n            let color = row[columns[2]];\n            if (this.schema[columns[2]] === \"string\") {\n                let color_index = this.color_clean.clean(color);\n                tick.marker = {\n                    lineColor: color_index,\n                    fillColor: color_index\n                };\n            } else {\n                if (!isNaN(color)) {\n                    colorRange[0] = Math.min(colorRange[0], color);\n                    colorRange[1] = Math.max(colorRange[1], color);\n                }\n                tick.colorValue = color;\n            }\n        }\n        // size by\n        if (columns.length > 3) {\n            tick.z = isNaN(row[columns[3]]) ? 1 : row[columns[3]];\n        }\n        if (\"__ROW_PATH__\" in row) {\n            tick.name = row[\"__ROW_PATH__\"].join(\", \");\n        }\n        return tick;\n    }\n\n    make_col(cols, col_names, num_cols, pivot_length, row_path, color_range, is_line = false) {\n        let ticks = [];\n        let data = cols;\n\n        if (cols.length === 0) {\n            return ticks;\n        }\n\n        if (cols.length === undefined) {\n            // assign data to array in name order\n            data = [];\n            for (let name of col_names) {\n                data.push(cols[name]);\n            }\n        }\n\n        for (let i = 0; i < data[0].length; i++) {\n            if (data[0][i] === null || data[0][i] === undefined || data[0][i] === \"\") {\n                continue;\n            }\n\n            let tick = {};\n\n            if (row_path) {\n                if (row_path[i].length !== pivot_length) {\n                    continue;\n                }\n\n                tick.name = row_path[i].join(\", \");\n            }\n\n            // set x-axis\n            tick.x = this.xaxis_clean.clean(data[0][i]);\n\n            if (num_cols > 1) {\n                // set y-axis\n                tick.y = this.yaxis_clean.clean(data[1][i]);\n            }\n\n            if (col_names.length > 2 && col_names[2] !== null) {\n                // set color\n                let color = data[2][i];\n                if (this.schema[col_names[2]] === \"string\") {\n                    if (is_line) {\n                        // This is a line, use colorValue to pass tooltip\n                        tick.colorValue = color;\n                    } else {\n                        // This is a literal color, coerce to unique number;\n                        let color_index = this.color_clean.clean(color);\n                        tick.marker = {\n                            lineColor: color_index,\n                            fillColor: color_index\n                        };\n                        tick.colorValue = color_index;\n                    }\n                } else {\n                    if (!isNaN(color)) {\n                        color_range[0] = Math.min(color_range[0], color);\n                        color_range[1] = Math.max(color_range[1], color);\n                    }\n                    tick.colorValue = color;\n                }\n            }\n\n            if (col_names.length > 3 && col_names[3] !== null) {\n                // set size\n                let size = data[3][i];\n                tick.z = is_line ? size : isNaN(size) ? 1 : size;\n            }\n\n            let tooltip_index = 3;\n            while (typeof col_names[++tooltip_index] === \"string\") {\n                tick.tooltip = [] || tick.tooltip;\n                tick.tooltip.push(data[tooltip_index][i]);\n            }\n            ticks.push(tick);\n        }\n\n        return ticks;\n    }\n}\n\nexport function make_xy_column_data(cols, schema, aggs, pivots, col_pivots) {\n    const columns = new ColumnIterator(cols, pivots.length);\n    let series = [];\n    const data_cols = aggs.filter(x => x !== null);\n    let color_range = [Infinity, -Infinity];\n    let make_tick = new MakeTick(schema, columns.column_names);\n\n    let row_path = columns.columns.__ROW_PATH__;\n\n    if (col_pivots.length === 0) {\n        let ticks = make_tick.make_col(columns.columns, aggs, data_cols.length, columns.pivot_length, row_path, color_range, true);\n\n        let s = column_to_series(ticks, \" \");\n        series.push(s);\n    } else {\n        let groups = {};\n\n        if (row_path) {\n            // remove all total rows\n            let clean_row_path = [];\n\n            for (let i = 0; i < row_path.length; i++) {\n                if (row_path[i].length === columns.pivot_length) {\n                    clean_row_path.push(row_path[i]);\n                }\n            }\n\n            row_path = clean_row_path;\n        }\n\n        let real_index = 0;\n        for (let col of columns) {\n            let column_levels = col.name.split(COLUMN_SEPARATOR_STRING);\n            let group_name = column_levels.slice(0, column_levels.length - 1).join(\", \") || \" \";\n\n            if (groups[group_name] === undefined) {\n                groups[group_name] = [];\n            }\n\n            groups[group_name].push(col.data);\n            while (aggs[++real_index] === null) {\n                groups[group_name].push(null);\n            }\n\n            if (groups[group_name].length === aggs.length) {\n                // generate series as soon as we have enough data\n                let ticks = make_tick.make_col(groups[group_name], aggs, data_cols.length, columns.pivot_length, row_path, color_range);\n                real_index = 0;\n                let s = column_to_series(ticks, group_name);\n                series.push(s);\n            }\n        }\n    }\n\n    return [series, {categories: make_tick.xaxis_clean.names}, color_range, {categories: make_tick.yaxis_clean.names}];\n}\n\nexport function make_xy_data(js, schema, columns, pivots, col_pivots) {\n    let rows = new TreeAxisIterator(pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    let series = [];\n    let colorRange = [Infinity, -Infinity];\n    let make_tick = new MakeTick(schema, columns);\n    if (col_pivots.length === 0) {\n        let sname = \" \";\n        let s = row_to_series(series, sname);\n        for (let row of rows2) {\n            let tick = make_tick.make(row, columns, colorRange);\n            if (tick) {\n                s.data.push(tick);\n            }\n        }\n    } else {\n        let prev,\n            group = [],\n            s;\n        let cols = Object.keys(js[0]).filter(prop => prop !== \"__ROW_PATH__\");\n        for (let prop of cols) {\n            let column_levels = prop.split(COLUMN_SEPARATOR_STRING);\n            let group_name = column_levels.slice(0, column_levels.length - 1).join(\", \") || \" \";\n            if (prev === undefined) {\n                prev = group_name;\n            }\n            s = row_to_series(series, prev);\n            if (prev === group_name) {\n                group.push(prop);\n            } else {\n                for (let row of rows2) {\n                    let tick = make_tick.make(row, group, colorRange);\n                    if (tick) {\n                        s.data.push(tick);\n                    }\n                }\n                prev = group_name;\n                group = [prop];\n            }\n        }\n        for (let row of rows2) {\n            let tick = make_tick.make(row, group, colorRange);\n            if (tick) {\n                s.data.push(tick);\n            }\n        }\n    }\n\n    return [series, {categories: make_tick.xaxis_clean.names}, colorRange, {categories: make_tick.yaxis_clean.names}];\n}\n\n/******************************************************************************\n *\n * XYZ\n */\n\nfunction make_tree_axis(series) {\n    let ylabels = series.map(s => s.name.split(\",\"));\n    let ytop = {name: null, depth: 0, categories: []};\n    let maxdepth = ylabels[0].length;\n\n    for (let i = 0; i < ylabels.length; ++i) {\n        let ylabel = ylabels[i];\n        let parent = ytop;\n\n        for (let depth = 0; depth < ylabel.length; ++depth) {\n            let label = ylabel[depth];\n            if (depth === maxdepth - 1) {\n                parent.categories.push(label);\n            } else {\n                let l = parent.categories.length;\n                if (l > 0 && parent.categories[l - 1].name == label) {\n                    parent = parent.categories[l - 1];\n                } else {\n                    let cat = {name: label, depth: depth + 1, categories: []};\n                    parent.categories.push(cat);\n                    parent = cat;\n                }\n            }\n        }\n    }\n    return ytop;\n}\n\nexport function make_xyz_data(js, pivots, ytree_type) {\n    let [series, top] = make_y_heatmap_data(js, pivots);\n    if (ytree_type !== \"string\" && ytree_type !== undefined) {\n        series = series.reverse();\n    }\n    let colorRange = [Infinity, -Infinity];\n    let ytop = make_tree_axis(series);\n    let data = [];\n    for (let i = 0; i < series[0].data.length; ++i) {\n        for (let j = 0; j < series.length; ++j) {\n            let val = series[j].data[i];\n            data.push([i, j, val]);\n            colorRange[0] = Math.min(colorRange[0], val);\n            colorRange[1] = Math.max(colorRange[1], val);\n        }\n    }\n    if (colorRange[0] * colorRange[1] < 0) {\n        let cmax = Math.max(Math.abs(colorRange[0]), Math.abs(colorRange[1]));\n        colorRange = [-cmax, cmax];\n    }\n    series = data;\n    return [series, top, ytop, colorRange];\n}\n\n/******************************************************************************\n *\n * Tree\n */\n\nfunction make_color(aggregates, all, leaf_only) {\n    let colorRange;\n    if (aggregates.length >= 2) {\n        colorRange = [Infinity, -Infinity];\n        for (let series of all) {\n            let colorvals = series[\"data\"];\n            for (let i = 1; i < colorvals.length; ++i) {\n                if ((leaf_only && colorvals[i].leaf) || !leaf_only) {\n                    colorRange[0] = Math.min(colorRange[0], colorvals[i].colorValue);\n                    colorRange[1] = Math.max(colorRange[1], colorvals[i].colorValue);\n                }\n            }\n            if (colorRange[0] * colorRange[1] < 0) {\n                let cmax = Math.max(Math.abs(colorRange[0]), Math.abs(colorRange[1]));\n                colorRange = [-cmax, cmax];\n            }\n        }\n    }\n    return colorRange;\n}\n\nclass TreeIterator extends TreeAxisIterator {\n    *[Symbol.iterator]() {\n        let label = this.top;\n        for (let row of this.json) {\n            let path = row.__ROW_PATH__ || [\"\"];\n            if (path.length > 0 && path.length < this.depth) {\n                label = this.add_label(path);\n            } else if (path.length >= this.depth) {\n                label.categories.push(replace_null(path[path.length - 1]));\n            }\n            yield row;\n        }\n    }\n}\n\nfunction make_levels(row_pivots) {\n    let levels = [];\n    for (let i = 0; i < row_pivots.length; i++) {\n        levels.push({\n            level: i + 1,\n            borderWidth: (row_pivots.length - i) * 2,\n            dataLabels: {\n                enabled: true,\n                allowOverlap: true,\n                style: {\n                    opacity: [1, 0.3][i] || 0,\n                    fontSize: `${[14, 10][i] || 0}px`,\n                    textOutline: null\n                }\n            }\n        });\n    }\n    return levels;\n}\n\nfunction make_configs(series, levels) {\n    let configs = [];\n    for (let data of series) {\n        let title = data.name.split(COLUMN_SEPARATOR_STRING);\n        configs.push({\n            layoutAlgorithm: \"squarified\",\n            allowDrillToNode: true,\n            alternateStartingDirection: true,\n            data: data.data.slice(1),\n            levels: levels,\n            title: title,\n            stack: data.stack\n        });\n    }\n    return configs;\n}\n\nexport function make_tree_data(js, row_pivots, aggregates, leaf_only) {\n    let rows = new TreeIterator(row_pivots.length, js);\n    let rows2 = new RowIterator(rows);\n    let series = [];\n\n    for (let row of rows2) {\n        let rp = row[\"__ROW_PATH__\"].map(x => (x === null ? \"-\" : x));\n        let id = rp.join(\", \");\n        let name = rp.slice(-1)[0];\n        let parent = rp.slice(0, -1).join(\", \");\n\n        for (let idx = 0; idx < rows2.columns.length; idx++) {\n            let prop = rows2.columns[idx];\n            let sname = prop.split(COLUMN_SEPARATOR_STRING);\n            let gname = sname[sname.length - 1];\n            sname = sname.slice(0, sname.length - 1).join(\", \") || \" \";\n            if (idx % aggregates.length === 0) {\n                let s = row_to_series(series, sname, gname);\n                s.data.push({\n                    id: id,\n                    name: name,\n                    value: row[prop],\n                    colorValue: aggregates.length > 1 ? row[rows2.columns[idx + 1]] : undefined,\n                    parent: parent,\n                    leaf: row.__ROW_PATH__.length === row_pivots.length\n                });\n            }\n        }\n    }\n\n    let levels = make_levels(row_pivots);\n    let configs = make_configs(series, levels);\n    let colorRange = make_color(aggregates, series, leaf_only, row_pivots);\n    return [configs, rows.top, colorRange];\n}\n"],"file":"series.js"}